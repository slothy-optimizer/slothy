:py:mod:`slothy.targets.aarch64.aarch64_neon`
=============================================

.. py:module:: slothy.targets.aarch64.aarch64_neon

.. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon
   :allowtitles:

Module Contents
---------------

Classes
~~~~~~~

.. list-table::
   :class: autosummary longtable
   :align: left

   * - :py:obj:`RegisterType <slothy.targets.aarch64.aarch64_neon.RegisterType>`
     -
   * - :py:obj:`Branch <slothy.targets.aarch64.aarch64_neon.Branch>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.Branch
          :summary:
   * - :py:obj:`SubLoop <slothy.targets.aarch64.aarch64_neon.SubLoop>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.SubLoop
          :summary:
   * - :py:obj:`SubsLoop <slothy.targets.aarch64.aarch64_neon.SubsLoop>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.SubsLoop
          :summary:
   * - :py:obj:`Instruction <slothy.targets.aarch64.aarch64_neon.Instruction>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.Instruction
          :summary:
   * - :py:obj:`AArch64Instruction <slothy.targets.aarch64.aarch64_neon.AArch64Instruction>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.AArch64Instruction
          :summary:
   * - :py:obj:`qsave <slothy.targets.aarch64.aarch64_neon.qsave>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.qsave
          :summary:
   * - :py:obj:`qrestore <slothy.targets.aarch64.aarch64_neon.qrestore>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.qrestore
          :summary:
   * - :py:obj:`save <slothy.targets.aarch64.aarch64_neon.save>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.save
          :summary:
   * - :py:obj:`restore <slothy.targets.aarch64.aarch64_neon.restore>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.restore
          :summary:
   * - :py:obj:`nop <slothy.targets.aarch64.aarch64_neon.nop>`
     -
   * - :py:obj:`vadd <slothy.targets.aarch64.aarch64_neon.vadd>`
     -
   * - :py:obj:`vsub <slothy.targets.aarch64.aarch64_neon.vsub>`
     -
   * - :py:obj:`Ldr_Q <slothy.targets.aarch64.aarch64_neon.Ldr_Q>`
     -
   * - :py:obj:`Ldp_Q <slothy.targets.aarch64.aarch64_neon.Ldp_Q>`
     -
   * - :py:obj:`d_ldp_sp_imm <slothy.targets.aarch64.aarch64_neon.d_ldp_sp_imm>`
     -
   * - :py:obj:`q_ldr <slothy.targets.aarch64.aarch64_neon.q_ldr>`
     -
   * - :py:obj:`q_ld1 <slothy.targets.aarch64.aarch64_neon.q_ld1>`
     -
   * - :py:obj:`prefetch <slothy.targets.aarch64.aarch64_neon.prefetch>`
     -
   * - :py:obj:`q_ldr_with_imm_hint <slothy.targets.aarch64.aarch64_neon.q_ldr_with_imm_hint>`
     -
   * - :py:obj:`b_ldr_stack_with_inc <slothy.targets.aarch64.aarch64_neon.b_ldr_stack_with_inc>`
     -
   * - :py:obj:`d_ldr_stack_with_inc <slothy.targets.aarch64.aarch64_neon.d_ldr_stack_with_inc>`
     -
   * - :py:obj:`Q_Ld2_Lane_Post_Inc <slothy.targets.aarch64.aarch64_neon.Q_Ld2_Lane_Post_Inc>`
     -
   * - :py:obj:`q_ld2_lane_post_inc <slothy.targets.aarch64.aarch64_neon.q_ld2_lane_post_inc>`
     -
   * - :py:obj:`q_ld2_lane_post_inc_force_output <slothy.targets.aarch64.aarch64_neon.q_ld2_lane_post_inc_force_output>`
     -
   * - :py:obj:`q_ldr1_stack <slothy.targets.aarch64.aarch64_neon.q_ldr1_stack>`
     -
   * - :py:obj:`q_ldr1_post_inc <slothy.targets.aarch64.aarch64_neon.q_ldr1_post_inc>`
     -
   * - :py:obj:`q_ldr_stack_with_inc <slothy.targets.aarch64.aarch64_neon.q_ldr_stack_with_inc>`
     -
   * - :py:obj:`q_ldr_with_inc <slothy.targets.aarch64.aarch64_neon.q_ldr_with_inc>`
     -
   * - :py:obj:`q_ld1_with_inc <slothy.targets.aarch64.aarch64_neon.q_ld1_with_inc>`
     -
   * - :py:obj:`q_ldp_with_inc <slothy.targets.aarch64.aarch64_neon.q_ldp_with_inc>`
     -
   * - :py:obj:`q_ldr_with_inc_writeback <slothy.targets.aarch64.aarch64_neon.q_ldr_with_inc_writeback>`
     -
   * - :py:obj:`q_ldr_with_postinc <slothy.targets.aarch64.aarch64_neon.q_ldr_with_postinc>`
     -
   * - :py:obj:`q_ld1_with_postinc <slothy.targets.aarch64.aarch64_neon.q_ld1_with_postinc>`
     -
   * - :py:obj:`q_ldp_with_postinc <slothy.targets.aarch64.aarch64_neon.q_ldp_with_postinc>`
     -
   * - :py:obj:`Str_Q <slothy.targets.aarch64.aarch64_neon.Str_Q>`
     -
   * - :py:obj:`Stp_Q <slothy.targets.aarch64.aarch64_neon.Stp_Q>`
     -
   * - :py:obj:`q_str <slothy.targets.aarch64.aarch64_neon.q_str>`
     -
   * - :py:obj:`q_str_with_imm_hint <slothy.targets.aarch64.aarch64_neon.q_str_with_imm_hint>`
     -
   * - :py:obj:`q_str_with_inc <slothy.targets.aarch64.aarch64_neon.q_str_with_inc>`
     -
   * - :py:obj:`d_str_stack_with_inc <slothy.targets.aarch64.aarch64_neon.d_str_stack_with_inc>`
     -
   * - :py:obj:`q_str_stack_with_inc <slothy.targets.aarch64.aarch64_neon.q_str_stack_with_inc>`
     -
   * - :py:obj:`d_stp_stack_with_inc <slothy.targets.aarch64.aarch64_neon.d_stp_stack_with_inc>`
     -
   * - :py:obj:`q_stp_stack_with_inc <slothy.targets.aarch64.aarch64_neon.q_stp_stack_with_inc>`
     -
   * - :py:obj:`q_stp_with_inc <slothy.targets.aarch64.aarch64_neon.q_stp_with_inc>`
     -
   * - :py:obj:`q_str_with_inc_writeback <slothy.targets.aarch64.aarch64_neon.q_str_with_inc_writeback>`
     -
   * - :py:obj:`q_str_with_postinc <slothy.targets.aarch64.aarch64_neon.q_str_with_postinc>`
     -
   * - :py:obj:`q_st1_with_postinc <slothy.targets.aarch64.aarch64_neon.q_st1_with_postinc>`
     -
   * - :py:obj:`q_stp_with_postinc <slothy.targets.aarch64.aarch64_neon.q_stp_with_postinc>`
     -
   * - :py:obj:`q_st1_2_with_postinc <slothy.targets.aarch64.aarch64_neon.q_st1_2_with_postinc>`
     -
   * - :py:obj:`Ldr_X <slothy.targets.aarch64.aarch64_neon.Ldr_X>`
     -
   * - :py:obj:`x_ldr <slothy.targets.aarch64.aarch64_neon.x_ldr>`
     -
   * - :py:obj:`x_ldr_with_imm <slothy.targets.aarch64.aarch64_neon.x_ldr_with_imm>`
     -
   * - :py:obj:`x_ldr_with_imm_uxtw <slothy.targets.aarch64.aarch64_neon.x_ldr_with_imm_uxtw>`
     -
   * - :py:obj:`x_ldr_with_imm_lsl <slothy.targets.aarch64.aarch64_neon.x_ldr_with_imm_lsl>`
     -
   * - :py:obj:`x_ldr_with_postinc <slothy.targets.aarch64.aarch64_neon.x_ldr_with_postinc>`
     -
   * - :py:obj:`x_ldr_stack <slothy.targets.aarch64.aarch64_neon.x_ldr_stack>`
     -
   * - :py:obj:`x_ldr_stack_imm <slothy.targets.aarch64.aarch64_neon.x_ldr_stack_imm>`
     -
   * - :py:obj:`x_ldr_stack_imm_with_hint <slothy.targets.aarch64.aarch64_neon.x_ldr_stack_imm_with_hint>`
     -
   * - :py:obj:`x_ldr_imm_with_hint <slothy.targets.aarch64.aarch64_neon.x_ldr_imm_with_hint>`
     -
   * - :py:obj:`Ldp_X <slothy.targets.aarch64.aarch64_neon.Ldp_X>`
     -
   * - :py:obj:`x_ldp <slothy.targets.aarch64.aarch64_neon.x_ldp>`
     -
   * - :py:obj:`x_ldp_with_imm_sp_xzr <slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_sp_xzr>`
     -
   * - :py:obj:`x_ldp_with_imm_sp <slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_sp>`
     -
   * - :py:obj:`x_ldp_with_sp <slothy.targets.aarch64.aarch64_neon.x_ldp_with_sp>`
     -
   * - :py:obj:`x_ldp_with_inc <slothy.targets.aarch64.aarch64_neon.x_ldp_with_inc>`
     -
   * - :py:obj:`x_ldp_with_inc_writeback <slothy.targets.aarch64.aarch64_neon.x_ldp_with_inc_writeback>`
     -
   * - :py:obj:`x_ldp_with_postinc_writeback <slothy.targets.aarch64.aarch64_neon.x_ldp_with_postinc_writeback>`
     -
   * - :py:obj:`x_ldp_with_imm_hint <slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_hint>`
     -
   * - :py:obj:`x_ldp_sp_with_imm_hint <slothy.targets.aarch64.aarch64_neon.x_ldp_sp_with_imm_hint>`
     -
   * - :py:obj:`x_ldp_sp_with_imm_hint2 <slothy.targets.aarch64.aarch64_neon.x_ldp_sp_with_imm_hint2>`
     -
   * - :py:obj:`x_ldp_with_imm_hint2 <slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_hint2>`
     -
   * - :py:obj:`ldr_sxtw_wform <slothy.targets.aarch64.aarch64_neon.ldr_sxtw_wform>`
     -
   * - :py:obj:`lsr_wform <slothy.targets.aarch64.aarch64_neon.lsr_wform>`
     -
   * - :py:obj:`asr_wform <slothy.targets.aarch64.aarch64_neon.asr_wform>`
     -
   * - :py:obj:`eor_wform <slothy.targets.aarch64.aarch64_neon.eor_wform>`
     -
   * - :py:obj:`AArch64BasicArithmetic <slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic>`
     -
   * - :py:obj:`subs_wform <slothy.targets.aarch64.aarch64_neon.subs_wform>`
     -
   * - :py:obj:`subs_imm <slothy.targets.aarch64.aarch64_neon.subs_imm>`
     -
   * - :py:obj:`sub_imm <slothy.targets.aarch64.aarch64_neon.sub_imm>`
     -
   * - :py:obj:`add_imm <slothy.targets.aarch64.aarch64_neon.add_imm>`
     -
   * - :py:obj:`add_sp_imm <slothy.targets.aarch64.aarch64_neon.add_sp_imm>`
     -
   * - :py:obj:`neg <slothy.targets.aarch64.aarch64_neon.neg>`
     -
   * - :py:obj:`negs <slothy.targets.aarch64.aarch64_neon.negs>`
     -
   * - :py:obj:`ngc_zero <slothy.targets.aarch64.aarch64_neon.ngc_zero>`
     -
   * - :py:obj:`ngcs <slothy.targets.aarch64.aarch64_neon.ngcs>`
     -
   * - :py:obj:`ngcs_zero <slothy.targets.aarch64.aarch64_neon.ngcs_zero>`
     -
   * - :py:obj:`adds <slothy.targets.aarch64.aarch64_neon.adds>`
     -
   * - :py:obj:`adds_to_zero <slothy.targets.aarch64.aarch64_neon.adds_to_zero>`
     -
   * - :py:obj:`adds_imm_to_zero <slothy.targets.aarch64.aarch64_neon.adds_imm_to_zero>`
     -
   * - :py:obj:`subs_twoarg <slothy.targets.aarch64.aarch64_neon.subs_twoarg>`
     -
   * - :py:obj:`adds_twoarg <slothy.targets.aarch64.aarch64_neon.adds_twoarg>`
     -
   * - :py:obj:`adcs <slothy.targets.aarch64.aarch64_neon.adcs>`
     -
   * - :py:obj:`sbcs <slothy.targets.aarch64.aarch64_neon.sbcs>`
     -
   * - :py:obj:`sbcs_zero <slothy.targets.aarch64.aarch64_neon.sbcs_zero>`
     -
   * - :py:obj:`sbcs_to_zero <slothy.targets.aarch64.aarch64_neon.sbcs_to_zero>`
     -
   * - :py:obj:`sbcs_zero_to_zero <slothy.targets.aarch64.aarch64_neon.sbcs_zero_to_zero>`
     -
   * - :py:obj:`sbc <slothy.targets.aarch64.aarch64_neon.sbc>`
     -
   * - :py:obj:`sbc_zero_r <slothy.targets.aarch64.aarch64_neon.sbc_zero_r>`
     -
   * - :py:obj:`adcs_zero_r <slothy.targets.aarch64.aarch64_neon.adcs_zero_r>`
     -
   * - :py:obj:`adcs_zero_l <slothy.targets.aarch64.aarch64_neon.adcs_zero_l>`
     -
   * - :py:obj:`adcs_zero2 <slothy.targets.aarch64.aarch64_neon.adcs_zero2>`
     -
   * - :py:obj:`adcs_to_zero <slothy.targets.aarch64.aarch64_neon.adcs_to_zero>`
     -
   * - :py:obj:`adcs_zero_r_to_zero <slothy.targets.aarch64.aarch64_neon.adcs_zero_r_to_zero>`
     -
   * - :py:obj:`adc <slothy.targets.aarch64.aarch64_neon.adc>`
     -
   * - :py:obj:`adc_zero2 <slothy.targets.aarch64.aarch64_neon.adc_zero2>`
     -
   * - :py:obj:`adc_zero_r <slothy.targets.aarch64.aarch64_neon.adc_zero_r>`
     -
   * - :py:obj:`adc_zero_l <slothy.targets.aarch64.aarch64_neon.adc_zero_l>`
     -
   * - :py:obj:`add <slothy.targets.aarch64.aarch64_neon.add>`
     -
   * - :py:obj:`add2 <slothy.targets.aarch64.aarch64_neon.add2>`
     -
   * - :py:obj:`add_w_imm <slothy.targets.aarch64.aarch64_neon.add_w_imm>`
     -
   * - :py:obj:`sub <slothy.targets.aarch64.aarch64_neon.sub>`
     -
   * - :py:obj:`AArch64ShiftedArithmetic <slothy.targets.aarch64.aarch64_neon.AArch64ShiftedArithmetic>`
     -
   * - :py:obj:`eor_ror <slothy.targets.aarch64.aarch64_neon.eor_ror>`
     -
   * - :py:obj:`bic_ror <slothy.targets.aarch64.aarch64_neon.bic_ror>`
     -
   * - :py:obj:`add_lsl <slothy.targets.aarch64.aarch64_neon.add_lsl>`
     -
   * - :py:obj:`add_lsr <slothy.targets.aarch64.aarch64_neon.add_lsr>`
     -
   * - :py:obj:`adds_lsl <slothy.targets.aarch64.aarch64_neon.adds_lsl>`
     -
   * - :py:obj:`adds_lsr <slothy.targets.aarch64.aarch64_neon.adds_lsr>`
     -
   * - :py:obj:`add_asr <slothy.targets.aarch64.aarch64_neon.add_asr>`
     -
   * - :py:obj:`add_imm_lsl <slothy.targets.aarch64.aarch64_neon.add_imm_lsl>`
     -
   * - :py:obj:`AArch64Shift <slothy.targets.aarch64.aarch64_neon.AArch64Shift>`
     -
   * - :py:obj:`lsr <slothy.targets.aarch64.aarch64_neon.lsr>`
     -
   * - :py:obj:`lsr_variable <slothy.targets.aarch64.aarch64_neon.lsr_variable>`
     -
   * - :py:obj:`lsl <slothy.targets.aarch64.aarch64_neon.lsl>`
     -
   * - :py:obj:`ror <slothy.targets.aarch64.aarch64_neon.ror>`
     -
   * - :py:obj:`asr <slothy.targets.aarch64.aarch64_neon.asr>`
     -
   * - :py:obj:`AArch64Logical <slothy.targets.aarch64.aarch64_neon.AArch64Logical>`
     -
   * - :py:obj:`rev_w <slothy.targets.aarch64.aarch64_neon.rev_w>`
     -
   * - :py:obj:`eor <slothy.targets.aarch64.aarch64_neon.eor>`
     -
   * - :py:obj:`orr <slothy.targets.aarch64.aarch64_neon.orr>`
     -
   * - :py:obj:`orr_w <slothy.targets.aarch64.aarch64_neon.orr_w>`
     -
   * - :py:obj:`bfi <slothy.targets.aarch64.aarch64_neon.bfi>`
     -
   * - :py:obj:`and_imm <slothy.targets.aarch64.aarch64_neon.and_imm>`
     -
   * - :py:obj:`ands_imm <slothy.targets.aarch64.aarch64_neon.ands_imm>`
     -
   * - :py:obj:`ands_xzr_imm <slothy.targets.aarch64.aarch64_neon.ands_xzr_imm>`
     -
   * - :py:obj:`and_twoarg <slothy.targets.aarch64.aarch64_neon.and_twoarg>`
     -
   * - :py:obj:`bic <slothy.targets.aarch64.aarch64_neon.bic>`
     -
   * - :py:obj:`orr_imm <slothy.targets.aarch64.aarch64_neon.orr_imm>`
     -
   * - :py:obj:`sbfx <slothy.targets.aarch64.aarch64_neon.sbfx>`
     -
   * - :py:obj:`ubfx <slothy.targets.aarch64.aarch64_neon.ubfx>`
     -
   * - :py:obj:`extr <slothy.targets.aarch64.aarch64_neon.extr>`
     -
   * - :py:obj:`AArch64LogicalShifted <slothy.targets.aarch64.aarch64_neon.AArch64LogicalShifted>`
     -
   * - :py:obj:`orr_shifted <slothy.targets.aarch64.aarch64_neon.orr_shifted>`
     -
   * - :py:obj:`orr_shifted_asr_w <slothy.targets.aarch64.aarch64_neon.orr_shifted_asr_w>`
     -
   * - :py:obj:`orr_shifted_asr <slothy.targets.aarch64.aarch64_neon.orr_shifted_asr>`
     -
   * - :py:obj:`eor_shifted_lsl <slothy.targets.aarch64.aarch64_neon.eor_shifted_lsl>`
     -
   * - :py:obj:`AArch64ConditionalCompare <slothy.targets.aarch64.aarch64_neon.AArch64ConditionalCompare>`
     -
   * - :py:obj:`ccmp_xzr <slothy.targets.aarch64.aarch64_neon.ccmp_xzr>`
     -
   * - :py:obj:`ccmp <slothy.targets.aarch64.aarch64_neon.ccmp>`
     -
   * - :py:obj:`AArch64ConditionalSelect <slothy.targets.aarch64.aarch64_neon.AArch64ConditionalSelect>`
     -
   * - :py:obj:`cneg <slothy.targets.aarch64.aarch64_neon.cneg>`
     -
   * - :py:obj:`csel_xzr_ne <slothy.targets.aarch64.aarch64_neon.csel_xzr_ne>`
     -
   * - :py:obj:`csel_xzr2_ne <slothy.targets.aarch64.aarch64_neon.csel_xzr2_ne>`
     -
   * - :py:obj:`csel_ne <slothy.targets.aarch64.aarch64_neon.csel_ne>`
     -
   * - :py:obj:`cinv <slothy.targets.aarch64.aarch64_neon.cinv>`
     -
   * - :py:obj:`cinc <slothy.targets.aarch64.aarch64_neon.cinc>`
     -
   * - :py:obj:`csetm <slothy.targets.aarch64.aarch64_neon.csetm>`
     -
   * - :py:obj:`cset <slothy.targets.aarch64.aarch64_neon.cset>`
     -
   * - :py:obj:`cmn <slothy.targets.aarch64.aarch64_neon.cmn>`
     -
   * - :py:obj:`cmn_imm <slothy.targets.aarch64.aarch64_neon.cmn_imm>`
     -
   * - :py:obj:`ldr_const <slothy.targets.aarch64.aarch64_neon.ldr_const>`
     -
   * - :py:obj:`movk_imm <slothy.targets.aarch64.aarch64_neon.movk_imm>`
     -
   * - :py:obj:`mov <slothy.targets.aarch64.aarch64_neon.mov>`
     -
   * - :py:obj:`AArch64Move <slothy.targets.aarch64.aarch64_neon.AArch64Move>`
     -
   * - :py:obj:`mov_imm <slothy.targets.aarch64.aarch64_neon.mov_imm>`
     -
   * - :py:obj:`movw_imm <slothy.targets.aarch64.aarch64_neon.movw_imm>`
     -
   * - :py:obj:`mvn_xzr <slothy.targets.aarch64.aarch64_neon.mvn_xzr>`
     -
   * - :py:obj:`mov_xform <slothy.targets.aarch64.aarch64_neon.mov_xform>`
     -
   * - :py:obj:`umull_wform <slothy.targets.aarch64.aarch64_neon.umull_wform>`
     -
   * - :py:obj:`umaddl_wform <slothy.targets.aarch64.aarch64_neon.umaddl_wform>`
     -
   * - :py:obj:`mul_wform <slothy.targets.aarch64.aarch64_neon.mul_wform>`
     -
   * - :py:obj:`AArch64HighMultiply <slothy.targets.aarch64.aarch64_neon.AArch64HighMultiply>`
     -
   * - :py:obj:`umulh_xform <slothy.targets.aarch64.aarch64_neon.umulh_xform>`
     -
   * - :py:obj:`smulh_xform <slothy.targets.aarch64.aarch64_neon.smulh_xform>`
     -
   * - :py:obj:`AArch64Multiply <slothy.targets.aarch64.aarch64_neon.AArch64Multiply>`
     -
   * - :py:obj:`mul_xform <slothy.targets.aarch64.aarch64_neon.mul_xform>`
     -
   * - :py:obj:`madd_xform <slothy.targets.aarch64.aarch64_neon.madd_xform>`
     -
   * - :py:obj:`mneg_xform <slothy.targets.aarch64.aarch64_neon.mneg_xform>`
     -
   * - :py:obj:`msub_xform <slothy.targets.aarch64.aarch64_neon.msub_xform>`
     -
   * - :py:obj:`and_imm_wform <slothy.targets.aarch64.aarch64_neon.and_imm_wform>`
     -
   * - :py:obj:`Tst <slothy.targets.aarch64.aarch64_neon.Tst>`
     -
   * - :py:obj:`tst_wform <slothy.targets.aarch64.aarch64_neon.tst_wform>`
     -
   * - :py:obj:`tst_imm_xform <slothy.targets.aarch64.aarch64_neon.tst_imm_xform>`
     -
   * - :py:obj:`tst_xform <slothy.targets.aarch64.aarch64_neon.tst_xform>`
     -
   * - :py:obj:`cmp <slothy.targets.aarch64.aarch64_neon.cmp>`
     -
   * - :py:obj:`cmp_xzr <slothy.targets.aarch64.aarch64_neon.cmp_xzr>`
     -
   * - :py:obj:`cmp_xzr2 <slothy.targets.aarch64.aarch64_neon.cmp_xzr2>`
     -
   * - :py:obj:`cmp_imm <slothy.targets.aarch64.aarch64_neon.cmp_imm>`
     -
   * - :py:obj:`vmov <slothy.targets.aarch64.aarch64_neon.vmov>`
     -
   * - :py:obj:`vmovi <slothy.targets.aarch64.aarch64_neon.vmovi>`
     -
   * - :py:obj:`vxtn <slothy.targets.aarch64.aarch64_neon.vxtn>`
     -
   * - :py:obj:`Vrev <slothy.targets.aarch64.aarch64_neon.Vrev>`
     -
   * - :py:obj:`rev64 <slothy.targets.aarch64.aarch64_neon.rev64>`
     -
   * - :py:obj:`rev32 <slothy.targets.aarch64.aarch64_neon.rev32>`
     -
   * - :py:obj:`uaddlp <slothy.targets.aarch64.aarch64_neon.uaddlp>`
     -
   * - :py:obj:`vand <slothy.targets.aarch64.aarch64_neon.vand>`
     -
   * - :py:obj:`vbic <slothy.targets.aarch64.aarch64_neon.vbic>`
     -
   * - :py:obj:`Vzip <slothy.targets.aarch64.aarch64_neon.Vzip>`
     -
   * - :py:obj:`vzip1 <slothy.targets.aarch64.aarch64_neon.vzip1>`
     -
   * - :py:obj:`vzip2 <slothy.targets.aarch64.aarch64_neon.vzip2>`
     -
   * - :py:obj:`vuzp1 <slothy.targets.aarch64.aarch64_neon.vuzp1>`
     -
   * - :py:obj:`vuzp2 <slothy.targets.aarch64.aarch64_neon.vuzp2>`
     -
   * - :py:obj:`vuxtl <slothy.targets.aarch64.aarch64_neon.vuxtl>`
     -
   * - :py:obj:`Vqdmulh <slothy.targets.aarch64.aarch64_neon.Vqdmulh>`
     -
   * - :py:obj:`vqrdmulh <slothy.targets.aarch64.aarch64_neon.vqrdmulh>`
     -
   * - :py:obj:`vqrdmulh_lane <slothy.targets.aarch64.aarch64_neon.vqrdmulh_lane>`
     -
   * - :py:obj:`vqdmulh_lane <slothy.targets.aarch64.aarch64_neon.vqdmulh_lane>`
     -
   * - :py:obj:`fcsel_dform <slothy.targets.aarch64.aarch64_neon.fcsel_dform>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.fcsel_dform
          :summary:
   * - :py:obj:`Vins <slothy.targets.aarch64.aarch64_neon.Vins>`
     -
   * - :py:obj:`vins_d <slothy.targets.aarch64.aarch64_neon.vins_d>`
     -
   * - :py:obj:`vins_d_force_output <slothy.targets.aarch64.aarch64_neon.vins_d_force_output>`
     -
   * - :py:obj:`Mov_xtov_d <slothy.targets.aarch64.aarch64_neon.Mov_xtov_d>`
     -
   * - :py:obj:`mov_xtov_d <slothy.targets.aarch64.aarch64_neon.mov_xtov_d>`
     -
   * - :py:obj:`mov_xtov_d_xzr <slothy.targets.aarch64.aarch64_neon.mov_xtov_d_xzr>`
     -
   * - :py:obj:`mov_b00 <slothy.targets.aarch64.aarch64_neon.mov_b00>`
     -
   * - :py:obj:`mov_d01 <slothy.targets.aarch64.aarch64_neon.mov_d01>`
     -
   * - :py:obj:`SHA3Instruction <slothy.targets.aarch64.aarch64_neon.SHA3Instruction>`
     -
   * - :py:obj:`vrax1 <slothy.targets.aarch64.aarch64_neon.vrax1>`
     -
   * - :py:obj:`veor3 <slothy.targets.aarch64.aarch64_neon.veor3>`
     -
   * - :py:obj:`vbcax <slothy.targets.aarch64.aarch64_neon.vbcax>`
     -
   * - :py:obj:`vxar <slothy.targets.aarch64.aarch64_neon.vxar>`
     -
   * - :py:obj:`AArch64NeonLogical <slothy.targets.aarch64.aarch64_neon.AArch64NeonLogical>`
     -
   * - :py:obj:`veor <slothy.targets.aarch64.aarch64_neon.veor>`
     -
   * - :py:obj:`vbif <slothy.targets.aarch64.aarch64_neon.vbif>`
     -
   * - :py:obj:`vmov_d <slothy.targets.aarch64.aarch64_neon.vmov_d>`
     -
   * - :py:obj:`vext <slothy.targets.aarch64.aarch64_neon.vext>`
     -
   * - :py:obj:`vsri <slothy.targets.aarch64.aarch64_neon.vsri>`
     -
   * - :py:obj:`Vmul <slothy.targets.aarch64.aarch64_neon.Vmul>`
     -
   * - :py:obj:`vmul <slothy.targets.aarch64.aarch64_neon.vmul>`
     -
   * - :py:obj:`vmul_lane <slothy.targets.aarch64.aarch64_neon.vmul_lane>`
     -
   * - :py:obj:`Vmla <slothy.targets.aarch64.aarch64_neon.Vmla>`
     -
   * - :py:obj:`vmla <slothy.targets.aarch64.aarch64_neon.vmla>`
     -
   * - :py:obj:`vmla_lane <slothy.targets.aarch64.aarch64_neon.vmla_lane>`
     -
   * - :py:obj:`vmls <slothy.targets.aarch64.aarch64_neon.vmls>`
     -
   * - :py:obj:`vmls_lane <slothy.targets.aarch64.aarch64_neon.vmls_lane>`
     -
   * - :py:obj:`vdup <slothy.targets.aarch64.aarch64_neon.vdup>`
     -
   * - :py:obj:`Vmull <slothy.targets.aarch64.aarch64_neon.Vmull>`
     -
   * - :py:obj:`vmull <slothy.targets.aarch64.aarch64_neon.vmull>`
     -
   * - :py:obj:`vmull2 <slothy.targets.aarch64.aarch64_neon.vmull2>`
     -
   * - :py:obj:`vsmull <slothy.targets.aarch64.aarch64_neon.vsmull>`
     -
   * - :py:obj:`vsmull2 <slothy.targets.aarch64.aarch64_neon.vsmull2>`
     -
   * - :py:obj:`Vmlal <slothy.targets.aarch64.aarch64_neon.Vmlal>`
     -
   * - :py:obj:`vmlal <slothy.targets.aarch64.aarch64_neon.vmlal>`
     -
   * - :py:obj:`vsmlal <slothy.targets.aarch64.aarch64_neon.vsmlal>`
     -
   * - :py:obj:`vsmlal2 <slothy.targets.aarch64.aarch64_neon.vsmlal2>`
     -
   * - :py:obj:`VShiftImmediateBasic <slothy.targets.aarch64.aarch64_neon.VShiftImmediateBasic>`
     -
   * - :py:obj:`VShiftImmediateRounding <slothy.targets.aarch64.aarch64_neon.VShiftImmediateRounding>`
     -
   * - :py:obj:`vsrshr <slothy.targets.aarch64.aarch64_neon.vsrshr>`
     -
   * - :py:obj:`vurshr <slothy.targets.aarch64.aarch64_neon.vurshr>`
     -
   * - :py:obj:`vsshr <slothy.targets.aarch64.aarch64_neon.vsshr>`
     -
   * - :py:obj:`vushr <slothy.targets.aarch64.aarch64_neon.vushr>`
     -
   * - :py:obj:`vshl <slothy.targets.aarch64.aarch64_neon.vshl>`
     -
   * - :py:obj:`vshl_d <slothy.targets.aarch64.aarch64_neon.vshl_d>`
     -
   * - :py:obj:`vshli <slothy.targets.aarch64.aarch64_neon.vshli>`
     -
   * - :py:obj:`vusra <slothy.targets.aarch64.aarch64_neon.vusra>`
     -
   * - :py:obj:`vshrn <slothy.targets.aarch64.aarch64_neon.vshrn>`
     -
   * - :py:obj:`VecToGprMov <slothy.targets.aarch64.aarch64_neon.VecToGprMov>`
     -
   * - :py:obj:`umov_d <slothy.targets.aarch64.aarch64_neon.umov_d>`
     -
   * - :py:obj:`mov_d <slothy.targets.aarch64.aarch64_neon.mov_d>`
     -
   * - :py:obj:`Fmov <slothy.targets.aarch64.aarch64_neon.Fmov>`
     -
   * - :py:obj:`fmov_0 <slothy.targets.aarch64.aarch64_neon.fmov_0>`
     -
   * - :py:obj:`fmov_0_force_output <slothy.targets.aarch64.aarch64_neon.fmov_0_force_output>`
     -
   * - :py:obj:`fmov_1 <slothy.targets.aarch64.aarch64_neon.fmov_1>`
     -
   * - :py:obj:`fmov_1_force_output <slothy.targets.aarch64.aarch64_neon.fmov_1_force_output>`
     -
   * - :py:obj:`Transpose <slothy.targets.aarch64.aarch64_neon.Transpose>`
     -
   * - :py:obj:`trn1 <slothy.targets.aarch64.aarch64_neon.trn1>`
     -
   * - :py:obj:`trn2 <slothy.targets.aarch64.aarch64_neon.trn2>`
     -
   * - :py:obj:`AESInstruction <slothy.targets.aarch64.aarch64_neon.AESInstruction>`
     -
   * - :py:obj:`aesr <slothy.targets.aarch64.aarch64_neon.aesr>`
     -
   * - :py:obj:`aesr_x2 <slothy.targets.aarch64.aarch64_neon.aesr_x2>`
     -
   * - :py:obj:`aesr_x4 <slothy.targets.aarch64.aarch64_neon.aesr_x4>`
     -
   * - :py:obj:`aese_x4 <slothy.targets.aarch64.aarch64_neon.aese_x4>`
     -
   * - :py:obj:`aese <slothy.targets.aarch64.aarch64_neon.aese>`
     -
   * - :py:obj:`aesmc <slothy.targets.aarch64.aarch64_neon.aesmc>`
     -
   * - :py:obj:`pmull1_q <slothy.targets.aarch64.aarch64_neon.pmull1_q>`
     -
   * - :py:obj:`pmull2_q <slothy.targets.aarch64.aarch64_neon.pmull2_q>`
     -
   * - :py:obj:`Str_X <slothy.targets.aarch64.aarch64_neon.Str_X>`
     -
   * - :py:obj:`x_str <slothy.targets.aarch64.aarch64_neon.x_str>`
     -
   * - :py:obj:`x_str_imm <slothy.targets.aarch64.aarch64_neon.x_str_imm>`
     -
   * - :py:obj:`w_str_imm <slothy.targets.aarch64.aarch64_neon.w_str_imm>`
     -
   * - :py:obj:`w_str_sp_imm <slothy.targets.aarch64.aarch64_neon.w_str_sp_imm>`
     -
   * - :py:obj:`x_str_postinc <slothy.targets.aarch64.aarch64_neon.x_str_postinc>`
     -
   * - :py:obj:`x_str_sp_imm <slothy.targets.aarch64.aarch64_neon.x_str_sp_imm>`
     -
   * - :py:obj:`x_str_sp_imm_hint <slothy.targets.aarch64.aarch64_neon.x_str_sp_imm_hint>`
     -
   * - :py:obj:`x_str_imm_hint <slothy.targets.aarch64.aarch64_neon.x_str_imm_hint>`
     -
   * - :py:obj:`Stp_X <slothy.targets.aarch64.aarch64_neon.Stp_X>`
     -
   * - :py:obj:`x_stp <slothy.targets.aarch64.aarch64_neon.x_stp>`
     -
   * - :py:obj:`x_stp_with_imm_xzr_sp <slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_xzr_sp>`
     -
   * - :py:obj:`w_stp_with_imm_sp <slothy.targets.aarch64.aarch64_neon.w_stp_with_imm_sp>`
     -
   * - :py:obj:`x_stp_with_sp <slothy.targets.aarch64.aarch64_neon.x_stp_with_sp>`
     -
   * - :py:obj:`x_stp_with_imm_sp <slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_sp>`
     -
   * - :py:obj:`x_stp_with_inc <slothy.targets.aarch64.aarch64_neon.x_stp_with_inc>`
     -
   * - :py:obj:`x_stp_with_inc_writeback <slothy.targets.aarch64.aarch64_neon.x_stp_with_inc_writeback>`
     -
   * - :py:obj:`x_stp_with_imm_hint <slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_hint>`
     -
   * - :py:obj:`x_stp_sp_with_imm_hint <slothy.targets.aarch64.aarch64_neon.x_stp_sp_with_imm_hint>`
     -
   * - :py:obj:`x_stp_sp_with_imm_hint2 <slothy.targets.aarch64.aarch64_neon.x_stp_sp_with_imm_hint2>`
     -
   * - :py:obj:`x_stp_with_imm_hint2 <slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_hint2>`
     -
   * - :py:obj:`St4 <slothy.targets.aarch64.aarch64_neon.St4>`
     -
   * - :py:obj:`st4_base <slothy.targets.aarch64.aarch64_neon.st4_base>`
     -
   * - :py:obj:`st4_with_inc <slothy.targets.aarch64.aarch64_neon.st4_with_inc>`
     -
   * - :py:obj:`St3 <slothy.targets.aarch64.aarch64_neon.St3>`
     -
   * - :py:obj:`st3_base <slothy.targets.aarch64.aarch64_neon.st3_base>`
     -
   * - :py:obj:`st3_with_inc <slothy.targets.aarch64.aarch64_neon.st3_with_inc>`
     -
   * - :py:obj:`St2 <slothy.targets.aarch64.aarch64_neon.St2>`
     -
   * - :py:obj:`st2_base <slothy.targets.aarch64.aarch64_neon.st2_base>`
     -
   * - :py:obj:`st2_with_inc <slothy.targets.aarch64.aarch64_neon.st2_with_inc>`
     -
   * - :py:obj:`Ld4 <slothy.targets.aarch64.aarch64_neon.Ld4>`
     -
   * - :py:obj:`ld4_base <slothy.targets.aarch64.aarch64_neon.ld4_base>`
     -
   * - :py:obj:`ld4_with_inc <slothy.targets.aarch64.aarch64_neon.ld4_with_inc>`
     -
   * - :py:obj:`Ld3 <slothy.targets.aarch64.aarch64_neon.Ld3>`
     -
   * - :py:obj:`ld3_base <slothy.targets.aarch64.aarch64_neon.ld3_base>`
     -
   * - :py:obj:`ld3_with_inc <slothy.targets.aarch64.aarch64_neon.ld3_with_inc>`
     -
   * - :py:obj:`Ld2 <slothy.targets.aarch64.aarch64_neon.Ld2>`
     -
   * - :py:obj:`ld2_base <slothy.targets.aarch64.aarch64_neon.ld2_base>`
     -
   * - :py:obj:`ld2_with_inc <slothy.targets.aarch64.aarch64_neon.ld2_with_inc>`
     -
   * - :py:obj:`ASimdCompare <slothy.targets.aarch64.aarch64_neon.ASimdCompare>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ASimdCompare
          :summary:
   * - :py:obj:`cmge <slothy.targets.aarch64.aarch64_neon.cmge>`
     -
   * - :py:obj:`Spill <slothy.targets.aarch64.aarch64_neon.Spill>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.Spill
          :summary:

Functions
~~~~~~~~~

.. list-table::
   :class: autosummary longtable
   :align: left

   * - :py:obj:`vins_d_parsing_cb <slothy.targets.aarch64.aarch64_neon.vins_d_parsing_cb>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vins_d_parsing_cb
          :summary:
   * - :py:obj:`fmov_0_parsing_cb <slothy.targets.aarch64.aarch64_neon.fmov_0_parsing_cb>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.fmov_0_parsing_cb
          :summary:
   * - :py:obj:`fmov_1_parsing_cb <slothy.targets.aarch64.aarch64_neon.fmov_1_parsing_cb>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.fmov_1_parsing_cb
          :summary:
   * - :py:obj:`q_ld2_lane_post_inc_parsing_cb <slothy.targets.aarch64.aarch64_neon.q_ld2_lane_post_inc_parsing_cb>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ld2_lane_post_inc_parsing_cb
          :summary:
   * - :py:obj:`eor3_fusion_cb <slothy.targets.aarch64.aarch64_neon.eor3_fusion_cb>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.eor3_fusion_cb
          :summary:
   * - :py:obj:`eor3_splitting_cb <slothy.targets.aarch64.aarch64_neon.eor3_splitting_cb>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.eor3_splitting_cb
          :summary:
   * - :py:obj:`iter_aarch64_instructions <slothy.targets.aarch64.aarch64_neon.iter_aarch64_instructions>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.iter_aarch64_instructions
          :summary:
   * - :py:obj:`find_class <slothy.targets.aarch64.aarch64_neon.find_class>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.find_class
          :summary:
   * - :py:obj:`is_dt_form_of <slothy.targets.aarch64.aarch64_neon.is_dt_form_of>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.is_dt_form_of
          :summary:
   * - :py:obj:`is_dform_form_of <slothy.targets.aarch64.aarch64_neon.is_dform_form_of>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.is_dform_form_of
          :summary:
   * - :py:obj:`is_qform_form_of <slothy.targets.aarch64.aarch64_neon.is_qform_form_of>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.is_qform_form_of
          :summary:
   * - :py:obj:`check_instr_dt <slothy.targets.aarch64.aarch64_neon.check_instr_dt>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.check_instr_dt
          :summary:
   * - :py:obj:`is_neon_instruction <slothy.targets.aarch64.aarch64_neon.is_neon_instruction>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.is_neon_instruction
          :summary:
   * - :py:obj:`all_subclass_leaves <slothy.targets.aarch64.aarch64_neon.all_subclass_leaves>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.all_subclass_leaves
          :summary:
   * - :py:obj:`lookup_multidict <slothy.targets.aarch64.aarch64_neon.lookup_multidict>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.lookup_multidict
          :summary:

Data
~~~~

.. list-table::
   :class: autosummary longtable
   :align: left

   * - :py:obj:`arch_name <slothy.targets.aarch64.aarch64_neon.arch_name>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.arch_name
          :summary:
   * - :py:obj:`llvm_mca_arch <slothy.targets.aarch64.aarch64_neon.llvm_mca_arch>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.llvm_mca_arch
          :summary:
   * - :py:obj:`llvm_mc_arch <slothy.targets.aarch64.aarch64_neon.llvm_mc_arch>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.llvm_mc_arch
          :summary:
   * - :py:obj:`llvm_mc_attr <slothy.targets.aarch64.aarch64_neon.llvm_mc_attr>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.llvm_mc_attr
          :summary:
   * - :py:obj:`unicorn_arch <slothy.targets.aarch64.aarch64_neon.unicorn_arch>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.unicorn_arch
          :summary:
   * - :py:obj:`unicorn_mode <slothy.targets.aarch64.aarch64_neon.unicorn_mode>`
     - .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.unicorn_mode
          :summary:

API
~~~

.. py:data:: arch_name
   :canonical: slothy.targets.aarch64.aarch64_neon.arch_name
   :value: 'Arm_AArch64'

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.arch_name

.. py:data:: llvm_mca_arch
   :canonical: slothy.targets.aarch64.aarch64_neon.llvm_mca_arch
   :value: 'aarch64'

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.llvm_mca_arch

.. py:data:: llvm_mc_arch
   :canonical: slothy.targets.aarch64.aarch64_neon.llvm_mc_arch
   :value: 'aarch64'

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.llvm_mc_arch

.. py:data:: llvm_mc_attr
   :canonical: slothy.targets.aarch64.aarch64_neon.llvm_mc_attr
   :value: 'aes'

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.llvm_mc_attr

.. py:data:: unicorn_arch
   :canonical: slothy.targets.aarch64.aarch64_neon.unicorn_arch
   :value: None

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.unicorn_arch

.. py:data:: unicorn_mode
   :canonical: slothy.targets.aarch64.aarch64_neon.unicorn_mode
   :value: None

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.unicorn_mode

.. py:class:: RegisterType(*args, **kwds)
   :canonical: slothy.targets.aarch64.aarch64_neon.RegisterType

   Bases: :py:obj:`enum.Enum`

   .. py:attribute:: GPR
      :canonical: slothy.targets.aarch64.aarch64_neon.RegisterType.GPR
      :value: 1

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.RegisterType.GPR

   .. py:attribute:: NEON
      :canonical: slothy.targets.aarch64.aarch64_neon.RegisterType.NEON
      :value: 2

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.RegisterType.NEON

   .. py:attribute:: STACK_NEON
      :canonical: slothy.targets.aarch64.aarch64_neon.RegisterType.STACK_NEON
      :value: 3

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.RegisterType.STACK_NEON

   .. py:attribute:: STACK_GPR
      :canonical: slothy.targets.aarch64.aarch64_neon.RegisterType.STACK_GPR
      :value: 4

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.RegisterType.STACK_GPR

   .. py:attribute:: FLAGS
      :canonical: slothy.targets.aarch64.aarch64_neon.RegisterType.FLAGS
      :value: 5

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.RegisterType.FLAGS

   .. py:attribute:: HINT
      :canonical: slothy.targets.aarch64.aarch64_neon.RegisterType.HINT
      :value: 6

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.RegisterType.HINT

   .. py:method:: __str__()
      :canonical: slothy.targets.aarch64.aarch64_neon.RegisterType.__str__

   .. py:method:: __repr__()
      :canonical: slothy.targets.aarch64.aarch64_neon.RegisterType.__repr__

   .. py:method:: _spillable()
      :canonical: slothy.targets.aarch64.aarch64_neon.RegisterType._spillable

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.RegisterType._spillable

   .. py:attribute:: spillable
      :canonical: slothy.targets.aarch64.aarch64_neon.RegisterType.spillable
      :value: 'staticmethod(...)'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.RegisterType.spillable

   .. py:method:: callee_saved_registers()
      :canonical: slothy.targets.aarch64.aarch64_neon.RegisterType.callee_saved_registers
      :staticmethod:

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.RegisterType.callee_saved_registers

   .. py:method:: unicorn_link_register()
      :canonical: slothy.targets.aarch64.aarch64_neon.RegisterType.unicorn_link_register
      :staticmethod:

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.RegisterType.unicorn_link_register

   .. py:method:: unicorn_stack_pointer()
      :canonical: slothy.targets.aarch64.aarch64_neon.RegisterType.unicorn_stack_pointer
      :staticmethod:

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.RegisterType.unicorn_stack_pointer

   .. py:method:: unicorn_program_counter()
      :canonical: slothy.targets.aarch64.aarch64_neon.RegisterType.unicorn_program_counter
      :staticmethod:

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.RegisterType.unicorn_program_counter

   .. py:method:: _unicorn_reg_by_name()
      :canonical: slothy.targets.aarch64.aarch64_neon.RegisterType._unicorn_reg_by_name

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.RegisterType._unicorn_reg_by_name

   .. py:attribute:: unicorn_reg_by_name
      :canonical: slothy.targets.aarch64.aarch64_neon.RegisterType.unicorn_reg_by_name
      :value: 'staticmethod(...)'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.RegisterType.unicorn_reg_by_name

   .. py:method:: _list_registers(only_extra=False, only_normal=False, with_variants=False)
      :canonical: slothy.targets.aarch64.aarch64_neon.RegisterType._list_registers

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.RegisterType._list_registers

   .. py:attribute:: list_registers
      :canonical: slothy.targets.aarch64.aarch64_neon.RegisterType.list_registers
      :value: 'staticmethod(...)'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.RegisterType.list_registers

   .. py:method:: find_type(r)
      :canonical: slothy.targets.aarch64.aarch64_neon.RegisterType.find_type
      :staticmethod:

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.RegisterType.find_type

   .. py:method:: is_renamed(ty)
      :canonical: slothy.targets.aarch64.aarch64_neon.RegisterType.is_renamed
      :staticmethod:

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.RegisterType.is_renamed

   .. py:method:: from_string(string)
      :canonical: slothy.targets.aarch64.aarch64_neon.RegisterType.from_string
      :staticmethod:

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.RegisterType.from_string

   .. py:method:: default_reserved()
      :canonical: slothy.targets.aarch64.aarch64_neon.RegisterType.default_reserved
      :staticmethod:

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.RegisterType.default_reserved

   .. py:method:: default_aliases()
      :canonical: slothy.targets.aarch64.aarch64_neon.RegisterType.default_aliases
      :staticmethod:

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.RegisterType.default_aliases

.. py:class:: Branch
   :canonical: slothy.targets.aarch64.aarch64_neon.Branch

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.Branch

   .. py:method:: if_equal(cnt, val, lbl)
      :canonical: slothy.targets.aarch64.aarch64_neon.Branch.if_equal
      :staticmethod:

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.Branch.if_equal

   .. py:method:: if_greater_equal(cnt, val, lbl)
      :canonical: slothy.targets.aarch64.aarch64_neon.Branch.if_greater_equal
      :staticmethod:

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.Branch.if_greater_equal

   .. py:method:: unconditional(lbl)
      :canonical: slothy.targets.aarch64.aarch64_neon.Branch.unconditional
      :staticmethod:

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.Branch.unconditional

.. py:class:: SubLoop(lbl='lbl')
   :canonical: slothy.targets.aarch64.aarch64_neon.SubLoop

   Bases: :py:obj:`slothy.helper.Loop`

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.SubLoop

   .. rubric:: Initialization

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.SubLoop.__init__

   .. py:method:: start(loop_cnt, indentation=0, fixup=0, unroll=1, jump_if_empty=None, preamble_code=None, body_code=None, postamble_code=None, register_aliases=None)
      :canonical: slothy.targets.aarch64.aarch64_neon.SubLoop.start

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.SubLoop.start

   .. py:method:: end(other, indentation=0)
      :canonical: slothy.targets.aarch64.aarch64_neon.SubLoop.end

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.SubLoop.end

.. py:class:: SubsLoop(lbl='lbl')
   :canonical: slothy.targets.aarch64.aarch64_neon.SubsLoop

   Bases: :py:obj:`slothy.helper.Loop`

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.SubsLoop

   .. rubric:: Initialization

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.SubsLoop.__init__

   .. py:method:: start(loop_cnt, indentation=0, fixup=0, unroll=1, jump_if_empty=None, preamble_code=None, body_code=None, postamble_code=None, register_aliases=None)
      :canonical: slothy.targets.aarch64.aarch64_neon.SubsLoop.start

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.SubsLoop.start

   .. py:method:: end(other, indentation=0)
      :canonical: slothy.targets.aarch64.aarch64_neon.SubsLoop.end

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.SubsLoop.end

.. py:class:: Instruction(*, mnemonic, arg_types_in=None, arg_types_in_out=None, arg_types_out=None)
   :canonical: slothy.targets.aarch64.aarch64_neon.Instruction

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.Instruction

   .. rubric:: Initialization

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.Instruction.__init__

   .. py:method:: extract_read_writes()
      :canonical: slothy.targets.aarch64.aarch64_neon.Instruction.extract_read_writes

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.Instruction.extract_read_writes

   .. py:method:: global_parsing_cb(a, log=None)
      :canonical: slothy.targets.aarch64.aarch64_neon.Instruction.global_parsing_cb

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.Instruction.global_parsing_cb

   .. py:method:: global_fusion_cb(a, log=None)
      :canonical: slothy.targets.aarch64.aarch64_neon.Instruction.global_fusion_cb

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.Instruction.global_fusion_cb

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.Instruction.write

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.Instruction.write

   .. py:method:: unfold_abbrevs(mnemonic)
      :canonical: slothy.targets.aarch64.aarch64_neon.Instruction.unfold_abbrevs
      :staticmethod:

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.Instruction.unfold_abbrevs

   .. py:method:: _is_instance_of(inst_list)
      :canonical: slothy.targets.aarch64.aarch64_neon.Instruction._is_instance_of

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.Instruction._is_instance_of

   .. py:method:: is_q_form_vector_instruction()
      :canonical: slothy.targets.aarch64.aarch64_neon.Instruction.is_q_form_vector_instruction

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.Instruction.is_q_form_vector_instruction

   .. py:method:: is_vector_load()
      :canonical: slothy.targets.aarch64.aarch64_neon.Instruction.is_vector_load

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.Instruction.is_vector_load

   .. py:method:: is_vector_store()
      :canonical: slothy.targets.aarch64.aarch64_neon.Instruction.is_vector_store

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.Instruction.is_vector_store

   .. py:method:: is_scalar_load()
      :canonical: slothy.targets.aarch64.aarch64_neon.Instruction.is_scalar_load

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.Instruction.is_scalar_load

   .. py:method:: is_scalar_store()
      :canonical: slothy.targets.aarch64.aarch64_neon.Instruction.is_scalar_store

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.Instruction.is_scalar_store

   .. py:method:: is_load()
      :canonical: slothy.targets.aarch64.aarch64_neon.Instruction.is_load

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.Instruction.is_load

   .. py:method:: is_store()
      :canonical: slothy.targets.aarch64.aarch64_neon.Instruction.is_store

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.Instruction.is_store

   .. py:method:: is_load_store_instruction()
      :canonical: slothy.targets.aarch64.aarch64_neon.Instruction.is_load_store_instruction

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.Instruction.is_load_store_instruction

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.Instruction.make
      :classmethod:

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.Instruction.make

   .. py:method:: build(c: any, src: str, mnemonic: str, **kwargs: list) -> slothy.targets.aarch64.aarch64_neon.Instruction
      :canonical: slothy.targets.aarch64.aarch64_neon.Instruction.build
      :staticmethod:

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.Instruction.build

   .. py:method:: parser(src_line)
      :canonical: slothy.targets.aarch64.aarch64_neon.Instruction.parser
      :staticmethod:

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.Instruction.parser

   .. py:method:: __repr__()
      :canonical: slothy.targets.aarch64.aarch64_neon.Instruction.__repr__

.. py:class:: AArch64Instruction(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.AArch64Instruction

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Instruction`

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.AArch64Instruction

   .. rubric:: Initialization

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.AArch64Instruction.__init__

   .. py:attribute:: PARSERS
      :canonical: slothy.targets.aarch64.aarch64_neon.AArch64Instruction.PARSERS
      :value: None

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.AArch64Instruction.PARSERS

   .. py:method:: _unfold_pattern(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.AArch64Instruction._unfold_pattern
      :staticmethod:

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.AArch64Instruction._unfold_pattern

   .. py:method:: _build_parser(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.AArch64Instruction._build_parser
      :staticmethod:

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.AArch64Instruction._build_parser

   .. py:method:: get_parser(pattern)
      :canonical: slothy.targets.aarch64.aarch64_neon.AArch64Instruction.get_parser
      :staticmethod:

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.AArch64Instruction.get_parser

   .. py:method:: __infer_register_type()
      :canonical: slothy.targets.aarch64.aarch64_neon.AArch64Instruction.__infer_register_type

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.AArch64Instruction.__infer_register_type

   .. py:attribute:: _infer_register_type
      :canonical: slothy.targets.aarch64.aarch64_neon.AArch64Instruction._infer_register_type
      :value: 'staticmethod(...)'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.AArch64Instruction._infer_register_type

   .. py:method:: _to_reg(ty, s)
      :canonical: slothy.targets.aarch64.aarch64_neon.AArch64Instruction._to_reg
      :staticmethod:

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.AArch64Instruction._to_reg

   .. py:method:: _build_pattern_replacement(s, ty, arg)
      :canonical: slothy.targets.aarch64.aarch64_neon.AArch64Instruction._build_pattern_replacement
      :staticmethod:

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.AArch64Instruction._build_pattern_replacement

   .. py:method:: _instantiate_pattern(s, ty, arg, out)
      :canonical: slothy.targets.aarch64.aarch64_neon.AArch64Instruction._instantiate_pattern
      :staticmethod:

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.AArch64Instruction._instantiate_pattern

   .. py:method:: build_core(obj, res)
      :canonical: slothy.targets.aarch64.aarch64_neon.AArch64Instruction.build_core
      :staticmethod:

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.AArch64Instruction.build_core

   .. py:method:: build(c, src)
      :canonical: slothy.targets.aarch64.aarch64_neon.AArch64Instruction.build
      :staticmethod:

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.AArch64Instruction.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.AArch64Instruction.write

.. py:class:: qsave(*, mnemonic, arg_types_in=None, arg_types_in_out=None, arg_types_out=None)
   :canonical: slothy.targets.aarch64.aarch64_neon.qsave

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Instruction`

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.qsave

   .. rubric:: Initialization

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.qsave.__init__

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.qsave.make
      :classmethod:

.. py:class:: qrestore(*, mnemonic, arg_types_in=None, arg_types_in_out=None, arg_types_out=None)
   :canonical: slothy.targets.aarch64.aarch64_neon.qrestore

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Instruction`

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.qrestore

   .. rubric:: Initialization

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.qrestore.__init__

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.qrestore.make
      :classmethod:

.. py:class:: save(*, mnemonic, arg_types_in=None, arg_types_in_out=None, arg_types_out=None)
   :canonical: slothy.targets.aarch64.aarch64_neon.save

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Instruction`

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.save

   .. rubric:: Initialization

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.save.__init__

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.save.make
      :classmethod:

.. py:class:: restore(*, mnemonic, arg_types_in=None, arg_types_in_out=None, arg_types_out=None)
   :canonical: slothy.targets.aarch64.aarch64_neon.restore

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Instruction`

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.restore

   .. rubric:: Initialization

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.restore.__init__

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.restore.make
      :classmethod:

.. py:class:: nop(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.nop

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.nop.pattern
      :value: 'nop'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.nop.pattern

.. py:class:: vadd(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vadd

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vadd.pattern
      :value: 'add <Va>.<dt0>, <Vb>.<dt1>, <Vc>.<dt2>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vadd.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vadd.inputs
      :value: ['Vb', 'Vc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vadd.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vadd.outputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vadd.outputs

.. py:class:: vsub(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vsub

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vsub.pattern
      :value: 'sub <Va>.<dt0>, <Vb>.<dt1>, <Vc>.<dt2>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vsub.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vsub.inputs
      :value: ['Vb', 'Vc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vsub.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vsub.outputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vsub.outputs

.. py:class:: Ldr_Q(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.Ldr_Q

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: Ldp_Q(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.Ldp_Q

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: d_ldp_sp_imm(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.d_ldp_sp_imm

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldr_Q`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.d_ldp_sp_imm.pattern
      :value: 'ldp <Da>, <Db>, [sp, <imm>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.d_ldp_sp_imm.pattern

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.d_ldp_sp_imm.outputs
      :value: ['Da', 'Db']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.d_ldp_sp_imm.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.d_ldp_sp_imm.make
      :classmethod:

.. py:class:: q_ldr(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldr_Q`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr.pattern
      :value: 'ldr <Qa>, [<Xc>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ldr.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr.inputs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ldr.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr.outputs
      :value: ['Qa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ldr.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr.make
      :classmethod:

.. py:class:: q_ld1(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.q_ld1

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldr_Q`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ld1.pattern
      :value: 'ld1 {<Va>.<dt>}, [<Xc>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ld1.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ld1.inputs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ld1.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ld1.outputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ld1.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ld1.make
      :classmethod:

.. py:class:: prefetch(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.prefetch

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldr_Q`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.prefetch.pattern
      :value: 'prfm pld1lkeep, [<Xc>, <imm>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.prefetch.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.prefetch.inputs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.prefetch.inputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.prefetch.make
      :classmethod:

.. py:class:: q_ldr_with_imm_hint(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr_with_imm_hint

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldr_Q`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr_with_imm_hint.pattern
      :value: 'ldrh <Qa>, <Xc>, <imm>, <Th>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ldr_with_imm_hint.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr_with_imm_hint.inputs
      :value: ['Xc', 'Th']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ldr_with_imm_hint.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr_with_imm_hint.outputs
      :value: ['Qa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ldr_with_imm_hint.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr_with_imm_hint.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr_with_imm_hint.write

.. py:class:: b_ldr_stack_with_inc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.b_ldr_stack_with_inc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.b_ldr_stack_with_inc.pattern
      :value: 'ldr <Ba>, [sp, <imm>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.b_ldr_stack_with_inc.pattern

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.b_ldr_stack_with_inc.outputs
      :value: ['Ba']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.b_ldr_stack_with_inc.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.b_ldr_stack_with_inc.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.b_ldr_stack_with_inc.write

.. py:class:: d_ldr_stack_with_inc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.d_ldr_stack_with_inc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.d_ldr_stack_with_inc.pattern
      :value: 'ldr <Da>, [sp, <imm>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.d_ldr_stack_with_inc.pattern

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.d_ldr_stack_with_inc.outputs
      :value: ['Da']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.d_ldr_stack_with_inc.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.d_ldr_stack_with_inc.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.d_ldr_stack_with_inc.write

.. py:class:: Q_Ld2_Lane_Post_Inc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.Q_Ld2_Lane_Post_Inc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: q_ld2_lane_post_inc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.q_ld2_lane_post_inc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Q_Ld2_Lane_Post_Inc`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ld2_lane_post_inc.pattern
      :value: 'ld2 { <Va>.<dt0>, <Vb>.<dt1> }[<index>], [<Xa>], <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ld2_lane_post_inc.pattern

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ld2_lane_post_inc.in_outs
      :value: ['Va', 'Vb', 'Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ld2_lane_post_inc.in_outs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ld2_lane_post_inc.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ld2_lane_post_inc.write

.. py:class:: q_ld2_lane_post_inc_force_output(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.q_ld2_lane_post_inc_force_output

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Q_Ld2_Lane_Post_Inc`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ld2_lane_post_inc_force_output.pattern
      :value: 'ld2 { <Va>.<dt0>, <Vb>.<dt1> }[<index>], [<Xa>], <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ld2_lane_post_inc_force_output.pattern

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ld2_lane_post_inc_force_output.in_outs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ld2_lane_post_inc_force_output.in_outs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ld2_lane_post_inc_force_output.outputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ld2_lane_post_inc_force_output.outputs

   .. py:method:: make(src, force=False)
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ld2_lane_post_inc_force_output.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ld2_lane_post_inc_force_output.write

.. py:class:: q_ldr1_stack(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr1_stack

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr1_stack.pattern
      :value: 'ld1r {<Va>.<dt>}, [sp]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ldr1_stack.pattern

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr1_stack.outputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ldr1_stack.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr1_stack.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr1_stack.write

.. py:class:: q_ldr1_post_inc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr1_post_inc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr1_post_inc.pattern
      :value: 'ld1r {<Va>.<dt>}, [<Xa>], <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ldr1_post_inc.pattern

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr1_post_inc.outputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ldr1_post_inc.outputs

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr1_post_inc.in_outs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ldr1_post_inc.in_outs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr1_post_inc.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr1_post_inc.write

.. py:class:: q_ldr_stack_with_inc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr_stack_with_inc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldr_Q`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr_stack_with_inc.pattern
      :value: 'ldr <Qa>, [sp, <imm>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ldr_stack_with_inc.pattern

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr_stack_with_inc.outputs
      :value: ['Qa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ldr_stack_with_inc.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr_stack_with_inc.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr_stack_with_inc.write

.. py:class:: q_ldr_with_inc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr_with_inc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldr_Q`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr_with_inc.pattern
      :value: 'ldr <Qa>, [<Xc>, <imm>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ldr_with_inc.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr_with_inc.inputs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ldr_with_inc.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr_with_inc.outputs
      :value: ['Qa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ldr_with_inc.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr_with_inc.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr_with_inc.write

.. py:class:: q_ld1_with_inc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.q_ld1_with_inc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldr_Q`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ld1_with_inc.pattern
      :value: 'ld1 {<Va>.<dt>}, [<Xc>, <imm>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ld1_with_inc.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ld1_with_inc.inputs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ld1_with_inc.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ld1_with_inc.outputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ld1_with_inc.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ld1_with_inc.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ld1_with_inc.write

.. py:class:: q_ldp_with_inc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.q_ldp_with_inc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldp_Q`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldp_with_inc.pattern
      :value: 'ldp <Qa>, <Qb>, [<Xc>, <imm>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ldp_with_inc.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldp_with_inc.inputs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ldp_with_inc.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldp_with_inc.outputs
      :value: ['Qa', 'Qb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ldp_with_inc.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldp_with_inc.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldp_with_inc.write

.. py:class:: q_ldr_with_inc_writeback(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr_with_inc_writeback

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldr_Q`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr_with_inc_writeback.pattern
      :value: 'ldr <Qa>, [<Xc>, <imm>]!'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ldr_with_inc_writeback.pattern

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr_with_inc_writeback.in_outs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ldr_with_inc_writeback.in_outs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr_with_inc_writeback.outputs
      :value: ['Qa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ldr_with_inc_writeback.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr_with_inc_writeback.make
      :classmethod:

.. py:class:: q_ldr_with_postinc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr_with_postinc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldr_Q`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr_with_postinc.pattern
      :value: 'ldr <Qa>, [<Xc>], <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ldr_with_postinc.pattern

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr_with_postinc.in_outs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ldr_with_postinc.in_outs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr_with_postinc.outputs
      :value: ['Qa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ldr_with_postinc.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldr_with_postinc.make
      :classmethod:

.. py:class:: q_ld1_with_postinc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.q_ld1_with_postinc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldr_Q`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ld1_with_postinc.pattern
      :value: 'ld1 {<Va>.<dt>}, [<Xc>], <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ld1_with_postinc.pattern

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ld1_with_postinc.in_outs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ld1_with_postinc.in_outs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ld1_with_postinc.outputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ld1_with_postinc.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ld1_with_postinc.make
      :classmethod:

.. py:class:: q_ldp_with_postinc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.q_ldp_with_postinc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldp_Q`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldp_with_postinc.pattern
      :value: 'ldp <Qa>, <Qb>, [<Xc>], <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ldp_with_postinc.pattern

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldp_with_postinc.in_outs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ldp_with_postinc.in_outs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldp_with_postinc.outputs
      :value: ['Qa', 'Qb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ldp_with_postinc.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.q_ldp_with_postinc.make
      :classmethod:

.. py:class:: Str_Q(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.Str_Q

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: Stp_Q(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.Stp_Q

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: q_str(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.q_str

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Str_Q`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.q_str.pattern
      :value: 'str <Qa>, [<Xc>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_str.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_str.inputs
      :value: ['Qa', 'Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_str.inputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.q_str.make
      :classmethod:

.. py:class:: q_str_with_imm_hint(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.q_str_with_imm_hint

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Str_Q`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.q_str_with_imm_hint.pattern
      :value: 'strh <Qa>, <Xc>, <imm>, <Th>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_str_with_imm_hint.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_str_with_imm_hint.inputs
      :value: ['Qa', 'Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_str_with_imm_hint.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_str_with_imm_hint.outputs
      :value: ['Th']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_str_with_imm_hint.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.q_str_with_imm_hint.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.q_str_with_imm_hint.write

.. py:class:: q_str_with_inc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.q_str_with_inc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Str_Q`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.q_str_with_inc.pattern
      :value: 'str <Qa>, [<Xc>, <imm>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_str_with_inc.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_str_with_inc.inputs
      :value: ['Qa', 'Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_str_with_inc.inputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.q_str_with_inc.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.q_str_with_inc.write

.. py:class:: d_str_stack_with_inc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.d_str_stack_with_inc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.d_str_stack_with_inc.pattern
      :value: 'str <Da>, [sp, <imm>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.d_str_stack_with_inc.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.d_str_stack_with_inc.inputs
      :value: ['Da']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.d_str_stack_with_inc.inputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.d_str_stack_with_inc.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.d_str_stack_with_inc.write

.. py:class:: q_str_stack_with_inc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.q_str_stack_with_inc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Str_Q`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.q_str_stack_with_inc.pattern
      :value: 'str <Qa>, [sp, <imm>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_str_stack_with_inc.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_str_stack_with_inc.inputs
      :value: ['Qa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_str_stack_with_inc.inputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.q_str_stack_with_inc.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.q_str_stack_with_inc.write

.. py:class:: d_stp_stack_with_inc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.d_stp_stack_with_inc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.d_stp_stack_with_inc.pattern
      :value: 'stp <Da>, <Db>, [sp, <imm>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.d_stp_stack_with_inc.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.d_stp_stack_with_inc.inputs
      :value: ['Da', 'Db']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.d_stp_stack_with_inc.inputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.d_stp_stack_with_inc.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.d_stp_stack_with_inc.write

.. py:class:: q_stp_stack_with_inc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.q_stp_stack_with_inc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.q_stp_stack_with_inc.pattern
      :value: 'stp <Qa>, <Qb>, [sp, <imm>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_stp_stack_with_inc.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_stp_stack_with_inc.inputs
      :value: ['Qa', 'Qb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_stp_stack_with_inc.inputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.q_stp_stack_with_inc.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.q_stp_stack_with_inc.write

.. py:class:: q_stp_with_inc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.q_stp_with_inc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Stp_Q`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.q_stp_with_inc.pattern
      :value: 'stp <Qa>, <Qb>, [<Xc>, <imm>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_stp_with_inc.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_stp_with_inc.inputs
      :value: ['Qa', 'Qb', 'Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_stp_with_inc.inputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.q_stp_with_inc.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.q_stp_with_inc.write

.. py:class:: q_str_with_inc_writeback(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.q_str_with_inc_writeback

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Str_Q`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.q_str_with_inc_writeback.pattern
      :value: 'str <Qa>, [<Xc>, <imm>]!'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_str_with_inc_writeback.pattern

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_str_with_inc_writeback.in_outs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_str_with_inc_writeback.in_outs

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_str_with_inc_writeback.inputs
      :value: ['Qa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_str_with_inc_writeback.inputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.q_str_with_inc_writeback.make
      :classmethod:

.. py:class:: q_str_with_postinc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.q_str_with_postinc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Str_Q`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.q_str_with_postinc.pattern
      :value: 'str <Qa>, [<Xc>], <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_str_with_postinc.pattern

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_str_with_postinc.in_outs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_str_with_postinc.in_outs

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_str_with_postinc.inputs
      :value: ['Qa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_str_with_postinc.inputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.q_str_with_postinc.make
      :classmethod:

.. py:class:: q_st1_with_postinc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.q_st1_with_postinc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Str_Q`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.q_st1_with_postinc.pattern
      :value: 'st1 {<Va>.<dt>}, [<Xc>], <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_st1_with_postinc.pattern

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_st1_with_postinc.in_outs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_st1_with_postinc.in_outs

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_st1_with_postinc.inputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_st1_with_postinc.inputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.q_st1_with_postinc.make
      :classmethod:

.. py:class:: q_stp_with_postinc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.q_stp_with_postinc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Stp_Q`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.q_stp_with_postinc.pattern
      :value: 'stp <Qa>, <Qb>, [<Xc>], <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_stp_with_postinc.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_stp_with_postinc.inputs
      :value: ['Qa', 'Qb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_stp_with_postinc.inputs

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_stp_with_postinc.in_outs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_stp_with_postinc.in_outs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.q_stp_with_postinc.make
      :classmethod:

.. py:class:: q_st1_2_with_postinc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.q_st1_2_with_postinc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Stp_Q`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.q_st1_2_with_postinc.pattern
      :value: 'st1 {<Va>.<dt0>, <Vb>.<dt1>}, [<Xc>], <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_st1_2_with_postinc.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_st1_2_with_postinc.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_st1_2_with_postinc.inputs

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.q_st1_2_with_postinc.in_outs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_st1_2_with_postinc.in_outs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.q_st1_2_with_postinc.make
      :classmethod:

.. py:class:: Ldr_X(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.Ldr_X

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: x_ldr(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldr_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr.pattern
      :value: 'ldr <Xa>, [<Xc>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldr.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr.inputs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldr.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr.outputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldr.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr.write

.. py:class:: x_ldr_with_imm(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_with_imm

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldr_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_with_imm.pattern
      :value: 'ldr <Xa>, [<Xc>, <imm>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldr_with_imm.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_with_imm.inputs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldr_with_imm.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_with_imm.outputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldr_with_imm.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_with_imm.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_with_imm.write

.. py:class:: x_ldr_with_imm_uxtw(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_with_imm_uxtw

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldr_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_with_imm_uxtw.pattern
      :value: 'ldr <Xd>, [<Xa>, <Xb>, UXTW <imm>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldr_with_imm_uxtw.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_with_imm_uxtw.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldr_with_imm_uxtw.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_with_imm_uxtw.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldr_with_imm_uxtw.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_with_imm_uxtw.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_with_imm_uxtw.write

.. py:class:: x_ldr_with_imm_lsl(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_with_imm_lsl

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldr_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_with_imm_lsl.pattern
      :value: 'ldr <Xd>, [<Xa>, <Xb>, LSL <imm>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldr_with_imm_lsl.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_with_imm_lsl.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldr_with_imm_lsl.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_with_imm_lsl.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldr_with_imm_lsl.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_with_imm_lsl.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_with_imm_lsl.write

.. py:class:: x_ldr_with_postinc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_with_postinc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldr_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_with_postinc.pattern
      :value: 'ldr <Xa>, [<Xc>], <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldr_with_postinc.pattern

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_with_postinc.in_outs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldr_with_postinc.in_outs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_with_postinc.outputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldr_with_postinc.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_with_postinc.make
      :classmethod:

.. py:class:: x_ldr_stack(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_stack

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldr_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_stack.pattern
      :value: 'ldr <Xa>, [sp]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldr_stack.pattern

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_stack.outputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldr_stack.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_stack.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_stack.write

.. py:class:: x_ldr_stack_imm(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_stack_imm

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldr_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_stack_imm.pattern
      :value: 'ldr <Xa>, [sp, <imm>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldr_stack_imm.pattern

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_stack_imm.outputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldr_stack_imm.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_stack_imm.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_stack_imm.write

.. py:class:: x_ldr_stack_imm_with_hint(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_stack_imm_with_hint

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldr_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_stack_imm_with_hint.pattern
      :value: 'ldrh <Xa>, sp, <imm>, <Th>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldr_stack_imm_with_hint.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_stack_imm_with_hint.inputs
      :value: ['Th']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldr_stack_imm_with_hint.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_stack_imm_with_hint.outputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldr_stack_imm_with_hint.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_stack_imm_with_hint.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_stack_imm_with_hint.write

.. py:class:: x_ldr_imm_with_hint(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_imm_with_hint

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldr_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_imm_with_hint.pattern
      :value: 'ldrh <Xa>, <Xb>, <imm>, <Th>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldr_imm_with_hint.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_imm_with_hint.inputs
      :value: ['Xb', 'Th']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldr_imm_with_hint.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_imm_with_hint.outputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldr_imm_with_hint.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_imm_with_hint.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldr_imm_with_hint.write

.. py:class:: Ldp_X(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.Ldp_X

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: x_ldp(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldp_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp.pattern
      :value: 'ldp <Xa>, <Xb>, [<Xc>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldp.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp.inputs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldp.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp.outputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldp.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp.write

.. py:class:: x_ldp_with_imm_sp_xzr(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_sp_xzr

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldp_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_sp_xzr.pattern
      :value: 'ldp <Xa>, xzr, [sp, <imm>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_sp_xzr.pattern

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_sp_xzr.outputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_sp_xzr.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_sp_xzr.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_sp_xzr.write

.. py:class:: x_ldp_with_imm_sp(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_sp

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldp_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_sp.pattern
      :value: 'ldp <Xa>, <Xb>, [sp, <imm>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_sp.pattern

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_sp.outputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_sp.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_sp.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_sp.write

.. py:class:: x_ldp_with_sp(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_sp

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldp_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_sp.pattern
      :value: 'ldp <Xa>, <Xb>, [sp]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldp_with_sp.pattern

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_sp.outputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldp_with_sp.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_sp.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_sp.write

.. py:class:: x_ldp_with_inc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_inc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldp_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_inc.pattern
      :value: 'ldp <Xa>, <Xb>, [<Xc>, <imm>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldp_with_inc.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_inc.inputs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldp_with_inc.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_inc.outputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldp_with_inc.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_inc.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_inc.write

.. py:class:: x_ldp_with_inc_writeback(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_inc_writeback

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldp_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_inc_writeback.pattern
      :value: 'ldp <Xa>, <Xb>, [<Xc>, <imm>]!'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldp_with_inc_writeback.pattern

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_inc_writeback.in_outs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldp_with_inc_writeback.in_outs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_inc_writeback.outputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldp_with_inc_writeback.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_inc_writeback.make
      :classmethod:

.. py:class:: x_ldp_with_postinc_writeback(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_postinc_writeback

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldp_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_postinc_writeback.pattern
      :value: 'ldp <Xa>, <Xb>, [<Xc>], <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldp_with_postinc_writeback.pattern

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_postinc_writeback.in_outs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldp_with_postinc_writeback.in_outs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_postinc_writeback.outputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldp_with_postinc_writeback.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_postinc_writeback.make
      :classmethod:

.. py:class:: x_ldp_with_imm_hint(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_hint

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldp_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_hint.pattern
      :value: 'ldph <Xa>, <Xb>, <Xc>, <imm>, <Th>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_hint.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_hint.inputs
      :value: ['Xc', 'Th']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_hint.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_hint.outputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_hint.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_hint.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_hint.write

.. py:class:: x_ldp_sp_with_imm_hint(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_sp_with_imm_hint

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldp_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_sp_with_imm_hint.pattern
      :value: 'ldph <Xa>, <Xb>, sp, <imm>, <Th>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldp_sp_with_imm_hint.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_sp_with_imm_hint.inputs
      :value: ['Th']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldp_sp_with_imm_hint.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_sp_with_imm_hint.outputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldp_sp_with_imm_hint.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_sp_with_imm_hint.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_sp_with_imm_hint.write

.. py:class:: x_ldp_sp_with_imm_hint2(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_sp_with_imm_hint2

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldp_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_sp_with_imm_hint2.pattern
      :value: 'ldphp <Xa>, <Xb>, sp, <imm>, <Th0>, <Th1>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldp_sp_with_imm_hint2.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_sp_with_imm_hint2.inputs
      :value: ['Th0', 'Th1']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldp_sp_with_imm_hint2.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_sp_with_imm_hint2.outputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldp_sp_with_imm_hint2.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_sp_with_imm_hint2.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_sp_with_imm_hint2.write

.. py:class:: x_ldp_with_imm_hint2(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_hint2

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ldp_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_hint2.pattern
      :value: 'ldphp <Xa>, <Xb>, <Xc>, <imm>, <Th0>, <Th1>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_hint2.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_hint2.inputs
      :value: ['Xc', 'Th0', 'Th1']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_hint2.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_hint2.outputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_hint2.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_hint2.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.x_ldp_with_imm_hint2.write

.. py:class:: ldr_sxtw_wform(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.ldr_sxtw_wform

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.ldr_sxtw_wform.pattern
      :value: 'ldr <Wd>, [<Xa>, <Wb>, SXTW <imm>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ldr_sxtw_wform.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.ldr_sxtw_wform.inputs
      :value: ['Xa', 'Wb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ldr_sxtw_wform.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.ldr_sxtw_wform.outputs
      :value: ['Wd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ldr_sxtw_wform.outputs

.. py:class:: lsr_wform(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.lsr_wform

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.lsr_wform.pattern
      :value: 'lsr <Wd>, <Wa>, <Wb>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.lsr_wform.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.lsr_wform.inputs
      :value: ['Wa', 'Wb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.lsr_wform.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.lsr_wform.outputs
      :value: ['Wd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.lsr_wform.outputs

.. py:class:: asr_wform(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.asr_wform

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.asr_wform.pattern
      :value: 'asr <Wd>, <Wa>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.asr_wform.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.asr_wform.inputs
      :value: ['Wa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.asr_wform.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.asr_wform.outputs
      :value: ['Wd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.asr_wform.outputs

.. py:class:: eor_wform(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.eor_wform

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.eor_wform.pattern
      :value: 'eor <Wd>, <Wa>, <Wb>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.eor_wform.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.eor_wform.inputs
      :value: ['Wa', 'Wb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.eor_wform.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.eor_wform.outputs
      :value: ['Wd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.eor_wform.outputs

.. py:class:: AArch64BasicArithmetic(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: subs_wform(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.subs_wform

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.subs_wform.pattern
      :value: 'subs <Wd>, <Wa>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.subs_wform.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.subs_wform.inputs
      :value: ['Wa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.subs_wform.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.subs_wform.outputs
      :value: ['Wd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.subs_wform.outputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.subs_wform.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.subs_wform.modifiesFlags

.. py:class:: subs_imm(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.subs_imm

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.subs_imm.pattern
      :value: 'subs <Xd>, <Xa>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.subs_imm.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.subs_imm.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.subs_imm.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.subs_imm.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.subs_imm.outputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.subs_imm.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.subs_imm.modifiesFlags

.. py:class:: sub_imm(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.sub_imm

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.sub_imm.pattern
      :value: 'sub <Xd>, <Xa>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sub_imm.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.sub_imm.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sub_imm.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.sub_imm.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sub_imm.outputs

.. py:class:: add_imm(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.add_imm

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.add_imm.pattern
      :value: 'add <Xd>, <Xa>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.add_imm.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.add_imm.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.add_imm.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.add_imm.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.add_imm.outputs

.. py:class:: add_sp_imm(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.add_sp_imm

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.add_sp_imm.pattern
      :value: 'add <Xd>, sp, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.add_sp_imm.pattern

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.add_sp_imm.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.add_sp_imm.outputs

.. py:class:: neg(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.neg

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.neg.pattern
      :value: 'neg <Xd>, <Xa>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.neg.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.neg.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.neg.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.neg.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.neg.outputs

.. py:class:: negs(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.negs

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.negs.pattern
      :value: 'negs <Xd>, <Xa>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.negs.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.negs.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.negs.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.negs.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.negs.outputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.negs.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.negs.modifiesFlags

.. py:class:: ngc_zero(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.ngc_zero

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.ngc_zero.pattern
      :value: 'ngc <Xd>, xzr'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ngc_zero.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.ngc_zero.inputs
      :value: []

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ngc_zero.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.ngc_zero.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ngc_zero.outputs

   .. py:attribute:: dependsOnFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.ngc_zero.dependsOnFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ngc_zero.dependsOnFlags

.. py:class:: ngcs(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.ngcs

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.ngcs.pattern
      :value: 'ngcs <Xd>, <Xa>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ngcs.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.ngcs.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ngcs.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.ngcs.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ngcs.outputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.ngcs.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ngcs.modifiesFlags

   .. py:attribute:: dependsOnFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.ngcs.dependsOnFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ngcs.dependsOnFlags

.. py:class:: ngcs_zero(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.ngcs_zero

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.ngcs_zero.pattern
      :value: 'ngcs <Xd>, xzr'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ngcs_zero.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.ngcs_zero.inputs
      :value: []

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ngcs_zero.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.ngcs_zero.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ngcs_zero.outputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.ngcs_zero.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ngcs_zero.modifiesFlags

   .. py:attribute:: dependsOnFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.ngcs_zero.dependsOnFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ngcs_zero.dependsOnFlags

.. py:class:: adds(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.adds

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.adds.pattern
      :value: 'adds <Xd>, <Xa>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adds.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.adds.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adds.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.adds.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adds.outputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.adds.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adds.modifiesFlags

.. py:class:: adds_to_zero(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.adds_to_zero

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.adds_to_zero.pattern
      :value: 'adds xzr, <Xa>, <Xb>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adds_to_zero.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.adds_to_zero.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adds_to_zero.inputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.adds_to_zero.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adds_to_zero.modifiesFlags

.. py:class:: adds_imm_to_zero(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.adds_imm_to_zero

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.adds_imm_to_zero.pattern
      :value: 'adds xzr, <Xa>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adds_imm_to_zero.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.adds_imm_to_zero.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adds_imm_to_zero.inputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.adds_imm_to_zero.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adds_imm_to_zero.modifiesFlags

.. py:class:: subs_twoarg(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.subs_twoarg

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.subs_twoarg.pattern
      :value: 'subs <Xd>, <Xa>, <Xb>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.subs_twoarg.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.subs_twoarg.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.subs_twoarg.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.subs_twoarg.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.subs_twoarg.outputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.subs_twoarg.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.subs_twoarg.modifiesFlags

.. py:class:: adds_twoarg(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.adds_twoarg

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.adds_twoarg.pattern
      :value: 'adds <Xd>, <Xa>, <Xb>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adds_twoarg.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.adds_twoarg.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adds_twoarg.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.adds_twoarg.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adds_twoarg.outputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.adds_twoarg.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adds_twoarg.modifiesFlags

.. py:class:: adcs(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.adcs

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.adcs.pattern
      :value: 'adcs <Xd>, <Xa>, <Xb>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adcs.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.adcs.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adcs.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.adcs.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adcs.outputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.adcs.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adcs.modifiesFlags

   .. py:attribute:: dependsOnFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.adcs.dependsOnFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adcs.dependsOnFlags

.. py:class:: sbcs(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.sbcs

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.sbcs.pattern
      :value: 'sbcs <Xd>, <Xa>, <Xb>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sbcs.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.sbcs.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sbcs.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.sbcs.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sbcs.outputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.sbcs.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sbcs.modifiesFlags

   .. py:attribute:: dependsOnFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.sbcs.dependsOnFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sbcs.dependsOnFlags

.. py:class:: sbcs_zero(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.sbcs_zero

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.sbcs_zero.pattern
      :value: 'sbcs <Xd>, <Xa>, xzr'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sbcs_zero.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.sbcs_zero.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sbcs_zero.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.sbcs_zero.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sbcs_zero.outputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.sbcs_zero.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sbcs_zero.modifiesFlags

   .. py:attribute:: dependsOnFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.sbcs_zero.dependsOnFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sbcs_zero.dependsOnFlags

.. py:class:: sbcs_to_zero(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.sbcs_to_zero

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.sbcs_to_zero.pattern
      :value: 'sbcs xzr, <Xa>, <Xb>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sbcs_to_zero.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.sbcs_to_zero.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sbcs_to_zero.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.sbcs_to_zero.outputs
      :value: []

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sbcs_to_zero.outputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.sbcs_to_zero.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sbcs_to_zero.modifiesFlags

   .. py:attribute:: dependsOnFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.sbcs_to_zero.dependsOnFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sbcs_to_zero.dependsOnFlags

.. py:class:: sbcs_zero_to_zero(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.sbcs_zero_to_zero

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.sbcs_zero_to_zero.pattern
      :value: 'sbcs xzr, <Xa>, xzr'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sbcs_zero_to_zero.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.sbcs_zero_to_zero.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sbcs_zero_to_zero.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.sbcs_zero_to_zero.outputs
      :value: []

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sbcs_zero_to_zero.outputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.sbcs_zero_to_zero.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sbcs_zero_to_zero.modifiesFlags

   .. py:attribute:: dependsOnFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.sbcs_zero_to_zero.dependsOnFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sbcs_zero_to_zero.dependsOnFlags

.. py:class:: sbc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.sbc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.sbc.pattern
      :value: 'sbc <Xd>, <Xa>, <Xb>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sbc.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.sbc.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sbc.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.sbc.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sbc.outputs

   .. py:attribute:: dependsOnFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.sbc.dependsOnFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sbc.dependsOnFlags

.. py:class:: sbc_zero_r(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.sbc_zero_r

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.sbc_zero_r.pattern
      :value: 'sbc <Xd>, <Xa>, xzr'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sbc_zero_r.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.sbc_zero_r.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sbc_zero_r.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.sbc_zero_r.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sbc_zero_r.outputs

   .. py:attribute:: dependsOnFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.sbc_zero_r.dependsOnFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sbc_zero_r.dependsOnFlags

.. py:class:: adcs_zero_r(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.adcs_zero_r

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.adcs_zero_r.pattern
      :value: 'adcs <Xd>, <Xa>, xzr'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adcs_zero_r.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.adcs_zero_r.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adcs_zero_r.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.adcs_zero_r.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adcs_zero_r.outputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.adcs_zero_r.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adcs_zero_r.modifiesFlags

   .. py:attribute:: dependsOnFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.adcs_zero_r.dependsOnFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adcs_zero_r.dependsOnFlags

.. py:class:: adcs_zero_l(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.adcs_zero_l

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.adcs_zero_l.pattern
      :value: 'adcs <Xd>, xzr, <Xb>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adcs_zero_l.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.adcs_zero_l.inputs
      :value: ['Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adcs_zero_l.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.adcs_zero_l.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adcs_zero_l.outputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.adcs_zero_l.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adcs_zero_l.modifiesFlags

   .. py:attribute:: dependsOnFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.adcs_zero_l.dependsOnFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adcs_zero_l.dependsOnFlags

.. py:class:: adcs_zero2(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.adcs_zero2

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.adcs_zero2.pattern
      :value: 'adcs <Xd>, xzr, xzr'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adcs_zero2.pattern

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.adcs_zero2.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adcs_zero2.outputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.adcs_zero2.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adcs_zero2.modifiesFlags

   .. py:attribute:: dependsOnFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.adcs_zero2.dependsOnFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adcs_zero2.dependsOnFlags

.. py:class:: adcs_to_zero(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.adcs_to_zero

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.adcs_to_zero.pattern
      :value: 'adcs xzr, <Xa>, <Xb>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adcs_to_zero.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.adcs_to_zero.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adcs_to_zero.inputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.adcs_to_zero.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adcs_to_zero.modifiesFlags

   .. py:attribute:: dependsOnFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.adcs_to_zero.dependsOnFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adcs_to_zero.dependsOnFlags

.. py:class:: adcs_zero_r_to_zero(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.adcs_zero_r_to_zero

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.adcs_zero_r_to_zero.pattern
      :value: 'adcs xzr, <Xa>, xzr'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adcs_zero_r_to_zero.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.adcs_zero_r_to_zero.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adcs_zero_r_to_zero.inputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.adcs_zero_r_to_zero.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adcs_zero_r_to_zero.modifiesFlags

   .. py:attribute:: dependsOnFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.adcs_zero_r_to_zero.dependsOnFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adcs_zero_r_to_zero.dependsOnFlags

.. py:class:: adc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.adc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.adc.pattern
      :value: 'adc <Xd>, <Xa>, <Xb>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adc.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.adc.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adc.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.adc.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adc.outputs

   .. py:attribute:: dependsOnFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.adc.dependsOnFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adc.dependsOnFlags

.. py:class:: adc_zero2(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.adc_zero2

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.adc_zero2.pattern
      :value: 'adc <Xd>, xzr, xzr'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adc_zero2.pattern

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.adc_zero2.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adc_zero2.outputs

   .. py:attribute:: dependsOnFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.adc_zero2.dependsOnFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adc_zero2.dependsOnFlags

.. py:class:: adc_zero_r(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.adc_zero_r

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.adc_zero_r.pattern
      :value: 'adc <Xd>, <Xa>, xzr'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adc_zero_r.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.adc_zero_r.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adc_zero_r.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.adc_zero_r.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adc_zero_r.outputs

   .. py:attribute:: dependsOnFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.adc_zero_r.dependsOnFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adc_zero_r.dependsOnFlags

.. py:class:: adc_zero_l(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.adc_zero_l

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.adc_zero_l.pattern
      :value: 'adc <Xd>, xzr, <Xa>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adc_zero_l.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.adc_zero_l.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adc_zero_l.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.adc_zero_l.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adc_zero_l.outputs

   .. py:attribute:: dependsOnFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.adc_zero_l.dependsOnFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adc_zero_l.dependsOnFlags

.. py:class:: add(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.add

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.add.pattern
      :value: 'add <Xd>, <Xa>, <Xb>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.add.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.add.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.add.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.add.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.add.outputs

.. py:class:: add2(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.add2

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.add2.pattern
      :value: 'add <Xd>, <Xa>, <Xb>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.add2.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.add2.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.add2.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.add2.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.add2.outputs

.. py:class:: add_w_imm(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.add_w_imm

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.add_w_imm.pattern
      :value: 'add <Wd>, <Wa>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.add_w_imm.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.add_w_imm.inputs
      :value: ['Wa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.add_w_imm.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.add_w_imm.outputs
      :value: ['Wd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.add_w_imm.outputs

.. py:class:: sub(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.sub

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64BasicArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.sub.pattern
      :value: 'sub <Xd>, <Xa>, <Xb>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sub.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.sub.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sub.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.sub.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sub.outputs

.. py:class:: AArch64ShiftedArithmetic(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.AArch64ShiftedArithmetic

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: eor_ror(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.eor_ror

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64ShiftedArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.eor_ror.pattern
      :value: 'eor <Xd>, <Xa>, <Xb>, ror <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.eor_ror.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.eor_ror.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.eor_ror.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.eor_ror.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.eor_ror.outputs

.. py:class:: bic_ror(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.bic_ror

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64ShiftedArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.bic_ror.pattern
      :value: 'bic <Xd>, <Xa>, <Xb>, ror <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.bic_ror.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.bic_ror.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.bic_ror.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.bic_ror.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.bic_ror.outputs

.. py:class:: add_lsl(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.add_lsl

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64ShiftedArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.add_lsl.pattern
      :value: 'add <Xd>, <Xa>, <Xb>, lsl <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.add_lsl.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.add_lsl.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.add_lsl.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.add_lsl.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.add_lsl.outputs

.. py:class:: add_lsr(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.add_lsr

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64ShiftedArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.add_lsr.pattern
      :value: 'add <Xd>, <Xa>, <Xb>, lsr <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.add_lsr.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.add_lsr.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.add_lsr.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.add_lsr.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.add_lsr.outputs

.. py:class:: adds_lsl(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.adds_lsl

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64ShiftedArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.adds_lsl.pattern
      :value: 'adds <Xd>, <Xa>, <Xb>, lsl <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adds_lsl.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.adds_lsl.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adds_lsl.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.adds_lsl.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adds_lsl.outputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.adds_lsl.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adds_lsl.modifiesFlags

.. py:class:: adds_lsr(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.adds_lsr

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64ShiftedArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.adds_lsr.pattern
      :value: 'adds <Xd>, <Xa>, <Xb>, lsr <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adds_lsr.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.adds_lsr.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adds_lsr.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.adds_lsr.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adds_lsr.outputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.adds_lsr.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.adds_lsr.modifiesFlags

.. py:class:: add_asr(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.add_asr

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64ShiftedArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.add_asr.pattern
      :value: 'add <Xd>, <Xa>, <Xb>, asr <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.add_asr.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.add_asr.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.add_asr.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.add_asr.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.add_asr.outputs

.. py:class:: add_imm_lsl(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.add_imm_lsl

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64ShiftedArithmetic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.add_imm_lsl.pattern
      :value: 'add <Xd>, <Xa>, <imm0>, lsl <imm1>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.add_imm_lsl.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.add_imm_lsl.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.add_imm_lsl.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.add_imm_lsl.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.add_imm_lsl.outputs

.. py:class:: AArch64Shift(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.AArch64Shift

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: lsr(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.lsr

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Shift`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.lsr.pattern
      :value: 'lsr <Xd>, <Xa>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.lsr.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.lsr.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.lsr.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.lsr.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.lsr.outputs

.. py:class:: lsr_variable(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.lsr_variable

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Shift`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.lsr_variable.pattern
      :value: 'lsr <Xd>, <Xa>, <Xc>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.lsr_variable.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.lsr_variable.inputs
      :value: ['Xa', 'Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.lsr_variable.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.lsr_variable.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.lsr_variable.outputs

.. py:class:: lsl(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.lsl

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Shift`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.lsl.pattern
      :value: 'lsl <Xd>, <Xa>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.lsl.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.lsl.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.lsl.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.lsl.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.lsl.outputs

.. py:class:: ror(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.ror

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Shift`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.ror.pattern
      :value: 'ror <Xd>, <Xa>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ror.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.ror.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ror.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.ror.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ror.outputs

.. py:class:: asr(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.asr

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Shift`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.asr.pattern
      :value: 'asr <Xd>, <Xa>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.asr.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.asr.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.asr.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.asr.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.asr.outputs

.. py:class:: AArch64Logical(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.AArch64Logical

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: rev_w(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.rev_w

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Logical`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.rev_w.pattern
      :value: 'rev <Wd>, <Wa>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.rev_w.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.rev_w.inputs
      :value: ['Wa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.rev_w.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.rev_w.outputs
      :value: ['Wd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.rev_w.outputs

.. py:class:: eor(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.eor

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Logical`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.eor.pattern
      :value: 'eor <Xd>, <Xa>, <Xb>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.eor.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.eor.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.eor.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.eor.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.eor.outputs

.. py:class:: orr(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.orr

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Logical`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.orr.pattern
      :value: 'orr <Xd>, <Xa>, <Xb>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.orr.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.orr.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.orr.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.orr.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.orr.outputs

.. py:class:: orr_w(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.orr_w

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Logical`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.orr_w.pattern
      :value: 'orr <Wd>, <Wa>, <Wb>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.orr_w.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.orr_w.inputs
      :value: ['Wa', 'Wb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.orr_w.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.orr_w.outputs
      :value: ['Wd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.orr_w.outputs

.. py:class:: bfi(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.bfi

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Logical`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.bfi.pattern
      :value: 'bfi <Xd>, <Xa>, <imm0>, <imm1>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.bfi.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.bfi.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.bfi.inputs

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.bfi.in_outs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.bfi.in_outs

.. py:class:: and_imm(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.and_imm

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Logical`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.and_imm.pattern
      :value: 'and <Xd>, <Xa>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.and_imm.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.and_imm.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.and_imm.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.and_imm.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.and_imm.outputs

.. py:class:: ands_imm(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.ands_imm

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Logical`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.ands_imm.pattern
      :value: 'ands <Xd>, <Xa>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ands_imm.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.ands_imm.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ands_imm.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.ands_imm.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ands_imm.outputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.ands_imm.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ands_imm.modifiesFlags

.. py:class:: ands_xzr_imm(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.ands_xzr_imm

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Logical`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.ands_xzr_imm.pattern
      :value: 'ands xzr, <Xa>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ands_xzr_imm.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.ands_xzr_imm.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ands_xzr_imm.inputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.ands_xzr_imm.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ands_xzr_imm.modifiesFlags

.. py:class:: and_twoarg(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.and_twoarg

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Logical`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.and_twoarg.pattern
      :value: 'and <Xd>, <Xa>, <Xb>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.and_twoarg.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.and_twoarg.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.and_twoarg.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.and_twoarg.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.and_twoarg.outputs

.. py:class:: bic(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.bic

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Logical`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.bic.pattern
      :value: 'bic <Xd>, <Xa>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.bic.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.bic.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.bic.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.bic.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.bic.outputs

.. py:class:: orr_imm(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.orr_imm

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Logical`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.orr_imm.pattern
      :value: 'orr <Xd>, <Xa>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.orr_imm.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.orr_imm.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.orr_imm.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.orr_imm.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.orr_imm.outputs

.. py:class:: sbfx(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.sbfx

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Logical`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.sbfx.pattern
      :value: 'sbfx <Xd>, <Xa>, <imm0>, <imm1>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sbfx.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.sbfx.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sbfx.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.sbfx.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.sbfx.outputs

.. py:class:: ubfx(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.ubfx

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Logical`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.ubfx.pattern
      :value: 'ubfx <Xd>, <Xa>, <imm0>, <imm1>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ubfx.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.ubfx.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ubfx.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.ubfx.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ubfx.outputs

.. py:class:: extr(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.extr

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Logical`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.extr.pattern
      :value: 'extr <Xd>, <Xa>, <Xb>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.extr.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.extr.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.extr.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.extr.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.extr.outputs

.. py:class:: AArch64LogicalShifted(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.AArch64LogicalShifted

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: orr_shifted(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.orr_shifted

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64LogicalShifted`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.orr_shifted.pattern
      :value: 'orr <Xd>, <Xa>, <Xb>, lsl <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.orr_shifted.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.orr_shifted.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.orr_shifted.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.orr_shifted.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.orr_shifted.outputs

.. py:class:: orr_shifted_asr_w(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.orr_shifted_asr_w

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64LogicalShifted`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.orr_shifted_asr_w.pattern
      :value: 'and <Wd>, <Wa>, <Wb>, asr <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.orr_shifted_asr_w.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.orr_shifted_asr_w.inputs
      :value: ['Wa', 'Wb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.orr_shifted_asr_w.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.orr_shifted_asr_w.outputs
      :value: ['Wd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.orr_shifted_asr_w.outputs

.. py:class:: orr_shifted_asr(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.orr_shifted_asr

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64LogicalShifted`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.orr_shifted_asr.pattern
      :value: 'orr <Xd>, <Xa>, <Xb>, asr <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.orr_shifted_asr.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.orr_shifted_asr.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.orr_shifted_asr.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.orr_shifted_asr.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.orr_shifted_asr.outputs

.. py:class:: eor_shifted_lsl(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.eor_shifted_lsl

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64LogicalShifted`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.eor_shifted_lsl.pattern
      :value: 'eor <Xd>, <Xa>, <Xb>, lsl <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.eor_shifted_lsl.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.eor_shifted_lsl.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.eor_shifted_lsl.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.eor_shifted_lsl.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.eor_shifted_lsl.outputs

.. py:class:: AArch64ConditionalCompare(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.AArch64ConditionalCompare

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: ccmp_xzr(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.ccmp_xzr

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64ConditionalCompare`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.ccmp_xzr.pattern
      :value: 'ccmp <Xa>, xzr, <imm>, <flag>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ccmp_xzr.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.ccmp_xzr.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ccmp_xzr.inputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.ccmp_xzr.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ccmp_xzr.modifiesFlags

   .. py:attribute:: dependsOnFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.ccmp_xzr.dependsOnFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ccmp_xzr.dependsOnFlags

.. py:class:: ccmp(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.ccmp

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64ConditionalCompare`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.ccmp.pattern
      :value: 'ccmp <Xa>, <Xb>, <imm>, <flag>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ccmp.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.ccmp.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ccmp.inputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.ccmp.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ccmp.modifiesFlags

   .. py:attribute:: dependsOnFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.ccmp.dependsOnFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ccmp.dependsOnFlags

.. py:class:: AArch64ConditionalSelect(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.AArch64ConditionalSelect

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: cneg(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.cneg

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64ConditionalSelect`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.cneg.pattern
      :value: 'cneg <Xd>, <Xe>, <flag>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cneg.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.cneg.inputs
      :value: ['Xe']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cneg.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.cneg.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cneg.outputs

   .. py:attribute:: dependsOnFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.cneg.dependsOnFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cneg.dependsOnFlags

.. py:class:: csel_xzr_ne(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.csel_xzr_ne

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64ConditionalSelect`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.csel_xzr_ne.pattern
      :value: 'csel <Xd>, <Xe>, xzr, <flag>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.csel_xzr_ne.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.csel_xzr_ne.inputs
      :value: ['Xe']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.csel_xzr_ne.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.csel_xzr_ne.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.csel_xzr_ne.outputs

   .. py:attribute:: dependsOnFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.csel_xzr_ne.dependsOnFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.csel_xzr_ne.dependsOnFlags

.. py:class:: csel_xzr2_ne(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.csel_xzr2_ne

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64ConditionalSelect`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.csel_xzr2_ne.pattern
      :value: 'csel <Xd>, xzr, <Xe>, <flag>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.csel_xzr2_ne.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.csel_xzr2_ne.inputs
      :value: ['Xe']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.csel_xzr2_ne.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.csel_xzr2_ne.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.csel_xzr2_ne.outputs

   .. py:attribute:: dependsOnFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.csel_xzr2_ne.dependsOnFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.csel_xzr2_ne.dependsOnFlags

.. py:class:: csel_ne(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.csel_ne

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64ConditionalSelect`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.csel_ne.pattern
      :value: 'csel <Xd>, <Xe>, <Xf>, <flag>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.csel_ne.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.csel_ne.inputs
      :value: ['Xe', 'Xf']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.csel_ne.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.csel_ne.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.csel_ne.outputs

   .. py:attribute:: dependsOnFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.csel_ne.dependsOnFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.csel_ne.dependsOnFlags

.. py:class:: cinv(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.cinv

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64ConditionalSelect`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.cinv.pattern
      :value: 'cinv <Xd>, <Xe>, <flag>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cinv.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.cinv.inputs
      :value: ['Xe']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cinv.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.cinv.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cinv.outputs

   .. py:attribute:: dependsOnFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.cinv.dependsOnFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cinv.dependsOnFlags

.. py:class:: cinc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.cinc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64ConditionalSelect`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.cinc.pattern
      :value: 'cinc <Xd>, <Xe>, <flag>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cinc.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.cinc.inputs
      :value: ['Xe']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cinc.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.cinc.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cinc.outputs

   .. py:attribute:: dependsOnFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.cinc.dependsOnFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cinc.dependsOnFlags

.. py:class:: csetm(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.csetm

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64ConditionalSelect`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.csetm.pattern
      :value: 'csetm <Xd>, <flag>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.csetm.pattern

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.csetm.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.csetm.outputs

   .. py:attribute:: dependsOnFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.csetm.dependsOnFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.csetm.dependsOnFlags

.. py:class:: cset(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.cset

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64ConditionalSelect`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.cset.pattern
      :value: 'cset <Xd>, <flag>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cset.pattern

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.cset.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cset.outputs

   .. py:attribute:: dependsOnFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.cset.dependsOnFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cset.dependsOnFlags

.. py:class:: cmn(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.cmn

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64ConditionalSelect`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.cmn.pattern
      :value: 'cmn <Xd>, <Xe>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cmn.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.cmn.inputs
      :value: ['Xd', 'Xe']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cmn.inputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.cmn.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cmn.modifiesFlags

.. py:class:: cmn_imm(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.cmn_imm

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64ConditionalSelect`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.cmn_imm.pattern
      :value: 'cmn <Xd>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cmn_imm.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.cmn_imm.inputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cmn_imm.inputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.cmn_imm.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cmn_imm.modifiesFlags

.. py:class:: ldr_const(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.ldr_const

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.ldr_const.pattern
      :value: 'ldr <Xd>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ldr_const.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.ldr_const.inputs
      :value: []

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ldr_const.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.ldr_const.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ldr_const.outputs

.. py:class:: movk_imm(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.movk_imm

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.movk_imm.pattern
      :value: 'movk <Xd>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.movk_imm.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.movk_imm.inputs
      :value: []

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.movk_imm.inputs

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.movk_imm.in_outs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.movk_imm.in_outs

.. py:class:: mov(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.mov

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.mov.pattern
      :value: 'mov <Wd>, <Wa>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mov.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.mov.inputs
      :value: ['Wa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mov.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.mov.outputs
      :value: ['Wd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mov.outputs

.. py:class:: AArch64Move(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.AArch64Move

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: mov_imm(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.mov_imm

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Move`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.mov_imm.pattern
      :value: 'mov <Xd>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mov_imm.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.mov_imm.inputs
      :value: []

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mov_imm.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.mov_imm.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mov_imm.outputs

.. py:class:: movw_imm(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.movw_imm

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Move`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.movw_imm.pattern
      :value: 'mov <Wd>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.movw_imm.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.movw_imm.inputs
      :value: []

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.movw_imm.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.movw_imm.outputs
      :value: ['Wd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.movw_imm.outputs

.. py:class:: mvn_xzr(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.mvn_xzr

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Move`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.mvn_xzr.pattern
      :value: 'mvn <Xd>, xzr'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mvn_xzr.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.mvn_xzr.inputs
      :value: []

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mvn_xzr.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.mvn_xzr.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mvn_xzr.outputs

.. py:class:: mov_xform(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.mov_xform

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Move`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.mov_xform.pattern
      :value: 'mov <Xd>, <Xa>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mov_xform.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.mov_xform.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mov_xform.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.mov_xform.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mov_xform.outputs

.. py:class:: umull_wform(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.umull_wform

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.umull_wform.pattern
      :value: 'umull <Xd>, <Wa>, <Wb>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.umull_wform.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.umull_wform.inputs
      :value: ['Wa', 'Wb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.umull_wform.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.umull_wform.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.umull_wform.outputs

.. py:class:: umaddl_wform(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.umaddl_wform

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.umaddl_wform.pattern
      :value: 'umaddl <Xn>, <Wa>, <Wb>, <Xacc>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.umaddl_wform.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.umaddl_wform.inputs
      :value: ['Wa', 'Wb', 'Xacc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.umaddl_wform.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.umaddl_wform.outputs
      :value: ['Xn']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.umaddl_wform.outputs

.. py:class:: mul_wform(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.mul_wform

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.mul_wform.pattern
      :value: 'mul <Wd>, <Wa>, <Wb>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mul_wform.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.mul_wform.inputs
      :value: ['Wa', 'Wb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mul_wform.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.mul_wform.outputs
      :value: ['Wd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mul_wform.outputs

.. py:class:: AArch64HighMultiply(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.AArch64HighMultiply

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: umulh_xform(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.umulh_xform

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64HighMultiply`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.umulh_xform.pattern
      :value: 'umulh <Xd>, <Xa>, <Xb>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.umulh_xform.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.umulh_xform.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.umulh_xform.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.umulh_xform.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.umulh_xform.outputs

.. py:class:: smulh_xform(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.smulh_xform

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64HighMultiply`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.smulh_xform.pattern
      :value: 'smulh <Xd>, <Xa>, <Xb>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.smulh_xform.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.smulh_xform.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.smulh_xform.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.smulh_xform.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.smulh_xform.outputs

.. py:class:: AArch64Multiply(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.AArch64Multiply

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: mul_xform(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.mul_xform

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Multiply`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.mul_xform.pattern
      :value: 'mul <Xd>, <Xa>, <Xb>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mul_xform.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.mul_xform.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mul_xform.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.mul_xform.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mul_xform.outputs

.. py:class:: madd_xform(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.madd_xform

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Multiply`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.madd_xform.pattern
      :value: 'madd <Xd>, <Xacc>, <Xa>, <Xb>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.madd_xform.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.madd_xform.inputs
      :value: ['Xacc', 'Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.madd_xform.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.madd_xform.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.madd_xform.outputs

.. py:class:: mneg_xform(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.mneg_xform

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Multiply`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.mneg_xform.pattern
      :value: 'mneg <Xd>, <Xa>, <Xb>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mneg_xform.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.mneg_xform.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mneg_xform.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.mneg_xform.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mneg_xform.outputs

.. py:class:: msub_xform(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.msub_xform

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Multiply`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.msub_xform.pattern
      :value: 'msub <Xd>, <Xacc>, <Xa>, <Xb>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.msub_xform.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.msub_xform.inputs
      :value: ['Xacc', 'Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.msub_xform.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.msub_xform.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.msub_xform.outputs

.. py:class:: and_imm_wform(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.and_imm_wform

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.and_imm_wform.pattern
      :value: 'and <Wd>, <Wa>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.and_imm_wform.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.and_imm_wform.inputs
      :value: ['Wa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.and_imm_wform.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.and_imm_wform.outputs
      :value: ['Wd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.and_imm_wform.outputs

.. py:class:: Tst(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.Tst

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: tst_wform(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.tst_wform

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Tst`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.tst_wform.pattern
      :value: 'tst <Wa>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.tst_wform.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.tst_wform.inputs
      :value: ['Wa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.tst_wform.inputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.tst_wform.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.tst_wform.modifiesFlags

.. py:class:: tst_imm_xform(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.tst_imm_xform

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Tst`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.tst_imm_xform.pattern
      :value: 'tst <Xa>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.tst_imm_xform.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.tst_imm_xform.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.tst_imm_xform.inputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.tst_imm_xform.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.tst_imm_xform.modifiesFlags

.. py:class:: tst_xform(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.tst_xform

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Tst`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.tst_xform.pattern
      :value: 'tst <Xa>, <Xb>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.tst_xform.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.tst_xform.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.tst_xform.inputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.tst_xform.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.tst_xform.modifiesFlags

.. py:class:: cmp(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.cmp

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Tst`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.cmp.pattern
      :value: 'cmp <Xa>, <Xb>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cmp.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.cmp.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cmp.inputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.cmp.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cmp.modifiesFlags

.. py:class:: cmp_xzr(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.cmp_xzr

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Tst`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.cmp_xzr.pattern
      :value: 'cmp <Xa>, xzr'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cmp_xzr.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.cmp_xzr.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cmp_xzr.inputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.cmp_xzr.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cmp_xzr.modifiesFlags

.. py:class:: cmp_xzr2(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.cmp_xzr2

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Tst`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.cmp_xzr2.pattern
      :value: 'cmp xzr, xzr'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cmp_xzr2.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.cmp_xzr2.inputs
      :value: []

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cmp_xzr2.inputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.cmp_xzr2.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cmp_xzr2.modifiesFlags

.. py:class:: cmp_imm(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.cmp_imm

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Tst`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.cmp_imm.pattern
      :value: 'cmp <Xa>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cmp_imm.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.cmp_imm.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cmp_imm.inputs

   .. py:attribute:: modifiesFlags
      :canonical: slothy.targets.aarch64.aarch64_neon.cmp_imm.modifiesFlags
      :value: True

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cmp_imm.modifiesFlags

.. py:class:: vmov(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vmov

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vmov.pattern
      :value: 'mov <Vd>.<dt0>, <Va>.<dt1>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmov.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vmov.inputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmov.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vmov.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmov.outputs

.. py:class:: vmovi(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vmovi

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vmovi.pattern
      :value: 'movi <Vd>.<dt>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmovi.pattern

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vmovi.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmovi.outputs

.. py:class:: vxtn(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vxtn

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vxtn.pattern
      :value: 'xtn <Vd>.<dt0>, <Va>.<dt1>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vxtn.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vxtn.inputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vxtn.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vxtn.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vxtn.outputs

.. py:class:: Vrev(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.Vrev

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: rev64(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.rev64

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Vrev`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.rev64.pattern
      :value: 'rev64 <Vd>.<dt0>, <Va>.<dt1>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.rev64.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.rev64.inputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.rev64.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.rev64.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.rev64.outputs

.. py:class:: rev32(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.rev32

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Vrev`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.rev32.pattern
      :value: 'rev32 <Vd>.<dt0>, <Va>.<dt1>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.rev32.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.rev32.inputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.rev32.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.rev32.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.rev32.outputs

.. py:class:: uaddlp(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.uaddlp

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.uaddlp.pattern
      :value: 'uaddlp <Vd>.<dt0>, <Va>.<dt1>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.uaddlp.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.uaddlp.inputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.uaddlp.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.uaddlp.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.uaddlp.outputs

.. py:class:: vand(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vand

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vand.pattern
      :value: 'and <Vd>.<dt0>, <Va>.<dt1>, <Vb>.<dt2>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vand.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vand.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vand.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vand.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vand.outputs

.. py:class:: vbic(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vbic

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vbic.pattern
      :value: 'bic <Vd>.<dt0>, <Va>.<dt1>, <Vb>.<dt2>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vbic.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vbic.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vbic.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vbic.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vbic.outputs

.. py:class:: Vzip(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.Vzip

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: vzip1(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vzip1

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Vzip`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vzip1.pattern
      :value: 'zip1 <Vd>.<dt0>, <Va>.<dt1>, <Vb>.<dt2>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vzip1.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vzip1.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vzip1.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vzip1.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vzip1.outputs

.. py:class:: vzip2(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vzip2

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Vzip`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vzip2.pattern
      :value: 'zip2 <Vd>.<dt0>, <Va>.<dt1>, <Vb>.<dt2>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vzip2.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vzip2.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vzip2.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vzip2.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vzip2.outputs

.. py:class:: vuzp1(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vuzp1

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Vzip`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vuzp1.pattern
      :value: 'uzp1 <Vd>.<dt0>, <Va>.<dt1>, <Vb>.<dt2>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vuzp1.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vuzp1.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vuzp1.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vuzp1.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vuzp1.outputs

.. py:class:: vuzp2(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vuzp2

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Vzip`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vuzp2.pattern
      :value: 'uzp2 <Vd>.<dt0>, <Va>.<dt1>, <Vb>.<dt2>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vuzp2.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vuzp2.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vuzp2.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vuzp2.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vuzp2.outputs

.. py:class:: vuxtl(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vuxtl

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vuxtl.pattern
      :value: 'uxtl <Vd>.<dt0>, <Va>.<dt1>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vuxtl.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vuxtl.inputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vuxtl.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vuxtl.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vuxtl.outputs

.. py:class:: Vqdmulh(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.Vqdmulh

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: vqrdmulh(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vqrdmulh

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Vqdmulh`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vqrdmulh.pattern
      :value: 'sqrdmulh <Vd>.<dt0>, <Va>.<dt1>, <Vb>.<dt2>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vqrdmulh.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vqrdmulh.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vqrdmulh.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vqrdmulh.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vqrdmulh.outputs

.. py:class:: vqrdmulh_lane(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vqrdmulh_lane

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Vqdmulh`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vqrdmulh_lane.pattern
      :value: 'sqrdmulh <Vd>.<dt0>, <Va>.<dt1>, <Vb>.<dt2>[<index>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vqrdmulh_lane.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vqrdmulh_lane.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vqrdmulh_lane.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vqrdmulh_lane.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vqrdmulh_lane.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.vqrdmulh_lane.make
      :classmethod:

.. py:class:: vqdmulh_lane(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vqdmulh_lane

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Vqdmulh`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vqdmulh_lane.pattern
      :value: 'sqdmulh <Vd>.<dt0>, <Va>.<dt1>, <Vb>.<dt2>[<index>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vqdmulh_lane.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vqdmulh_lane.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vqdmulh_lane.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vqdmulh_lane.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vqdmulh_lane.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.vqdmulh_lane.make
      :classmethod:

.. py:class:: fcsel_dform(*, mnemonic, arg_types_in=None, arg_types_in_out=None, arg_types_out=None)
   :canonical: slothy.targets.aarch64.aarch64_neon.fcsel_dform

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Instruction`

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.fcsel_dform

   .. rubric:: Initialization

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.fcsel_dform.__init__

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.fcsel_dform.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.fcsel_dform.write

.. py:class:: Vins(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.Vins

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: vins_d(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vins_d

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Vins`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vins_d.pattern
      :value: 'ins <Vd>.d[<index>], <Xa>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vins_d.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vins_d.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vins_d.inputs

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.vins_d.in_outs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vins_d.in_outs

.. py:class:: vins_d_force_output(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vins_d_force_output

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Vins`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vins_d_force_output.pattern
      :value: 'ins <Vd>.d[<index>], <Xa>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vins_d_force_output.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vins_d_force_output.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vins_d_force_output.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vins_d_force_output.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vins_d_force_output.outputs

   .. py:method:: make(src, force=False)
      :canonical: slothy.targets.aarch64.aarch64_neon.vins_d_force_output.make
      :classmethod:

.. py:class:: Mov_xtov_d(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.Mov_xtov_d

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: mov_xtov_d(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.mov_xtov_d

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Mov_xtov_d`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.mov_xtov_d.pattern
      :value: 'mov <Vd>.d[<index>], <Xa>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mov_xtov_d.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.mov_xtov_d.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mov_xtov_d.inputs

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.mov_xtov_d.in_outs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mov_xtov_d.in_outs

.. py:class:: mov_xtov_d_xzr(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.mov_xtov_d_xzr

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Mov_xtov_d`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.mov_xtov_d_xzr.pattern
      :value: 'mov <Vd>.d[<index>], xzr'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mov_xtov_d_xzr.pattern

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.mov_xtov_d_xzr.in_outs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mov_xtov_d_xzr.in_outs

.. py:class:: mov_b00(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.mov_b00

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.mov_b00.pattern
      :value: 'mov <Vd>.b[0], <Va>.b[0]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mov_b00.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.mov_b00.inputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mov_b00.inputs

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.mov_b00.in_outs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mov_b00.in_outs

.. py:class:: mov_d01(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.mov_d01

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.mov_d01.pattern
      :value: 'mov <Vd>.d[0], <Va>.d[1]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mov_d01.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.mov_d01.inputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mov_d01.inputs

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.mov_d01.in_outs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mov_d01.in_outs

.. py:class:: SHA3Instruction(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.SHA3Instruction

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: vrax1(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vrax1

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.SHA3Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vrax1.pattern
      :value: 'rax1 <Vd>.<dt0>, <Va>.<dt1>, <Vb>.<dt2>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vrax1.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vrax1.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vrax1.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vrax1.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vrax1.outputs

.. py:class:: veor3(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.veor3

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.SHA3Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.veor3.pattern
      :value: 'eor3 <Vd>.<dt0>, <Va>.<dt1>, <Vb>.<dt2>, <Vc>.<dt3>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.veor3.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.veor3.inputs
      :value: ['Va', 'Vb', 'Vc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.veor3.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.veor3.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.veor3.outputs

.. py:class:: vbcax(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vbcax

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.SHA3Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vbcax.pattern
      :value: 'bcax <Vd>.<dt0>, <Va>.<dt1>, <Vb>.<dt2>, <Vc>.<dt3>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vbcax.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vbcax.inputs
      :value: ['Va', 'Vb', 'Vc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vbcax.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vbcax.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vbcax.outputs

.. py:class:: vxar(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vxar

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.SHA3Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vxar.pattern
      :value: 'xar <Vd>.<dt0>, <Va>.<dt1>, <Vb>.<dt2>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vxar.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vxar.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vxar.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vxar.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vxar.outputs

.. py:class:: AArch64NeonLogical(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.AArch64NeonLogical

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: veor(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.veor

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64NeonLogical`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.veor.pattern
      :value: 'eor <Vd>.<dt0>, <Va>.<dt1>, <Vb>.<dt2>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.veor.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.veor.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.veor.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.veor.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.veor.outputs

.. py:class:: vbif(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vbif

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64NeonLogical`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vbif.pattern
      :value: 'bif <Vd>.<dt0>, <Va>.<dt1>, <Vb>.<dt2>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vbif.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vbif.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vbif.inputs

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.vbif.in_outs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vbif.in_outs

.. py:class:: vmov_d(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vmov_d

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64NeonLogical`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vmov_d.pattern
      :value: 'mov <Dd>, <Va>.d[1]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmov_d.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vmov_d.inputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmov_d.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vmov_d.outputs
      :value: ['Dd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmov_d.outputs

.. py:class:: vext(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vext

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64NeonLogical`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vext.pattern
      :value: 'ext <Vd>.<dt0>, <Va>.<dt1>, <Vb>.<dt2>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vext.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vext.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vext.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vext.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vext.outputs

.. py:class:: vsri(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vsri

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64NeonLogical`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vsri.pattern
      :value: 'sri <Vd>.<dt0>, <Va>.<dt1>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vsri.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vsri.inputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vsri.inputs

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.vsri.in_outs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vsri.in_outs

.. py:class:: Vmul(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.Vmul

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: vmul(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vmul

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Vmul`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vmul.pattern
      :value: 'mul <Vd>.<dt0>, <Va>.<dt1>, <Vb>.<dt2>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmul.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vmul.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmul.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vmul.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmul.outputs

.. py:class:: vmul_lane(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vmul_lane

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Vmul`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vmul_lane.pattern
      :value: 'mul <Vd>.<dt0>, <Va>.<dt1>, <Vb>.<dt2>[<index>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmul_lane.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vmul_lane.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmul_lane.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vmul_lane.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmul_lane.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.vmul_lane.make
      :classmethod:

.. py:class:: Vmla(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.Vmla

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: vmla(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vmla

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Vmla`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vmla.pattern
      :value: 'mla <Vd>.<dt0>, <Va>.<dt1>, <Vb>.<dt2>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmla.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vmla.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmla.inputs

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.vmla.in_outs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmla.in_outs

.. py:class:: vmla_lane(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vmla_lane

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Vmla`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vmla_lane.pattern
      :value: 'mla <Vd>.<dt0>, <Va>.<dt1>, <Vb>.<dt2>[<index>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmla_lane.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vmla_lane.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmla_lane.inputs

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.vmla_lane.in_outs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmla_lane.in_outs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.vmla_lane.make
      :classmethod:

.. py:class:: vmls(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vmls

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Vmla`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vmls.pattern
      :value: 'mls <Vd>.<dt0>, <Va>.<dt1>, <Vb>.<dt2>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmls.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vmls.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmls.inputs

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.vmls.in_outs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmls.in_outs

.. py:class:: vmls_lane(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vmls_lane

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Vmla`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vmls_lane.pattern
      :value: 'mls <Vd>.<dt0>, <Va>.<dt1>, <Vb>.<dt2>[<index>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmls_lane.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vmls_lane.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmls_lane.inputs

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.vmls_lane.in_outs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmls_lane.in_outs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.vmls_lane.make
      :classmethod:

.. py:class:: vdup(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vdup

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vdup.pattern
      :value: 'dup <Vd>.<dt>, <Xa>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vdup.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vdup.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vdup.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vdup.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vdup.outputs

.. py:class:: Vmull(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.Vmull

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: vmull(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vmull

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Vmull`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vmull.pattern
      :value: 'umull <Vd>.<dt0>, <Va>.<dt1>, <Vb>.<dt2>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmull.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vmull.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmull.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vmull.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmull.outputs

.. py:class:: vmull2(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vmull2

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Vmull`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vmull2.pattern
      :value: 'umull2 <Vd>.<dt0>, <Va>.<dt1>, <Vb>.<dt2>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmull2.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vmull2.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmull2.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vmull2.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmull2.outputs

.. py:class:: vsmull(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vsmull

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Vmull`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vsmull.pattern
      :value: 'smull <Vd>.<dt0>, <Va>.<dt1>, <Vb>.<dt2>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vsmull.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vsmull.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vsmull.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vsmull.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vsmull.outputs

.. py:class:: vsmull2(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vsmull2

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Vmull`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vsmull2.pattern
      :value: 'smull2 <Vd>.<dt0>, <Va>.<dt1>, <Vb>.<dt2>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vsmull2.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vsmull2.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vsmull2.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vsmull2.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vsmull2.outputs

.. py:class:: Vmlal(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.Vmlal

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: vmlal(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vmlal

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Vmlal`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vmlal.pattern
      :value: 'umlal <Vd>.<dt0>, <Va>.<dt1>, <Vb>.<dt2>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmlal.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vmlal.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmlal.inputs

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.vmlal.in_outs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vmlal.in_outs

.. py:class:: vsmlal(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vsmlal

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Vmlal`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vsmlal.pattern
      :value: 'smlal <Vd>.<dt0>, <Va>.<dt1>, <Vb>.<dt2>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vsmlal.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vsmlal.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vsmlal.inputs

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.vsmlal.in_outs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vsmlal.in_outs

.. py:class:: vsmlal2(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vsmlal2

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Vmlal`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vsmlal2.pattern
      :value: 'smlal2 <Vd>.<dt0>, <Va>.<dt1>, <Vb>.<dt2>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vsmlal2.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vsmlal2.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vsmlal2.inputs

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.vsmlal2.in_outs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vsmlal2.in_outs

.. py:class:: VShiftImmediateBasic(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.VShiftImmediateBasic

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: VShiftImmediateRounding(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.VShiftImmediateRounding

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: vsrshr(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vsrshr

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.VShiftImmediateRounding`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vsrshr.pattern
      :value: 'srshr <Vd>.<dt0>, <Va>.<dt1>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vsrshr.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vsrshr.inputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vsrshr.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vsrshr.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vsrshr.outputs

.. py:class:: vurshr(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vurshr

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.VShiftImmediateRounding`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vurshr.pattern
      :value: 'urshr <Vd>.<dt0>, <Va>.<dt1>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vurshr.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vurshr.inputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vurshr.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vurshr.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vurshr.outputs

.. py:class:: vsshr(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vsshr

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.VShiftImmediateBasic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vsshr.pattern
      :value: 'sshr <Vd>.<dt0>, <Va>.<dt1>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vsshr.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vsshr.inputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vsshr.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vsshr.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vsshr.outputs

.. py:class:: vushr(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vushr

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.VShiftImmediateBasic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vushr.pattern
      :value: 'ushr <Vd>.<dt0>, <Va>.<dt1>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vushr.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vushr.inputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vushr.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vushr.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vushr.outputs

.. py:class:: vshl(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vshl

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.VShiftImmediateBasic`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vshl.pattern
      :value: 'shl <Vd>.<dt0>, <Va>.<dt1>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vshl.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vshl.inputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vshl.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vshl.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vshl.outputs

.. py:class:: vshl_d(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vshl_d

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vshl_d.pattern
      :value: 'shl <Dd>, <Da>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vshl_d.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vshl_d.inputs
      :value: ['Da']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vshl_d.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vshl_d.outputs
      :value: ['Dd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vshl_d.outputs

.. py:class:: vshli(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vshli

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vshli.pattern
      :value: 'sli <Vd>.<dt0>, <Va>.<dt1>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vshli.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vshli.inputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vshli.inputs

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.vshli.in_outs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vshli.in_outs

.. py:class:: vusra(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vusra

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vusra.pattern
      :value: 'usra <Vd>.<dt0>, <Va>.<dt1>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vusra.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vusra.inputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vusra.inputs

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.vusra.in_outs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vusra.in_outs

.. py:class:: vshrn(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.vshrn

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.vshrn.pattern
      :value: 'shrn <Vd>.<dt0>, <Va>.<dt1>, <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vshrn.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vshrn.inputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vshrn.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.vshrn.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vshrn.outputs

.. py:class:: VecToGprMov(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.VecToGprMov

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: umov_d(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.umov_d

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.VecToGprMov`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.umov_d.pattern
      :value: 'umov <Xd>, <Va>.d[<index>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.umov_d.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.umov_d.inputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.umov_d.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.umov_d.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.umov_d.outputs

.. py:class:: mov_d(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.mov_d

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.VecToGprMov`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.mov_d.pattern
      :value: 'mov <Xd>, <Va>.d[<index>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mov_d.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.mov_d.inputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mov_d.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.mov_d.outputs
      :value: ['Xd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.mov_d.outputs

.. py:class:: Fmov(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.Fmov

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: fmov_0(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.fmov_0

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Fmov`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.fmov_0.pattern
      :value: 'fmov <Dd>, <Xa>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.fmov_0.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.fmov_0.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.fmov_0.inputs

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.fmov_0.in_outs
      :value: ['Dd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.fmov_0.in_outs

.. py:class:: fmov_0_force_output(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.fmov_0_force_output

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Fmov`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.fmov_0_force_output.pattern
      :value: 'fmov <Dd>, <Xa>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.fmov_0_force_output.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.fmov_0_force_output.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.fmov_0_force_output.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.fmov_0_force_output.outputs
      :value: ['Dd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.fmov_0_force_output.outputs

   .. py:method:: make(src, force=False)
      :canonical: slothy.targets.aarch64.aarch64_neon.fmov_0_force_output.make
      :classmethod:

.. py:class:: fmov_1(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.fmov_1

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Fmov`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.fmov_1.pattern
      :value: 'fmov <Vd>.d[1], <Xa>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.fmov_1.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.fmov_1.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.fmov_1.inputs

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.fmov_1.in_outs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.fmov_1.in_outs

.. py:class:: fmov_1_force_output(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.fmov_1_force_output

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Fmov`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.fmov_1_force_output.pattern
      :value: 'fmov <Vd>.d[1], <Xa>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.fmov_1_force_output.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.fmov_1_force_output.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.fmov_1_force_output.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.fmov_1_force_output.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.fmov_1_force_output.outputs

   .. py:method:: make(src, force=False)
      :canonical: slothy.targets.aarch64.aarch64_neon.fmov_1_force_output.make
      :classmethod:

.. py:class:: Transpose(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.Transpose

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: trn1(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.trn1

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Transpose`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.trn1.pattern
      :value: 'trn1 <Vd>.<dt0>, <Va>.<dt1>, <Vb>.<dt2>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.trn1.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.trn1.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.trn1.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.trn1.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.trn1.outputs

.. py:class:: trn2(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.trn2

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Transpose`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.trn2.pattern
      :value: 'trn2 <Vd>.<dt0>, <Va>.<dt1>, <Vb>.<dt2>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.trn2.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.trn2.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.trn2.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.trn2.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.trn2.outputs

.. py:class:: AESInstruction(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.AESInstruction

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: aesr(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.aesr

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AESInstruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.aesr.pattern
      :value: 'aesr <Vd>.16b, <Va>.16b'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.aesr.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.aesr.inputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.aesr.inputs

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.aesr.in_outs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.aesr.in_outs

.. py:class:: aesr_x2(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.aesr_x2

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.aesr_x2.pattern
      :value: 'aesr_x2 <Vd0>.16b, <Vd1>.16b, <Va>.16b'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.aesr_x2.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.aesr_x2.inputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.aesr_x2.inputs

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.aesr_x2.in_outs
      :value: ['Vd0', 'Vd1']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.aesr_x2.in_outs

.. py:class:: aesr_x4(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.aesr_x4

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.aesr_x4.pattern
      :value: 'aesr_x4 <Vd0>.16b, <Vd1>.16b, <Vd2>.16b, <Vd3>.16b, <Va>.16b'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.aesr_x4.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.aesr_x4.inputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.aesr_x4.inputs

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.aesr_x4.in_outs
      :value: ['Vd0', 'Vd1', 'Vd2', 'Vd3']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.aesr_x4.in_outs

.. py:class:: aese_x4(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.aese_x4

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.aese_x4.pattern
      :value: 'aese_x4 <Vd0>.16b, <Vd1>.16b, <Vd2>.16b, <Vd3>.16b, <Va>.16b'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.aese_x4.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.aese_x4.inputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.aese_x4.inputs

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.aese_x4.in_outs
      :value: ['Vd0', 'Vd1', 'Vd2', 'Vd3']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.aese_x4.in_outs

.. py:class:: aese(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.aese

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AESInstruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.aese.pattern
      :value: 'aese <Vd>.16b, <Va>.16b'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.aese.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.aese.inputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.aese.inputs

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.aese.in_outs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.aese.in_outs

.. py:class:: aesmc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.aesmc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AESInstruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.aesmc.pattern
      :value: 'aesmc <Vd>.16b, <Va>.16b'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.aesmc.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.aesmc.inputs
      :value: ['Va']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.aesmc.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.aesmc.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.aesmc.outputs

.. py:class:: pmull1_q(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.pmull1_q

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AESInstruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.pmull1_q.pattern
      :value: 'pmull <Vd>.1q, <Va>.1d, <Vb>.1d'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.pmull1_q.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.pmull1_q.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.pmull1_q.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.pmull1_q.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.pmull1_q.outputs

.. py:class:: pmull2_q(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.pmull2_q

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AESInstruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.pmull2_q.pattern
      :value: 'pmull2 <Vd>.1q, <Va>.2d, <Vb>.2d'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.pmull2_q.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.pmull2_q.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.pmull2_q.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.pmull2_q.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.pmull2_q.outputs

.. py:class:: Str_X(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.Str_X

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: x_str(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_str

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Str_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_str.pattern
      :value: 'str <Xa>, [<Xc>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_str.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_str.inputs
      :value: ['Xa', 'Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_str.inputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_str.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.x_str.write

.. py:class:: x_str_imm(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_str_imm

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Str_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_str_imm.pattern
      :value: 'str <Xa>, [<Xc>, <imm>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_str_imm.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_str_imm.inputs
      :value: ['Xa', 'Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_str_imm.inputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_str_imm.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.x_str_imm.write

.. py:class:: w_str_imm(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.w_str_imm

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Str_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.w_str_imm.pattern
      :value: 'str <Wa>, [<Xc>, <imm>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.w_str_imm.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.w_str_imm.inputs
      :value: ['Wa', 'Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.w_str_imm.inputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.w_str_imm.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.w_str_imm.write

.. py:class:: w_str_sp_imm(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.w_str_sp_imm

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Str_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.w_str_sp_imm.pattern
      :value: 'str <Wa>, [sp, <imm>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.w_str_sp_imm.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.w_str_sp_imm.inputs
      :value: ['Wa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.w_str_sp_imm.inputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.w_str_sp_imm.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.w_str_sp_imm.write

.. py:class:: x_str_postinc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_str_postinc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Str_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_str_postinc.pattern
      :value: 'str <Xa>, [<Xc>], <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_str_postinc.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_str_postinc.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_str_postinc.inputs

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_str_postinc.in_outs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_str_postinc.in_outs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_str_postinc.make
      :classmethod:

.. py:class:: x_str_sp_imm(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_str_sp_imm

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Str_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_str_sp_imm.pattern
      :value: 'str <Xa>, [sp, <imm>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_str_sp_imm.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_str_sp_imm.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_str_sp_imm.inputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_str_sp_imm.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.x_str_sp_imm.write

.. py:class:: x_str_sp_imm_hint(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_str_sp_imm_hint

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Str_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_str_sp_imm_hint.pattern
      :value: 'strh <Xa>, sp, <imm>, <Th>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_str_sp_imm_hint.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_str_sp_imm_hint.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_str_sp_imm_hint.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_str_sp_imm_hint.outputs
      :value: ['Th']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_str_sp_imm_hint.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_str_sp_imm_hint.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.x_str_sp_imm_hint.write

.. py:class:: x_str_imm_hint(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_str_imm_hint

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Str_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_str_imm_hint.pattern
      :value: 'strh <Xa>, <Xb>, <imm>, <Th>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_str_imm_hint.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_str_imm_hint.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_str_imm_hint.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_str_imm_hint.outputs
      :value: ['Th']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_str_imm_hint.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_str_imm_hint.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.x_str_imm_hint.write

.. py:class:: Stp_X(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.Stp_X

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: x_stp(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_stp

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Stp_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp.pattern
      :value: 'stp <Xa>, <Xb>, [<Xc>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_stp.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp.inputs
      :value: ['Xc', 'Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_stp.inputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp.write

.. py:class:: x_stp_with_imm_xzr_sp(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_xzr_sp

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Stp_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_xzr_sp.pattern
      :value: 'stp <Xa>, xzr, [sp, <imm>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_xzr_sp.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_xzr_sp.inputs
      :value: ['Xa']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_xzr_sp.inputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_xzr_sp.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_xzr_sp.write

.. py:class:: w_stp_with_imm_sp(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.w_stp_with_imm_sp

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.w_stp_with_imm_sp.pattern
      :value: 'stp <Wa>, <Wb>, [sp, <imm>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.w_stp_with_imm_sp.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.w_stp_with_imm_sp.inputs
      :value: ['Wa', 'Wb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.w_stp_with_imm_sp.inputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.w_stp_with_imm_sp.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.w_stp_with_imm_sp.write

.. py:class:: x_stp_with_sp(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_sp

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Stp_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_sp.pattern
      :value: 'stp <Xa>, <Xb>, [sp]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_stp_with_sp.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_sp.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_stp_with_sp.inputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_sp.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_sp.write

.. py:class:: x_stp_with_imm_sp(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_sp

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Stp_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_sp.pattern
      :value: 'stp <Xa>, <Xb>, [sp, <imm>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_sp.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_sp.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_sp.inputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_sp.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_sp.write

.. py:class:: x_stp_with_inc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_inc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Stp_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_inc.pattern
      :value: 'stp <Xa>, <Xb>, [<Xc>, <imm>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_stp_with_inc.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_inc.inputs
      :value: ['Xc', 'Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_stp_with_inc.inputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_inc.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_inc.write

.. py:class:: x_stp_with_inc_writeback(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_inc_writeback

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Stp_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_inc_writeback.pattern
      :value: 'stp <Xa>, <Xb>, [<Xc>, <imm>]!'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_stp_with_inc_writeback.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_inc_writeback.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_stp_with_inc_writeback.inputs

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_inc_writeback.in_outs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_stp_with_inc_writeback.in_outs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_inc_writeback.make
      :classmethod:

.. py:class:: x_stp_with_imm_hint(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_hint

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Stp_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_hint.pattern
      :value: 'stph <Xa>, <Xb>, <Xc>, <imm>, <Th>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_hint.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_hint.inputs
      :value: ['Xc', 'Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_hint.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_hint.outputs
      :value: ['Th']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_hint.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_hint.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_hint.write

.. py:class:: x_stp_sp_with_imm_hint(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_sp_with_imm_hint

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Stp_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_sp_with_imm_hint.pattern
      :value: 'stph <Xa>, <Xb>, sp, <imm>, <Th>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_stp_sp_with_imm_hint.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_sp_with_imm_hint.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_stp_sp_with_imm_hint.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_sp_with_imm_hint.outputs
      :value: ['Th']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_stp_sp_with_imm_hint.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_sp_with_imm_hint.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_sp_with_imm_hint.write

.. py:class:: x_stp_sp_with_imm_hint2(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_sp_with_imm_hint2

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Stp_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_sp_with_imm_hint2.pattern
      :value: 'stphp <Xa>, <Xb>, sp, <imm>, <Th0>, <Th1>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_stp_sp_with_imm_hint2.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_sp_with_imm_hint2.inputs
      :value: ['Xa', 'Xb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_stp_sp_with_imm_hint2.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_sp_with_imm_hint2.outputs
      :value: ['Th0', 'Th1']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_stp_sp_with_imm_hint2.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_sp_with_imm_hint2.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_sp_with_imm_hint2.write

.. py:class:: x_stp_with_imm_hint2(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_hint2

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Stp_X`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_hint2.pattern
      :value: 'stphp <Xa>, <Xb>, <Xc>, <imm>, <Th0>, <Th1>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_hint2.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_hint2.inputs
      :value: ['Xa', 'Xb', 'Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_hint2.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_hint2.outputs
      :value: ['Th0', 'Th1']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_hint2.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_hint2.make
      :classmethod:

   .. py:method:: write()
      :canonical: slothy.targets.aarch64.aarch64_neon.x_stp_with_imm_hint2.write

.. py:class:: St4(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.St4

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: st4_base(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.st4_base

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.St4`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.st4_base.pattern
      :value: 'st4 {<Va>.<dt0>, <Vb>.<dt1>, <Vc>.<dt2>, <Vd>.<dt3>}, [<Xc>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.st4_base.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.st4_base.inputs
      :value: ['Xc', 'Va', 'Vb', 'Vc', 'Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.st4_base.inputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.st4_base.make
      :classmethod:

.. py:class:: st4_with_inc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.st4_with_inc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.St4`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.st4_with_inc.pattern
      :value: 'st4 {<Va>.<dt0>, <Vb>.<dt1>, <Vc>.<dt2>, <Vd>.<dt3>}, [<Xc>], <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.st4_with_inc.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.st4_with_inc.inputs
      :value: ['Va', 'Vb', 'Vc', 'Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.st4_with_inc.inputs

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.st4_with_inc.in_outs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.st4_with_inc.in_outs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.st4_with_inc.make
      :classmethod:

.. py:class:: St3(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.St3

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: st3_base(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.st3_base

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.St3`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.st3_base.pattern
      :value: 'st3 {<Va>.<dt0>, <Vb>.<dt1>, <Vc>.<dt2>}, [<Xc>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.st3_base.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.st3_base.inputs
      :value: ['Xc', 'Va', 'Vb', 'Vc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.st3_base.inputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.st3_base.make
      :classmethod:

.. py:class:: st3_with_inc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.st3_with_inc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.St3`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.st3_with_inc.pattern
      :value: 'st3 {<Va>.<dt0>, <Vb>.<dt1>, <Vc>.<dt2>}, [<Xc>], <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.st3_with_inc.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.st3_with_inc.inputs
      :value: ['Va', 'Vb', 'Vc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.st3_with_inc.inputs

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.st3_with_inc.in_outs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.st3_with_inc.in_outs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.st3_with_inc.make
      :classmethod:

.. py:class:: St2(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.St2

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: st2_base(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.st2_base

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.St2`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.st2_base.pattern
      :value: 'st2 {<Va>.<dt0>, <Vb>.<dt1>}, [<Xc>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.st2_base.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.st2_base.inputs
      :value: ['Xc', 'Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.st2_base.inputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.st2_base.make
      :classmethod:

.. py:class:: st2_with_inc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.st2_with_inc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.St2`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.st2_with_inc.pattern
      :value: 'st2 {<Va>.<dt0>, <Vb>.<dt1>}, [<Xc>], <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.st2_with_inc.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.st2_with_inc.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.st2_with_inc.inputs

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.st2_with_inc.in_outs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.st2_with_inc.in_outs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.st2_with_inc.make
      :classmethod:

.. py:class:: Ld4(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.Ld4

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: ld4_base(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.ld4_base

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ld4`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.ld4_base.pattern
      :value: 'ld4 {<Va>.<dt0>, <Vb>.<dt1>, <Vc>.<dt2>, <Vd>.<dt3>}, [<Xc>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ld4_base.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.ld4_base.inputs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ld4_base.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.ld4_base.outputs
      :value: ['Va', 'Vb', 'Vc', 'Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ld4_base.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.ld4_base.make
      :classmethod:

.. py:class:: ld4_with_inc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.ld4_with_inc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ld4`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.ld4_with_inc.pattern
      :value: 'ld4 {<Va>.<dt0>, <Vb>.<dt1>, <Vc>.<dt2>, <Vd>.<dt3>}, [<Xc>], <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ld4_with_inc.pattern

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.ld4_with_inc.in_outs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ld4_with_inc.in_outs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.ld4_with_inc.outputs
      :value: ['Va', 'Vb', 'Vc', 'Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ld4_with_inc.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.ld4_with_inc.make
      :classmethod:

.. py:class:: Ld3(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.Ld3

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: ld3_base(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.ld3_base

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ld3`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.ld3_base.pattern
      :value: 'ld3 {<Va>.<dt0>, <Vb>.<dt1>, <Vc>.<dt2>}, [<Xc>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ld3_base.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.ld3_base.inputs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ld3_base.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.ld3_base.outputs
      :value: ['Va', 'Vb', 'Vc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ld3_base.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.ld3_base.make
      :classmethod:

.. py:class:: ld3_with_inc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.ld3_with_inc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ld3`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.ld3_with_inc.pattern
      :value: 'ld3 {<Va>.<dt0>, <Vb>.<dt1>, <Vc>.<dt2>}, [<Xc>], <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ld3_with_inc.pattern

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.ld3_with_inc.in_outs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ld3_with_inc.in_outs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.ld3_with_inc.outputs
      :value: ['Va', 'Vb', 'Vc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ld3_with_inc.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.ld3_with_inc.make
      :classmethod:

.. py:class:: Ld2(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.Ld2

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

.. py:class:: ld2_base(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.ld2_base

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ld2`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.ld2_base.pattern
      :value: 'ld2 {<Va>.<dt0>, <Vb>.<dt1>}, [<Xc>]'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ld2_base.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.ld2_base.inputs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ld2_base.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.ld2_base.outputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ld2_base.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.ld2_base.make
      :classmethod:

.. py:class:: ld2_with_inc(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.ld2_with_inc

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.Ld2`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.ld2_with_inc.pattern
      :value: 'ld2 {<Va>.<dt0>, <Vb>.<dt1>}, [<Xc>], <imm>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ld2_with_inc.pattern

   .. py:attribute:: in_outs
      :canonical: slothy.targets.aarch64.aarch64_neon.ld2_with_inc.in_outs
      :value: ['Xc']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ld2_with_inc.in_outs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.ld2_with_inc.outputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ld2_with_inc.outputs

   .. py:method:: make(src)
      :canonical: slothy.targets.aarch64.aarch64_neon.ld2_with_inc.make
      :classmethod:

.. py:class:: ASimdCompare(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.ASimdCompare

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.AArch64Instruction`

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ASimdCompare

   .. rubric:: Initialization

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.ASimdCompare.__init__

.. py:class:: cmge(pattern, *, inputs=None, outputs=None, in_outs=None, modifiesFlags=False, dependsOnFlags=False)
   :canonical: slothy.targets.aarch64.aarch64_neon.cmge

   Bases: :py:obj:`slothy.targets.aarch64.aarch64_neon.ASimdCompare`

   .. py:attribute:: pattern
      :canonical: slothy.targets.aarch64.aarch64_neon.cmge.pattern
      :value: 'cmge <Vd>.<dt0>, <Va>.<dt1>, <Vb>.<dt2>'

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cmge.pattern

   .. py:attribute:: inputs
      :canonical: slothy.targets.aarch64.aarch64_neon.cmge.inputs
      :value: ['Va', 'Vb']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cmge.inputs

   .. py:attribute:: outputs
      :canonical: slothy.targets.aarch64.aarch64_neon.cmge.outputs
      :value: ['Vd']

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.cmge.outputs

.. py:class:: Spill
   :canonical: slothy.targets.aarch64.aarch64_neon.Spill

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.Spill

   .. py:method:: spill(loc)
      :canonical: slothy.targets.aarch64.aarch64_neon.Spill.spill

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.Spill.spill

   .. py:method:: restore(loc)
      :canonical: slothy.targets.aarch64.aarch64_neon.Spill.restore

      .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.Spill.restore

.. py:function:: vins_d_parsing_cb()
   :canonical: slothy.targets.aarch64.aarch64_neon.vins_d_parsing_cb

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.vins_d_parsing_cb

.. py:function:: fmov_0_parsing_cb()
   :canonical: slothy.targets.aarch64.aarch64_neon.fmov_0_parsing_cb

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.fmov_0_parsing_cb

.. py:function:: fmov_1_parsing_cb()
   :canonical: slothy.targets.aarch64.aarch64_neon.fmov_1_parsing_cb

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.fmov_1_parsing_cb

.. py:function:: q_ld2_lane_post_inc_parsing_cb()
   :canonical: slothy.targets.aarch64.aarch64_neon.q_ld2_lane_post_inc_parsing_cb

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.q_ld2_lane_post_inc_parsing_cb

.. py:function:: eor3_fusion_cb()
   :canonical: slothy.targets.aarch64.aarch64_neon.eor3_fusion_cb

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.eor3_fusion_cb

.. py:function:: eor3_splitting_cb()
   :canonical: slothy.targets.aarch64.aarch64_neon.eor3_splitting_cb

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.eor3_splitting_cb

.. py:function:: iter_aarch64_instructions()
   :canonical: slothy.targets.aarch64.aarch64_neon.iter_aarch64_instructions

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.iter_aarch64_instructions

.. py:function:: find_class(src)
   :canonical: slothy.targets.aarch64.aarch64_neon.find_class

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.find_class

.. py:function:: is_dt_form_of(instr_class, dts=None)
   :canonical: slothy.targets.aarch64.aarch64_neon.is_dt_form_of

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.is_dt_form_of

.. py:function:: is_dform_form_of(instr_class)
   :canonical: slothy.targets.aarch64.aarch64_neon.is_dform_form_of

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.is_dform_form_of

.. py:function:: is_qform_form_of(instr_class)
   :canonical: slothy.targets.aarch64.aarch64_neon.is_qform_form_of

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.is_qform_form_of

.. py:function:: check_instr_dt(src, instr_classes, dt=None)
   :canonical: slothy.targets.aarch64.aarch64_neon.check_instr_dt

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.check_instr_dt

.. py:function:: is_neon_instruction(inst)
   :canonical: slothy.targets.aarch64.aarch64_neon.is_neon_instruction

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.is_neon_instruction

.. py:function:: all_subclass_leaves(c)
   :canonical: slothy.targets.aarch64.aarch64_neon.all_subclass_leaves

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.all_subclass_leaves

.. py:function:: lookup_multidict(d, inst, default=None)
   :canonical: slothy.targets.aarch64.aarch64_neon.lookup_multidict

   .. autodoc2-docstring:: slothy.targets.aarch64.aarch64_neon.lookup_multidict

// 2
.macro barrett_32 a, Qbar, Q, tmp
    smmulr \tmp, \a, \Qbar
    mls \a, \tmp, \Q, \a
.endm

.syntax unified
.cpu cortex-m4

.align 2
.global __asm_point_mul_257_16_opt_m7
.type __asm_point_mul_257_16_opt_m7, %function
__asm_point_mul_257_16_opt_m7:
    push.w {r4-r11, lr}

    ldr.w r14, [sp, #36]

    .equ width, 4

    add.w r12, r14, #64*width
                                     // Instructions:    11
                                     // Expected cycles: 7
                                     // Expected IPC:    1.57
                                     //
                                     // Wall time:     0.02s
                                     // User time:     0.02s
                                     //
                                     // ----- cycle (expected) ------>
                                     // 0                        25
                                     // |------------------------|----
        ldr.w r8, [r1, #8]           // *.............................
        ldr.w r4, [r14, #4]          // *.............................
        ldr.w r6, [r1, #4]           // ..*...........................
        smultb r10, r8, r4           // ..*...........................
        ldr.w r5, [r1, #12]          // ...*..........................
        neg r4, r4                   // ....*.........................
        smmulr r9, r10, r2           // ....*.........................
        ldr.w r7, [r1], #4*4         // .....*........................
        smultb r11, r5, r4           // .....*........................
        ldr.w r4, [r14], #2*4        // ......*.......................
        mls r9, r9, r3, r10          // ......*.......................

                                      // ------ cycle (expected) ------>
                                      // 0                        25
                                      // |------------------------|-----
        // ldr.w r8, [r1, #8]         // *..............................
        // ldr.w r11, [r14, #4]       // *..............................
        // smultb r7, r8, r11         // ..*............................
        // ldr.w r6, [r1, #4]         // ..*............................
        // neg r11, r11               // ....*..........................
        // ldr.w r4, [r14], #2*4      // ......*........................
        // smmulr r9, r7, r2          // ....*..........................
        // ldr.w r5, [r1, #12]        // ...*...........................
        // mls r9, r9, r3, r7         // ......*........................
        // ldr.w r7, [r1], #4*4       // .....*.........................
        // smultb r11, r5, r11        // .....*.........................

        sub r12, r12, #8
_point_mul_16_loop:
                                          // Instructions:    30
                                          // Expected cycles: 18
                                          // Expected IPC:    1.67
                                          //
                                          // Wall time:     20.80s
                                          // User time:     20.80s
                                          //
                                          // ----- cycle (expected) ------>
                                          // 0                        25
                                          // |------------------------|----
        pkhbt r10, r8, r9, lsl #16        // *.............................
        smmulr r8, r11, r2                // *.............................
        cmp.w r14, r12                    // .*............................
        smultb r9, r7, r4                 // .*............................
        neg r4, r4                        // ..*...........................
        mls r11, r8, r3, r11              // ..*...........................
        smultb r8, r6, r4                 // ...*..........................
        smmulr r4, r9, r2                 // ....*.........................
        pkhbt r5, r5, r11, lsl #16        // .....*........................
        smmulr r11, r8, r2                // .....*........................
        mls r9, r4, r3, r9                // ......*.......................
        mls r4, r11, r3, r8               // .......*......................
        ldr.w r8, [r1, #8]                // ........e.....................
        ldr.w r11, [r14, #4]              // ........e.....................
        pkhbt r9, r7, r9, lsl #16         // .........*....................
        pkhbt r4, r6, r4, lsl #16         // ..........*...................
        smultb r7, r8, r11                // ..........e...................
        ldr.w r6, [r1, #4]                // ...........e..................
        str.w r4, [r0, #4]                // ...........*..................
        str.w r9, [r0], #2*4              // ............*.................
        neg r11, r11                      // ............e.................
        ldr.w r4, [r14], #2*4             // .............e................
        smmulr r9, r7, r2                 // .............e................
        str.w r5, [r0, #4]                // ..............*...............
        ldr.w r5, [r1, #12]               // ..............e...............
        mls r9, r9, r3, r7                // ...............e..............
        ldr.w r7, [r1], #4*4              // ................e.............
        smultb r11, r5, r11               // ................e.............
        str.w r10, [r0], #2*4             // .................*............
        bne.w _point_mul_16_loop          // .................*............ // @slothy:branch

                                           // ------ cycle (expected) ------>
                                           // 0                        25
                                           // |------------------------|-----
        // ldr.w r7, [r1, #2*4]            // e.........'.......~.........'..
        // ldr.w r8, [r1, #3*4]            // ......e...'.............~...'..
        // ldr.w r9, [r14, #1*4]           // e.........'.......~.........'..
        // ldr.w r5, [r1, #1*4]            // ...e......'..........~......'..
        // ldr.w r4, [r1], #4*4            // ........e.'...............~.'..
        // ldr.w r6, [r14], #2*4           // .....e....'............~....'..
        // smultb r10, r4, r6              // ..........'*................'~.
        // smmulr r11, r10, r2             // ..........'...*.............'..
        // mls r10, r11, r3, r10           // ..........'.....*...........'..
        // pkhbt r4, r4, r10, lsl #16      // .~........'........*........'..
        // neg r6, r6                      // ..........'.*...............'..
        // smultb r10, r5, r6              // ..........'..*..............'..
        // smmulr r11, r10, r2             // ..........'....*............'..
        // mls r10, r11, r3, r10           // ..........'......*..........'..
        // pkhbt r5, r5, r10, lsl #16      // ..~.......'.........*.......'..
        // str.w r5, [r0, #1*4]            // ...~......'..........*......'..
        // str.w r4, [r0], #2*4            // ....~.....'...........*.....'..
        // smultb r10, r7, r9              // ..e.......'.........~.......'..
        // smmulr r11, r10, r2             // .....e....'............~....'..
        // mls r10, r11, r3, r10           // .......e..'..............~..'..
        // pkhbt r7, r7, r10, lsl #16      // ..........*.................~..
        // neg r9, r9                      // ....e.....'...........~.....'..
        // smultb r10, r8, r9              // ........e.'...............~.'..
        // smmulr r11, r10, r2             // ..........*.................~..
        // mls r10, r11, r3, r10           // ..........'.*...............'..
        // pkhbt r8, r8, r10, lsl #16      // ..........'....*............'..
        // str.w r8, [r0, #1*4]            // ......~...'.............*...'..
        // str.w r7, [r0], #2*4            // .........~'................*'..
        // cmp.w r14, r12                  // ..........'*................'~.
        // bne.w _point_mul_16_loop        // .........~'................*'..


                                          // Instructions:    19
                                          // Expected cycles: 14
                                          // Expected IPC:    1.36
                                          //
                                          // Wall time:     0.07s
                                          // User time:     0.07s
                                          //
                                          // ----- cycle (expected) ------>
                                          // 0                        25
                                          // |------------------------|----
        smmulr r10, r11, r2               // *.............................
        pkhbt r8, r8, r9, lsl #16         // .*............................
        smultb r9, r7, r4                 // .*............................
        neg r4, r4                        // ..*...........................
        mls r11, r10, r3, r11             // ..*...........................
        cmp.w r14, r12                    // ...*..........................
        smultb r4, r6, r4                 // ...*..........................
        smmulr r10, r9, r2                // ....*.........................
        pkhbt r5, r5, r11, lsl #16        // .....*........................
        smmulr r11, r4, r2                // .....*........................
        mls r9, r10, r3, r9               // ......*.......................
        mls r10, r11, r3, r4              // .......*......................
        pkhbt r6, r6, r10, lsl #16        // ..........*...................
        str.w r6, [r0, #4]                // ..........*...................
        pkhbt r6, r7, r9, lsl #16         // ...........*..................
        str.w r6, [r0], #2*4              // ...........*..................
        str.w r5, [r0, #4]                // ............*.................
        str.w r8, [r0], #2*4              // .............*................

                                           // ------ cycle (expected) ------>
                                           // 0                        25
                                           // |------------------------|-----
        // pkhbt r10, r8, r9, lsl #16      // .*.............................
        // smmulr r8, r11, r2              // *..............................
        // cmp.w r14, r12                  // ...*...........................
        // smultb r9, r7, r4               // .*.............................
        // neg r4, r4                      // ..*............................
        // mls r11, r8, r3, r11            // ..*............................
        // smultb r8, r6, r4               // ...*...........................
        // smmulr r4, r9, r2               // ....*..........................
        // pkhbt r5, r5, r11, lsl #16      // .....*.........................
        // smmulr r11, r8, r2              // .....*.........................
        // mls r9, r4, r3, r9              // ......*........................
        // mls r4, r11, r3, r8             // .......*.......................
        // pkhbt r9, r7, r9, lsl #16       // ...........*...................
        // pkhbt r4, r6, r4, lsl #16       // ..........*....................
        // str.w r4, [r0, #4]              // ..........*....................
        // str.w r9, [r0], #2*4            // ...........*...................
        // str.w r5, [r0, #4]              // ............*..................
        // str.w r10, [r0], #2*4           // .............*.................
        // bne.w _point_mul_16_loop        // .............*.................


    pop.w {r4-r11, pc}

.size __asm_point_mul_257_16_opt_m7, .-__asm_point_mul_257_16_opt_m7
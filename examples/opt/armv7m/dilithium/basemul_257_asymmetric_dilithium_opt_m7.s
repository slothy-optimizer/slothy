// 2
.macro barrett_32 a, Qbar, Q, tmp
    smmulr \tmp, \a, \Qbar
    mls \a, \tmp, \Q, \a
.endm

.syntax unified
.cpu cortex-m4

.align 2
.global __asm_asymmetric_mul_257_16_opt_m7
.type __asm_asymmetric_mul_257_16_opt_m7, %function
__asm_asymmetric_mul_257_16_opt_m7:
    push.w {r4-r11, lr}

    .equ width, 4

    add.w r12, r0, #256*width
                                    // Instructions:    8
                                    // Expected cycles: 5
                                    // Expected IPC:    1.60
                                    //
                                    // Wall time:     0.02s
                                    // User time:     0.02s
                                    //
                                    // ----- cycle (expected) ------>
                                    // 0                        25
                                    // |------------------------|----
        ldr.w r8, [r1, #4]          // *.............................
        ldr.w r4, [r1], #2*4        // *.............................
        ldr.w r9, [r3, #4]          // .*............................
        ldr.w r7, [r3], #2*4        // .*............................
        ldr.w r6, [r2, #4]          // ..*...........................
        ldr.w r5, [r2], #2*4        // ..*...........................
        smuad r10, r8, r9           // ...*..........................
        smuadx r9, r8, r6           // ....*.........................

                                     // ------ cycle (expected) ------>
                                     // 0                        25
                                     // |------------------------|-----
        // ldr.w r6, [r3, #4]        // .*.............................
        // ldr.w r8, [r2, #4]        // ..*............................
        // ldr.w r11, [r1, #4]       // *..............................
        // ldr.w r5, [r2], #2*4      // ..*............................
        // ldr.w r7, [r3], #2*4      // .*.............................
        // smuadx r9, r11, r8        // ....*..........................
        // ldr.w r4, [r1], #2*4      // *..............................
        // smuad r10, r11, r6        // ...*...........................

        sub r12, r12, #16
_asymmetric_mul_16_loop:
                                             // Instructions:    16
                                             // Expected cycles: 9
                                             // Expected IPC:    1.78
                                             //
                                             // Wall time:     0.13s
                                             // User time:     0.13s
                                             //
                                             // ----- cycle (expected) ------>
                                             // 0                        25
                                             // |------------------------|----
        ldr.w r6, [r3, #4]                   // e.............................
        smuadx r5, r4, r5                    // *.............................
        ldr.w r8, [r2, #4]                   // .e............................
        smuad r4, r4, r7                     // .*............................
        ldr.w r11, [r1, #4]                  // ..e...........................
        str.w r5, [r0, #4]                   // ..*...........................
        str.w r4, [r0], #2*4                 // ...*.......................... // @slothy:core
        str.w r9, [r0, #4]                   // ....*.........................
        ldr.w r5, [r2], #2*4                 // ....e.........................
        str.w r10, [r0], #2*4                // .....*........................ // @slothy:core
        ldr.w r7, [r3], #2*4                 // .....e........................
        cmp.w r0, r12                        // ......*.......................
        smuadx r9, r11, r8                   // ......e.......................
        ldr.w r4, [r1], #2*4                 // .......e......................
        smuad r10, r11, r6                   // .......e......................
        bne.w _asymmetric_mul_16_loop        // ........*..................... // @slothy:branch

                                              // ------ cycle (expected) ------>
                                              // 0                        25
                                              // |------------------------|-----
        // ldr.w r7, [r1, #4]                 // ..e......'.~......'.~......'.~.
        // ldr.w r4, [r1], #2*4               // .......e.'......~.'......~.'...
        // ldr.w r8, [r2, #4]                 // .e.......'~.......'~.......'~..
        // ldr.w r5, [r2], #2*4               // ....e....'...~....'...~....'...
        // ldr.w r9, [r3, #4]                 // e........~........~........~...
        // ldr.w r6, [r3], #2*4               // .....e...'....~...'....~...'...
        // smuad r10, r4, r6                  // .~.......'*.......'~.......'~..
        // smuadx r11, r4, r5                 // ~........*........~........~...
        // str.w r11, [r0, #4]                // ..~......'.*......'.~......'.~.
        // str.w r10, [r0], #2*4              // ...~.....'..*.....'..~.....'...
        // smuad r10, r7, r9                  // .......e.'......~.'......~.'...
        // smuadx r11, r7, r8                 // ......e..'.....~..'.....~..'...
        // str.w r11, [r0, #4]                // ....~....'...*....'...~....'...
        // str.w r10, [r0], #2*4              // .....~...'....*...'....~...'...
        // cmp.w r0, r12                      // ......~..'.....*..'.....~..'...
        // bne.w _asymmetric_mul_16_loop      // ........~'.......*'.......~'...


                                             // Instructions:    8
                                             // Expected cycles: 9
                                             // Expected IPC:    0.89
                                             //
                                             // Wall time:     0.01s
                                             // User time:     0.01s
                                             //
                                             // ----- cycle (expected) ------>
                                             // 0                        25
                                             // |------------------------|----
        smuadx r5, r4, r5                    // *.............................
        str.w r5, [r0, #4]                   // .*............................
        smuad r8, r4, r7                     // ..*...........................
        str.w r8, [r0], #2*4                 // ...*.......................... // @slothy:core
        str.w r9, [r0, #4]                   // ....*.........................
        str.w r10, [r0], #2*4                // .....*........................ // @slothy:core
        cmp.w r0, r12                        // ......*.......................

                                              // ------ cycle (expected) ------>
                                              // 0                        25
                                              // |------------------------|-----
        // smuadx r5, r4, r5                  // *..............................
        // smuad r4, r4, r7                   // ..*............................
        // str.w r5, [r0, #4]                 // .*.............................
        // str.w r4, [r0], #2*4               // ...*...........................
        // str.w r9, [r0, #4]                 // ....*..........................
        // str.w r10, [r0], #2*4              // .....*.........................
        // cmp.w r0, r12                      // ......*........................
        // bne.w _asymmetric_mul_16_loop      // ........*......................


    pop.w {r4-r11, pc}

.size __asm_asymmetric_mul_257_16_opt_m7, .-__asm_asymmetric_mul_257_16_opt_m7
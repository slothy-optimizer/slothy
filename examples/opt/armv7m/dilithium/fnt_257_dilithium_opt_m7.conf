# This configuration was used to generate the most recent optimized code for
# the fnt_257_dilithium_opt_m7 example.

class fnt_257_dilithium(OptimizationRunner):
    def __init__(self, var="", arch=Arch_Armv7M, target=Target_CortexM7, timeout=None):
        name = "fnt_257_dilithium"
        infile = name
        funcname = "__asm_fnt_257"

        super().__init__(
            infile,
            name,
            subfolder=SUBFOLDER,
            var=var,
            rename=True,
            arch=arch,
            target=target,
            timeout=timeout,
            funcname=funcname,
        )

    def core(self, slothy):
        slothy.config.outputs = ["r14", "r12"]
        slothy.config.inputs_are_outputs = True
        slothy.config.visualize_expected_performance = False
        slothy.config.unsafe_address_offset_fixup = False
        slothy.config.variable_size = True

        func_args = {"r1", "r2", "r3"}
        r = slothy.config.reserved_regs
        r = r.union(f"s{i}" for i in range(30))  # reserve FPR
        r = r.union(func_args)
        slothy.config.reserved_regs = r

        slothy.config.constraints.stalls_first_attempt = 8
        slothy.config.sw_pipelining.enabled = True
        slothy.config.timeout = 600
        slothy.optimize_loop("_fnt_0_1_2")

        slothy.config.sw_pipelining.enabled = False
        slothy.config.timeout = 300

        slothy.config.constraints.stalls_first_attempt = 8
        slothy.config.split_heuristic = True
        slothy.config.split_heuristic_factor = 8
        slothy.config.split_heuristic_stepsize = 0.1
        slothy.config.timeout = 180  # Not more than 2min per step
        # TODO: run with more repeats
        slothy.config.split_heuristic_repeat = 2
        slothy.config.outputs = ["s25", "s27", "r12"]
        slothy.fusion_loop("_fnt_3_4_5_6", ssa=False)
        slothy.optimize_loop("_fnt_3_4_5_6")
        slothy.config.split_heuristic_optimize_seam = 6
        slothy.optimize_loop("_fnt_3_4_5_6")

        # Due dependencies in the memory between loads and stores, skip this for now
        # slothy.optimize_loop("_fnt_to_16_bit")


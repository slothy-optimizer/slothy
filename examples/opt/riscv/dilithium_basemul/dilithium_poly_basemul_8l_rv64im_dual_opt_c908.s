.macro save_regs
  sd s0,  0*8(sp)
  sd s1,  1*8(sp)
  sd s2,  2*8(sp)
  sd s3,  3*8(sp)
  sd s4,  4*8(sp)
  sd s5,  5*8(sp)
  sd s6,  6*8(sp)
  sd s7,  7*8(sp)
  sd s8,  8*8(sp)
  sd s9,  9*8(sp)
  sd s10, 10*8(sp)
  sd s11, 11*8(sp)
  sd gp,  12*8(sp)
  sd tp,  13*8(sp)
  sd ra,  14*8(sp)
.endm

.macro restore_regs
  ld s0,  0*8(sp)
  ld s1,  1*8(sp)
  ld s2,  2*8(sp)
  ld s3,  3*8(sp)
  ld s4,  4*8(sp)
  ld s5,  5*8(sp)
  ld s6,  6*8(sp)
  ld s7,  7*8(sp)
  ld s8,  8*8(sp)
  ld s9,  9*8(sp)
  ld s10, 10*8(sp)
  ld s11, 11*8(sp)
  ld gp,  12*8(sp)
  ld tp,  13*8(sp)
  ld ra,  14*8(sp)
.endm

.macro plant_red_x4 q32, qinv, a_0, a_1, a_2, a_3
  mul  \a_0, \a_0, \qinv
  mul  \a_1, \a_1, \qinv
  mul  \a_2, \a_2, \qinv
  mul  \a_3, \a_3, \qinv
  srai \a_0, \a_0, 32
  srai \a_1, \a_1, 32
  srai \a_2, \a_2, 32
  srai \a_3, \a_3, 32
  addi \a_0, \a_0, 256
  addi \a_1, \a_1, 256
  addi \a_2, \a_2, 256
  addi \a_3, \a_3, 256
  mulh \a_0, \a_0, \q32
  mulh \a_1, \a_1, \q32
  mulh \a_2, \a_2, \q32
  mulh \a_3, \a_3, \q32
.endm

.equ q,    8380417
.equ q32,  0x7fe00100000000               // q << 32
.equ qinv, 0x180a406003802001             // q^-1 mod 2^64
.equ plantconst, 0x200801c0602            // (((-2**64) % q) * qinv) % (2**64)
.equ plantconst2, 0xb7b9f10ccf939804      // (((-2**64) % q) * ((-2**64) % q) * qinv) % (2**64)

# void poly_basemul_8l_rv64im(int32_t r[256], const int32_t a[256], const int32_t b[256])
.globl poly_basemul_8l_rv64im_opt_c908_dual
.align 2
poly_basemul_8l_rv64im_opt_c908_dual:
    addi sp, sp, -8*15
    save_regs
    li a4, q32
    li a5, qinv
    # loop control
    li gp, 32*8*4
    add gp, gp, a0
                                  // Instructions:    12
                                  // Expected cycles: 13
                                  // Expected IPC:    0.92
                                  //
                                  // Cycle bound:     13.0
                                  // IPC bound:       0.92
                                  //
                                  // Wall time:     0.08s
                                  // User time:     0.08s
                                  //
                                  // ----- cycle (expected) ------>
                                  // 0                        25
                                  // |------------------------|----
        lw x31, 6*4(x12)          // *.............................
        lw x26, 6*4(x11)          // .*............................
        lw x29, 2*4(x11)          // ..*...........................
        mul x20, x31, x26         // ...*..........................
        lw x5, 3*4(x11)           // ...*..........................
        lw x31, 3*4(x12)          // ....*.........................
        lw x26, 2*4(x12)          // .....*........................
        mul x6, x31, x5           // ......*.......................
        mul x5, x26, x29          // .......*......................
        mul x26, x20, x15         // .......*......................
        srai x26, x26, 32         // ...........*..................
        addi x29, x26, 256        // ............*.................

                                   // ------ cycle (expected) ------>
                                   // 0                        25
                                   // |------------------------|-----
        // lw x1, 6*4(x12)         // *..............................
        // lw x18, 6*4(x11)        // .*.............................
        // lw x21, 2*4(x11)        // ..*............................
        // lw x20, 3*4(x11)        // ...*...........................
        // mul x30, x1, x18        // ...*...........................
        // lw x5, 3*4(x12)         // ....*..........................
        // mul x16, x30, x15       // .......*.......................
        // lw x4, 2*4(x12)         // .....*.........................
        // mul x6, x5, x20         // ......*........................
        // mul x5, x4, x21         // .......*.......................
        // srai x13, x16, 32       // ...........*...................
        // addi x29, x13, 256      // ............*..................

        addi gp, gp, 32
poly_basemul_8l_rv64im_looper:
                                  // Instructions:    66
                                  // Expected cycles: 33
                                  // Expected IPC:    2.00
                                  //
                                  // Cycle bound:     38.0
                                  // IPC bound:       1.74
                                  //
                                  // Wall time:     68.79s
                                  // User time:     68.79s
                                  //
                                  // ------- cycle (expected) ------->
                                  // 0                        25
                                  // |------------------------|-------
        lw x21, 0*4(x11)          // *................................
        mul x1, x6, x15           // *................................
        lw x31, 0*4(x12)          // .*...............................
        mul x18, x5, x15          // .*...............................
        lw x26, 1*4(x11)          // ..*..............................
        mulh x27, x29, x14        // ..*..............................
        lw x23, 7*4(x12)          // ...*.............................
        mul x31, x31, x21         // ...*.............................
        srai x24, x1, 32          // ....*............................
        lw x5, 7*4(x11)           // ....*............................
        lw x21, 1*4(x12)          // .....*...........................
        srai x8, x18, 32          // .....*...........................
        lw x22, 4*4(x11)          // ......*..........................
        mul x7, x23, x5           // ......*..........................
        lw x29, 5*4(x11)          // .......*.........................
        mul x4, x21, x26          // .......*.........................
        addi x11, x11, 4*8        // ........*........................
        lw x5, 4*4(x12)           // ........*........................
        addi x25, x8, 256         // .........*.......................
        mul x20, x31, x15         // .........*.......................
        lw x18, 5*4(x12)          // ..........*......................
        mul x8, x7, x15           // ..........*......................
        addi x12, x12, 4*8        // ...........*.....................
        mul x6, x5, x22           // ...........*.....................
        mul x26, x4, x15          // ............*....................
        mul x7, x18, x29          // ............*....................
        lw x1, 6*4(x12)           // .............e...................
        addi x16, x24, 256        // .............*...................
        srai x9, x8, 32           // ..............*..................
        lw x18, 6*4(x11)          // ..............e..................
        lw x21, 2*4(x11)          // ...............e.................
        srai x23, x20, 32         // ...............*.................
        srai x22, x26, 32         // ................*................
        mul x30, x7, x15          // ................*................
        addi x26, x9, 256         // .................*...............
        addi x7, x22, 256         // .................*...............
        mulh x26, x26, x14        // ..................*..............
        addi x17, x23, 256        // ..................*..............
        lw x20, 3*4(x11)          // ...................e.............
        mulh x24, x16, x14        // ...................*.............
        mulh x19, x25, x14        // ....................*............
        srai x29, x30, 32         // ....................*............
        mul x30, x1, x18          // .....................e...........
        addi x8, x29, 256         // .....................*...........
        mul x4, x6, x15           // ......................*..........
        lw x5, 3*4(x12)           // ......................e..........
        mulh x28, x8, x14         // .......................*.........
        mulh x13, x7, x14         // .......................*.........
        mulh x25, x17, x14        // ........................*........
        sw x26, 7*4(x10)          // ........................*........
        mul x16, x30, x15         // .........................e.......
        sw x24, 3*4(x10)          // .........................*.......
        sw x19, 2*4(x10)          // ..........................*......
        srai x9, x4, 32           // ..........................*......
        lw x4, 2*4(x12)           // ...........................e.....
        addi x17, x9, 256         // ...........................*.....
        sw x25, 0*4(x10)          // ............................*....
        mulh x29, x17, x14        // ............................*....
        mul x6, x5, x20           // .............................e...
        sw x13, 1*4(x10)          // .............................*...
        sw x28, 5*4(x10)          // ..............................*..
        mul x5, x4, x21           // ..............................e..
        sw x27, 6*4(x10)          // ...............................*.
        srai x13, x16, 32         // ...............................e.
        sw x29, 4*4(x10)          // ................................*
        addi x29, x13, 256        // ................................e

                                   // ----------------- cycle (expected) ----------------->
                                   // 0                        25                       50
                                   // |------------------------|------------------------|--
        // lw x5, 0*4(x11)         // ....................*................................
        // lw x6, 1*4(x11)         // ....................'.*..............................
        // lw x8, 0*4(x12)         // ....................'*...............................
        // lw x9, 1*4(x12)         // ....................'....*...........................
        // lw x7, 2*4(x11)         // ..e.................'..............~.................
        // lw x28, 3*4(x11)        // ......e.............'..................~.............
        // lw x18, 2*4(x12)        // ..............e.....'..........................~.....
        // lw x19, 3*4(x12)        // .........e..........'.....................~..........
        // mul x24, x8, x5         // ....................'..*.............................
        // mul x25, x9, x6         // ....................'......*.........................
        // lw x29, 4*4(x11)        // ....................'.....*..........................
        // lw x30, 5*4(x11)        // ....................'......*.........................
        // mul x26, x18, x7        // .................e..'.............................~..
        // mul x27, x19, x28       // ................e...'............................~...
        // lw x20, 4*4(x12)        // ....................'.......*........................
        // lw x21, 5*4(x12)        // ....................'.........*......................
        // mul  x24, x24, x15      // ....................'........*.......................
        // mul  x25, x25, x15      // ....................'...........*....................
        // mul  x26, x26, x15      // ....................'*...............................
        // mul  x27, x27, x15      // ....................*................................
        // srai x24, x24, 32       // ..~.................'..............*.................
        // srai x25, x25, 32       // ...~................'...............*................
        // srai x26, x26, 32       // ....................'....*...........................
        // srai x27, x27, 32       // ....................'...*............................
        // addi x24, x24, 256      // .....~..............'.................*..............
        // addi x25, x25, 256      // ....~...............'................*...............
        // addi x26, x26, 256      // ....................'........*.......................
        // addi x27, x27, 256      // ~...................'............*...................
        // mulh x24, x24, x14      // ...........~........'.......................*........
        // mulh x25, x25, x14      // ..........~.........'......................*.........
        // mulh x26, x26, x14      // .......~............'...................*............
        // mulh x27, x27, x14      // ......~.............'..................*.............
        // lw x31, 6*4(x11)        // .e..................'.............~..................
        // lw x4, 7*4(x11)         // ....................'...*............................
        // lw x22, 6*4(x12)        // e...................'............~...................
        // lw x23, 7*4(x12)        // ....................'..*.............................
        // mul x8, x20, x29        // ....................'..........*.....................
        // mul x9, x21, x30        // ....................'...........*....................
        // sw x24, 0*4(x10)        // ...............~....'...........................*....
        // sw x25, 1*4(x10)        // ................~...'............................*...
        // mul x18, x22, x31       // ........e...........'....................~...........
        // mul x19, x23, x4        // ....................'.....*..........................
        // sw x26, 2*4(x10)        // .............~......'.........................*......
        // sw x27, 3*4(x10)        // ............~.......'........................*.......
        // mul  x8, x8, x15        // .........~..........'.....................*..........
        // mul  x9, x9, x15        // ...~................'...............*................
        // mul  x18, x18, x15      // ............e.......'........................~.......
        // mul  x19, x19, x15      // ....................'.........*......................
        // srai x8, x8, 32         // .............~......'.........................*......
        // srai x9, x9, 32         // .......~............'...................*............
        // srai x18, x18, 32       // ..................e.'..............................~.
        // srai x19, x19, 32       // .~..................'.............*..................
        // addi x8, x8, 256        // ..............~.....'..........................*.....
        // addi x9, x9, 256        // ........~...........'....................*...........
        // addi x18, x18, 256      // ...................e'................................
        // addi x19, x19, 256      // ....~...............'................*...............
        // mulh x8, x8, x14        // ...............~....'...........................*....
        // mulh x9, x9, x14        // ..........~.........'......................*.........
        // mulh x18, x18, x14      // ....................'.*..............................
        // mulh x19, x19, x14      // .....~..............'.................*..............
        // sw x8, 4*4(x10)         // ...................~'...............................*
        // sw x9, 5*4(x10)         // .................~..'.............................*..
        // addi x11, x11, 4*8      // ....................'.......*........................
        // addi x12, x12, 4*8      // ....................'..........*.....................
        // sw x18, 6*4(x10)        // ..................~.'..............................*.
        // sw x19, 7*4(x10)        // ...........~........'.......................*........

        addi gp, gp, 32
        bne gp, a0, poly_basemul_8l_rv64im_looper
                                  // Instructions:    54
                                  // Expected cycles: 28
                                  // Expected IPC:    1.93
                                  //
                                  // Cycle bound:     28.0
                                  // IPC bound:       1.93
                                  //
                                  // Wall time:     5.12s
                                  // User time:     5.12s
                                  //
                                  // ----- cycle (expected) ------>
                                  // 0                        25
                                  // |------------------------|----
        lw x24, 0*4(x11)          // *.............................
        mul x18, x6, x15          // *.............................
        mulh x4, x29, x14         // .*............................
        lw x26, 0*4(x12)          // .*............................
        lw x29, 7*4(x12)          // ..*...........................
        mul x1, x5, x15           // ..*...........................
        mul x30, x26, x24         // ...*..........................
        lw x22, 1*4(x11)          // ...*..........................
        lw x27, 1*4(x12)          // ....*.........................
        srai x25, x18, 32         // ....*.........................
        addi x5, x25, 256         // .....*........................
        lw x19, 4*4(x11)          // .....*........................
        lw x26, 4*4(x12)          // ......*.......................
        mul x9, x27, x22          // ......*.......................
        lw x31, 5*4(x12)          // .......*......................
        mul x20, x30, x15         // .......*......................
        mul x30, x26, x19         // ........*.....................
        mulh x5, x5, x14          // ........*.....................
        lw x27, 5*4(x11)          // .........*....................
        srai x1, x1, 32           // .........*....................
        lw x26, 7*4(x11)          // ..........*...................
        mul x17, x9, x15          // ..........*...................
        mul x22, x31, x27         // ...........*..................
        srai x18, x20, 32         // ...........*..................
        addi x20, x18, 256        // ............*.................
        mul x29, x29, x26         // ............*.................
        mul x26, x30, x15         // .............*................
        addi x1, x1, 256          // .............*................
        mulh x20, x20, x14        // ..............*...............
        srai x28, x17, 32         // ..............*...............
        mul x24, x22, x15         // ...............*..............
        addi x7, x28, 256         // ...............*..............
        sw x5, 3*4(x10)           // ................*.............
        mulh x31, x7, x14         // ................*.............
        mul x27, x29, x15         // .................*............
        srai x26, x26, 32         // .................*............
        sw x20, 0*4(x10)          // ..................*...........
        addi x9, x26, 256         // ..................*...........
        mulh x21, x9, x14         // ...................*..........
        srai x28, x24, 32         // ...................*..........
        addi x29, x28, 256        // ....................*.........
        sw x31, 1*4(x10)          // ....................*.........
        mulh x8, x1, x14          // .....................*........
        srai x31, x27, 32         // .....................*........
        mulh x18, x29, x14        // ......................*.......
        addi x26, x31, 256        // ......................*.......
        sw x21, 4*4(x10)          // .......................*......
        mulh x26, x26, x14        // .......................*......
        sw x4, 6*4(x10)           // ........................*.....
        sw x8, 2*4(x10)           // .........................*....
        addi x12, x12, 4*8        // .........................*....
        sw x18, 5*4(x10)          // ..........................*...
        addi x11, x11, 4*8        // ...........................*..
        sw x26, 7*4(x10)          // ...........................*..

                                   // ------ cycle (expected) ------>
                                   // 0                        25
                                   // |------------------------|-----
        // lw x21, 0*4(x11)        // *..............................
        // mul x1, x6, x15         // *..............................
        // lw x31, 0*4(x12)        // .*.............................
        // mul x18, x5, x15        // ..*............................
        // lw x26, 1*4(x11)        // ...*...........................
        // mulh x27, x29, x14      // .*.............................
        // lw x23, 7*4(x12)        // ..*............................
        // mul x31, x31, x21       // ...*...........................
        // srai x24, x1, 32        // ....*..........................
        // lw x5, 7*4(x11)         // ..........*....................
        // lw x21, 1*4(x12)        // ....*..........................
        // srai x8, x18, 32        // .........*.....................
        // lw x22, 4*4(x11)        // .....*.........................
        // mul x7, x23, x5         // ............*..................
        // lw x29, 5*4(x11)        // .........*.....................
        // mul x4, x21, x26        // ......*........................
        // addi x11, x11, 4*8      // ...........................*...
        // lw x5, 4*4(x12)         // ......*........................
        // addi x25, x8, 256       // .............*.................
        // mul x20, x31, x15       // .......*.......................
        // lw x18, 5*4(x12)        // .......*.......................
        // mul x8, x7, x15         // .................*.............
        // addi x12, x12, 4*8      // .........................*.....
        // mul x6, x5, x22         // ........*......................
        // mul x26, x4, x15        // ..........*....................
        // mul x7, x18, x29        // ...........*...................
        // addi x16, x24, 256      // .....*.........................
        // srai x9, x8, 32         // .....................*.........
        // srai x23, x20, 32       // ...........*...................
        // srai x22, x26, 32       // ..............*................
        // mul x30, x7, x15        // ...............*...............
        // addi x26, x9, 256       // ......................*........
        // addi x7, x22, 256       // ...............*...............
        // mulh x26, x26, x14      // .......................*.......
        // addi x17, x23, 256      // ............*..................
        // mulh x24, x16, x14      // ........*......................
        // mulh x19, x25, x14      // .....................*.........
        // srai x29, x30, 32       // ...................*...........
        // addi x8, x29, 256       // ....................*..........
        // mul x4, x6, x15         // .............*.................
        // mulh x28, x8, x14       // ......................*........
        // mulh x13, x7, x14       // ................*..............
        // mulh x25, x17, x14      // ..............*................
        // sw x26, 7*4(x10)        // ...........................*...
        // sw x24, 3*4(x10)        // ................*..............
        // sw x19, 2*4(x10)        // .........................*.....
        // srai x9, x4, 32         // .................*.............
        // addi x17, x9, 256       // ..................*............
        // sw x25, 0*4(x10)        // ..................*............
        // mulh x29, x17, x14      // ...................*...........
        // sw x13, 1*4(x10)        // ....................*..........
        // sw x28, 5*4(x10)        // ..........................*....
        // sw x27, 6*4(x10)        // ........................*......
        // sw x29, 4*4(x10)        // .......................*.......

    restore_regs
    addi sp, sp, 8*15
    ret
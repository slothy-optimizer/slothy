.macro save_regs
  sd s0,  0*8(sp)
  sd s1,  1*8(sp)
  sd s2,  2*8(sp)
  sd s3,  3*8(sp)
  sd s4,  4*8(sp)
  sd s5,  5*8(sp)
  sd s6,  6*8(sp)
  sd s7,  7*8(sp)
  sd s8,  8*8(sp)
  sd s9,  9*8(sp)
  sd s10, 10*8(sp)
  sd s11, 11*8(sp)
  sd gp,  12*8(sp)
  sd tp,  13*8(sp)
  sd ra,  14*8(sp)
.endm

.macro restore_regs
  ld s0,  0*8(sp)
  ld s1,  1*8(sp)
  ld s2,  2*8(sp)
  ld s3,  3*8(sp)
  ld s4,  4*8(sp)
  ld s5,  5*8(sp)
  ld s6,  6*8(sp)
  ld s7,  7*8(sp)
  ld s8,  8*8(sp)
  ld s9,  9*8(sp)
  ld s10, 10*8(sp)
  ld s11, 11*8(sp)
  ld gp,  12*8(sp)
  ld tp,  13*8(sp)
  ld ra,  14*8(sp)
.endm

// void poly_basemul_8l_acc_rv64im(int64_t r[256], const int32_t a[256], const int32_t b[256])
.globl poly_basemul_8l_acc_rv64im_opt_c908
.align 2
poly_basemul_8l_acc_rv64im_opt_c908:
    addi sp, sp, -8*15
    save_regs
    // loop control
    li gp, 32*8*8
    add gp, gp, a0
                // Instructions:    0
                // Expected cycles: 0
                // Expected IPC:    0.00
                //
                // Wall time:     0.01s
                // User time:     0.01s
                //
poly_basemul_8l_acc_rv64im_looper:
                                  // Instructions:    50
                                  // Expected cycles: 32
                                  // Expected IPC:    1.56
                                  //
                                  // Cycle bound:     25.0
                                  // IPC bound:       2.00
                                  //
                                  // Wall time:     14.84s
                                  // User time:     14.84s
                                  //
                                  // ------ cycle (expected) ------->
                                  // 0                        25
                                  // |------------------------|------
        lw x7, 2*4(x12)           // *...............................
        lw x31, 1*4(x12)          // .*..............................
        lw x17, 5*4(x12)          // ..*.............................
        lw x1, 7*4(x12)           // ...*............................
        lw x15, 6*4(x12)          // ....*...........................
        lw x24, 0*4(x12)          // .....*..........................
        lw x22, 4*4(x12)          // ......*.........................
        lw x28, 3*4(x12)          // .......*........................
        addi x12, x12, 4*8        // .......*........................
        lw x26, 0*4(x11)          // ........*.......................
        lw x30, 1*4(x11)          // .........*......................
        mul x6, x26, x24          // ..........*.....................
        lw x26, 2*4(x11)          // ..........*.....................
        mul x24, x30, x31         // ...........*....................
        lw x31, 3*4(x11)          // ...........*....................
        mul x26, x26, x7          // ............*...................
        ld x20, 0*8(x10)          // ............*...................
        mul x31, x31, x28         // .............*..................
        ld x30, 1*8(x10)          // .............*..................
        add x5, x6, x20           // ..............*.................
        ld x7, 2*8(x10)           // ..............*.................
        add x25, x24, x30         // ...............*................
        ld x14, 3*8(x10)          // ...............*................
        add x21, x26, x7          // ................*...............
        sd x5, 0*8(x10)           // ................*...............
        add x24, x31, x14         // .................*..............
        sd x25, 1*8(x10)          // .................*..............
        sd x21, 2*8(x10)          // ..................*.............
        sd x24, 3*8(x10)          // ...................*............
        lw x14, 4*4(x11)          // ....................*...........
        lw x9, 5*4(x11)           // .....................*..........
        mul x14, x14, x22         // ......................*.........
        lw x23, 6*4(x11)          // ......................*.........
        mul x22, x9, x17          // .......................*........
        lw x20, 7*4(x11)          // .......................*........
        mul x9, x23, x15          // ........................*.......
        ld x29, 4*8(x10)          // ........................*.......
        mul x30, x20, x1          // .........................*......
        ld x23, 5*8(x10)          // .........................*......
        add x7, x14, x29          // ..........................*.....
        ld x6, 6*8(x10)           // ..........................*.....
        add x24, x22, x23         // ...........................*....
        ld x31, 7*8(x10)          // ...........................*....
        add x26, x9, x6           // ............................*...
        sd x7, 4*8(x10)           // ............................*...
        add x30, x30, x31         // .............................*..
        sd x24, 5*8(x10)          // .............................*..
        sd x26, 6*8(x10)          // ..............................*.
        addi x11, x11, 4*8        // ...............................*
        sd x30, 7*8(x10)          // ...............................*

                                   // ------ cycle (expected) ------->
                                   // 0                        25
                                   // |------------------------|------
        // lw x5, 0*4(x11)         // ........*.......................
        // lw x8, 0*4(x12)         // .....*..........................
        // lw x6, 1*4(x11)         // .........*......................
        // lw x9, 1*4(x12)         // .*..............................
        // lw x7, 2*4(x11)         // ..........*.....................
        // lw x18, 2*4(x12)        // *...............................
        // lw x28, 3*4(x11)        // ...........*....................
        // lw x19, 3*4(x12)        // .......*........................
        // ld x25, 0*8(x10)        // ............*...................
        // ld x27, 1*8(x10)        // .............*..................
        // ld x14, 2*8(x10)        // ..............*.................
        // ld x16, 3*8(x10)        // ...............*................
        // mul x24, x5, x8         // ..........*.....................
        // mul x26, x6, x9         // ...........*....................
        // mul x13, x7, x18        // ............*...................
        // mul x15, x28, x19       // .............*..................
        // add x24, x24, x25       // ..............*.................
        // add x26, x26, x27       // ...............*................
        // add x13, x13, x14       // ................*...............
        // add x15, x15, x16       // .................*..............
        // sd x24, 0*8(x10)        // ................*...............
        // sd x26, 1*8(x10)        // .................*..............
        // sd x13, 2*8(x10)        // ..................*.............
        // sd x15, 3*8(x10)        // ...................*............
        // lw x29, 4*4(x11)        // ....................*...........
        // lw x20, 4*4(x12)        // ......*.........................
        // lw x30, 5*4(x11)        // .....................*..........
        // lw x21, 5*4(x12)        // ..*.............................
        // lw x31, 6*4(x11)        // ......................*.........
        // lw x22, 6*4(x12)        // ....*...........................
        // lw x4, 7*4(x11)         // .......................*........
        // lw x23, 7*4(x12)        // ...*............................
        // ld x25, 4*8(x10)        // ........................*.......
        // ld x27, 5*8(x10)        // .........................*......
        // ld x14, 6*8(x10)        // ..........................*.....
        // ld x16, 7*8(x10)        // ...........................*....
        // mul x24, x29, x20       // ......................*.........
        // mul x26, x30, x21       // .......................*........
        // mul x13, x31, x22       // ........................*.......
        // mul x15, x4, x23        // .........................*......
        // add x24, x24, x25       // ..........................*.....
        // add x26, x26, x27       // ...........................*....
        // add x13, x13, x14       // ............................*...
        // add x15, x15, x16       // .............................*..
        // sd x24, 4*8(x10)        // ............................*...
        // sd x26, 5*8(x10)        // .............................*..
        // sd x13, 6*8(x10)        // ..............................*.
        // sd x15, 7*8(x10)        // ...............................*
        // addi x11, x11, 4*8      // ...............................*
        // addi x12, x12, 4*8      // .......*........................

        addi a0, a0, 64
        bne a0, gp, poly_basemul_8l_acc_rv64im_looper
                // Instructions:    0
                // Expected cycles: 0
                // Expected IPC:    0.00
                //
                // Wall time:     0.01s
                // User time:     0.01s
                //
    restore_regs
    addi sp, sp, 8*15
    ret
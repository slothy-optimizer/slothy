.macro save_regs
  sd s0,  0*8(sp)
  sd s1,  1*8(sp)
  sd s2,  2*8(sp)
  sd s3,  3*8(sp)
  sd s4,  4*8(sp)
  sd s5,  5*8(sp)
  sd s6,  6*8(sp)
  sd s7,  7*8(sp)
  sd s8,  8*8(sp)
  sd s9,  9*8(sp)
  sd s10, 10*8(sp)
  sd s11, 11*8(sp)
  sd gp,  12*8(sp)
  sd tp,  13*8(sp)
  sd ra,  14*8(sp)
.endm

.macro restore_regs
  ld s0,  0*8(sp)
  ld s1,  1*8(sp)
  ld s2,  2*8(sp)
  ld s3,  3*8(sp)
  ld s4,  4*8(sp)
  ld s5,  5*8(sp)
  ld s6,  6*8(sp)
  ld s7,  7*8(sp)
  ld s8,  8*8(sp)
  ld s9,  9*8(sp)
  ld s10, 10*8(sp)
  ld s11, 11*8(sp)
  ld gp,  12*8(sp)
  ld tp,  13*8(sp)
  ld ra,  14*8(sp)
.endm

// void poly_basemul_8l_acc_rv64im(int64_t r[256], const int32_t a[256], const int32_t b[256])
.globl poly_basemul_8l_acc_rv64im_opt_c908
.align 2
poly_basemul_8l_acc_rv64im_opt_c908:
    addi sp, sp, -8*15
    save_regs
    // loop control
    li gp, 32*8*8
    add gp, gp, a0
                // Instructions:    0
                // Expected cycles: 0
                // Expected IPC:    0.00
                //
                // Wall time:     0.01s
                // User time:     0.01s
                //
poly_basemul_8l_acc_rv64im_looper:
                                  // Instructions:    50
                                  // Expected cycles: 32
                                  // Expected IPC:    1.56
                                  //
                                  // Cycle bound:     25.0
                                  // IPC bound:       2.00
                                  //
                                  // Wall time:     12.56s
                                  // User time:     12.56s
                                  //
                                  // ------ cycle (expected) ------->
                                  // 0                        25
                                  // |------------------------|------
        lw x1, 0*4(x12)           // *...............................
        lw x25, 6*4(x12)          // .*..............................
        lw x8, 2*4(x12)           // ..*.............................
        lw x19, 3*4(x12)          // ...*............................
        ld x24, 7*8(x10)          // ....*...........................
        lw x5, 0*4(x11)           // .....*..........................
        lw x16, 4*4(x12)          // ......*.........................
        lw x23, 5*4(x12)          // .......*........................
        mul x31, x5, x1           // .......*........................
        lw x18, 7*4(x12)          // ........*.......................
        lw x1, 2*4(x11)           // .........*......................
        ld x27, 0*8(x10)          // ..........*.....................
        ld x29, 1*8(x10)          // ...........*....................
        mul x6, x1, x8            // ...........*....................
        ld x1, 2*8(x10)           // ............*...................
        add x7, x31, x27          // ............*...................
        ld x28, 3*8(x10)          // .............*..................
        lw x8, 7*4(x11)           // ..............*.................
        add x9, x6, x1            // ...............*................
        lw x27, 4*4(x11)          // ...............*................
        sd x9, 2*8(x10)           // ................*...............
        mul x13, x8, x18          // ................*...............
        lw x1, 1*4(x11)           // .................*..............
        lw x6, 5*4(x11)           // ..................*.............
        mul x14, x27, x16         // ..................*.............
        lw x20, 6*4(x11)          // ...................*............
        ld x15, 4*8(x10)          // ....................*...........
        mul x18, x6, x23          // ....................*...........
        ld x26, 5*8(x10)          // .....................*..........
        add x21, x13, x24         // .....................*..........
        lw x24, 3*4(x11)          // ......................*.........
        mul x16, x20, x25         // ......................*.........
        ld x13, 6*8(x10)          // .......................*........
        add x15, x14, x15         // .......................*........
        mul x27, x24, x19         // ........................*.......
        lw x5, 1*4(x12)           // ........................*.......
        add x14, x18, x26         // .........................*......
        sd x7, 0*8(x10)           // .........................*......
        mul x31, x1, x5           // ..........................*.....
        sd x14, 5*8(x10)          // ..........................*.....
        add x22, x16, x13         // ...........................*....
        sd x15, 4*8(x10)          // ...........................*....
        add x7, x27, x28          // ............................*...
        sd x22, 6*8(x10)          // ............................*...
        sd x7, 3*8(x10)           // .............................*..
        addi x12, x12, 4*8        // .............................*..
        add x5, x31, x29          // ..............................*.
        sd x21, 7*8(x10)          // ..............................*.
        sd x5, 1*8(x10)           // ...............................*
        addi x11, x11, 4*8        // ...............................*

                                   // ------ cycle (expected) ------->
                                   // 0                        25
                                   // |------------------------|------
        // lw x5, 0*4(x11)         // .....*..........................
        // lw x8, 0*4(x12)         // *...............................
        // lw x6, 1*4(x11)         // .................*..............
        // lw x9, 1*4(x12)         // ........................*.......
        // lw x7, 2*4(x11)         // .........*......................
        // lw x18, 2*4(x12)        // ..*.............................
        // lw x28, 3*4(x11)        // ......................*.........
        // lw x19, 3*4(x12)        // ...*............................
        // ld x25, 0*8(x10)        // ..........*.....................
        // ld x27, 1*8(x10)        // ...........*....................
        // ld x14, 2*8(x10)        // ............*...................
        // ld x16, 3*8(x10)        // .............*..................
        // mul x24, x5, x8         // .......*........................
        // mul x26, x6, x9         // ..........................*.....
        // mul x13, x7, x18        // ...........*....................
        // mul x15, x28, x19       // ........................*.......
        // add x24, x24, x25       // ............*...................
        // add x26, x26, x27       // ..............................*.
        // add x13, x13, x14       // ...............*................
        // add x15, x15, x16       // ............................*...
        // sd x24, 0*8(x10)        // .........................*......
        // sd x26, 1*8(x10)        // ...............................*
        // sd x13, 2*8(x10)        // ................*...............
        // sd x15, 3*8(x10)        // .............................*..
        // lw x29, 4*4(x11)        // ...............*................
        // lw x20, 4*4(x12)        // ......*.........................
        // lw x30, 5*4(x11)        // ..................*.............
        // lw x21, 5*4(x12)        // .......*........................
        // lw x31, 6*4(x11)        // ...................*............
        // lw x22, 6*4(x12)        // .*..............................
        // lw x4, 7*4(x11)         // ..............*.................
        // lw x23, 7*4(x12)        // ........*.......................
        // ld x25, 4*8(x10)        // ....................*...........
        // ld x27, 5*8(x10)        // .....................*..........
        // ld x14, 6*8(x10)        // .......................*........
        // ld x16, 7*8(x10)        // ....*...........................
        // mul x24, x29, x20       // ..................*.............
        // mul x26, x30, x21       // ....................*...........
        // mul x13, x31, x22       // ......................*.........
        // mul x15, x4, x23        // ................*...............
        // add x24, x24, x25       // .......................*........
        // add x26, x26, x27       // .........................*......
        // add x13, x13, x14       // ...........................*....
        // add x15, x15, x16       // .....................*..........
        // sd x24, 4*8(x10)        // ...........................*....
        // sd x26, 5*8(x10)        // ..........................*.....
        // sd x13, 6*8(x10)        // ............................*...
        // sd x15, 7*8(x10)        // ..............................*.
        // addi x11, x11, 4*8      // ...............................*
        // addi x12, x12, 4*8      // .............................*..

        addi a0, a0, 64
        bne a0, gp, poly_basemul_8l_acc_rv64im_looper
                // Instructions:    0
                // Expected cycles: 0
                // Expected IPC:    0.00
                //
                // Wall time:     0.01s
                // User time:     0.01s
                //
    restore_regs
    addi sp, sp, 8*15
    ret
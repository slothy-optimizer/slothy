.macro save_regs
  sd s0,  0*8(sp)
  sd s1,  1*8(sp)
  sd s2,  2*8(sp)
  sd s3,  3*8(sp)
  sd s4,  4*8(sp)
  sd s5,  5*8(sp)
  sd s6,  6*8(sp)
  sd s7,  7*8(sp)
  sd s8,  8*8(sp)
  sd s9,  9*8(sp)
  sd s10, 10*8(sp)
  sd s11, 11*8(sp)
  sd gp,  12*8(sp)
  sd tp,  13*8(sp)
  sd ra,  14*8(sp)
.endm

.macro restore_regs
  ld s0,  0*8(sp)
  ld s1,  1*8(sp)
  ld s2,  2*8(sp)
  ld s3,  3*8(sp)
  ld s4,  4*8(sp)
  ld s5,  5*8(sp)
  ld s6,  6*8(sp)
  ld s7,  7*8(sp)
  ld s8,  8*8(sp)
  ld s9,  9*8(sp)
  ld s10, 10*8(sp)
  ld s11, 11*8(sp)
  ld gp,  12*8(sp)
  ld tp,  13*8(sp)
  ld ra,  14*8(sp)
.endm

// void poly_basemul_8l_acc_rv64im_dual(int64_t r[256], const int32_t a[256], const int32_t b[256])
.globl poly_basemul_8l_acc_rv64im_dual
.align 2
poly_basemul_8l_acc_rv64im_dual:
    addi sp, sp, -8*15
    save_regs
    // loop control
    li  gp, 32*8*8
    add gp, gp, a0
poly_basemul_8l_acc_rv64im_looper:
                                  // Instructions:    50
                                  // Expected cycles: 32
                                  // Expected IPC:    1.56
                                  //
                                  // Cycle bound:     32.0
                                  // IPC bound:       1.56
                                  //
                                  // Wall time:     1.30s
                                  // User time:     1.30s
                                  //
                                  // ------ cycle (expected) ------->
                                  // 0                        25
                                  // |------------------------|------
        lw x7, 0*4(x11)           // *...............................
        lw x24, 1*4(x11)          // .*..............................
        lw x29, 2*4(x11)          // ..*.............................
        lw x22, 3*4(x11)          // ...*............................
        lw x27, 4*4(x11)          // ....*...........................
        lw x25, 5*4(x11)          // .....*..........................
        lw x20, 6*4(x11)          // ......*.........................
        lw x15, 7*4(x11)          // .......*........................
        addi x11, x11, 4*8        // .......*........................
        lw x28, 0*4(x12)          // ........*.......................
        lw x5, 1*4(x12)           // .........*......................
        mul x7, x7, x28           // ..........*.....................
        lw x28, 2*4(x12)          // ..........*.....................
        mul x24, x24, x5          // ...........*....................
        lw x5, 3*4(x12)           // ...........*....................
        mul x29, x29, x28         // ............*...................
        lw x28, 4*4(x12)          // ............*...................
        mul x22, x22, x5          // .............*..................
        lw x5, 5*4(x12)           // .............*..................
        mul x27, x27, x28         // ..............*.................
        lw x28, 6*4(x12)          // ..............*.................
        mul x25, x25, x5          // ...............*................
        lw x5, 7*4(x12)           // ...............*................
        mul x20, x20, x28         // ................*...............
        ld x28, 0*8(x10)          // ................*...............
        mul x15, x15, x5          // .................*..............
        ld x5, 1*8(x10)           // .................*..............
        add x7, x7, x28           // ..................*.............
        ld x28, 2*8(x10)          // ..................*.............
        add x24, x24, x5          // ...................*............
        ld x5, 3*8(x10)           // ...................*............
        add x29, x29, x28         // ....................*...........
        sd x7, 0*8(x10)           // ....................*...........
        add x7, x22, x5           // .....................*..........
        sd x24, 1*8(x10)          // .....................*..........
        ld x24, 4*8(x10)          // ......................*.........
        ld x22, 5*8(x10)          // .......................*........
        add x24, x27, x24         // ........................*.......
        sd x29, 2*8(x10)          // ........................*.......
        add x29, x25, x22         // .........................*......
        sd x7, 3*8(x10)           // .........................*......
        ld x7, 6*8(x10)           // ..........................*.....
        ld x22, 7*8(x10)          // ...........................*....
        add x7, x20, x7           // ............................*...
        sd x24, 4*8(x10)          // ............................*...
        add x24, x15, x22         // .............................*..
        sd x29, 5*8(x10)          // .............................*..
        sd x7, 6*8(x10)           // ..............................*.
        sd x24, 7*8(x10)          // ...............................*
        addi x10, x10, 8*8        // ...............................*

                                   // ------ cycle (expected) ------->
                                   // 0                        25
                                   // |------------------------|------
        // lw x5, 0*4(x11)         // *...............................
        // lw x6, 1*4(x11)         // .*..............................
        // lw x8, 0*4(x12)         // ........*.......................
        // lw x9, 1*4(x12)         // .........*......................
        // ld x13, 0*8(x10)        // ................*...............
        // ld x14, 1*8(x10)        // .................*..............
        // lw x7, 2*4(x11)         // ..*.............................
        // lw x28, 3*4(x11)        // ...*............................
        // lw x18, 2*4(x12)        // ..........*.....................
        // lw x19, 3*4(x12)        // ...........*....................
        // ld x15, 2*8(x10)        // ..................*.............
        // ld x16, 3*8(x10)        // ...................*............
        // mul x24, x5, x8         // ..........*.....................
        // mul x25, x6, x9         // ...........*....................
        // lw x29, 4*4(x11)        // ....*...........................
        // lw x30, 5*4(x11)        // .....*..........................
        // mul x26, x7, x18        // ............*...................
        // mul x27, x28, x19       // .............*..................
        // lw x20, 4*4(x12)        // ............*...................
        // lw x21, 5*4(x12)        // .............*..................
        // add x24, x24, x13       // ..................*.............
        // add x25, x25, x14       // ...................*............
        // lw x31, 6*4(x11)        // ......*.........................
        // lw x4, 7*4(x11)         // .......*........................
        // add x26, x26, x15       // ....................*...........
        // add x27, x27, x16       // .....................*..........
        // sd x24, 0*8(x10)        // ....................*...........
        // sd x25, 1*8(x10)        // .....................*..........
        // lw x22, 6*4(x12)        // ..............*.................
        // lw x23, 7*4(x12)        // ...............*................
        // ld x13, 4*8(x10)        // ......................*.........
        // ld x14, 5*8(x10)        // .......................*........
        // sd x26, 2*8(x10)        // ........................*.......
        // sd x27, 3*8(x10)        // .........................*......
        // mul x24, x29, x20       // ..............*.................
        // mul x25, x30, x21       // ...............*................
        // ld x15, 6*8(x10)        // ..........................*.....
        // ld x16, 7*8(x10)        // ...........................*....
        // mul x26, x31, x22       // ................*...............
        // mul x27, x4, x23        // .................*..............
        // add x24, x24, x13       // ........................*.......
        // add x25, x25, x14       // .........................*......
        // sd x24, 4*8(x10)        // ............................*...
        // sd x25, 5*8(x10)        // .............................*..
        // add x26, x26, x15       // ............................*...
        // add x27, x27, x16       // .............................*..
        // sd x26, 6*8(x10)        // ..............................*.
        // sd x27, 7*8(x10)        // ...............................*
        // addi x10, x10, 8*8      // ...............................*
        // addi x11, x11, 4*8      // .......*........................

        addi gp, gp, 32
        bne gp, a0, poly_basemul_8l_acc_rv64im_looper
    restore_regs
    addi sp, sp, 8*15
    ret
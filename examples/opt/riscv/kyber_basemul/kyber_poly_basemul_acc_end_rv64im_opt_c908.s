.macro load_coeffs poly, len, wordLen
  lh s0,  \len*\wordLen*0(\poly)
  lh s1,  \len*\wordLen*1(\poly)
  lh s2,  \len*\wordLen*2(\poly)
  lh s3,  \len*\wordLen*3(\poly)
  lh s4,  \len*\wordLen*4(\poly)
  lh s5,  \len*\wordLen*5(\poly)
  lh s6,  \len*\wordLen*6(\poly)
  lh s7,  \len*\wordLen*7(\poly)
  lh s8,  \len*\wordLen*8(\poly)
  lh s9,  \len*\wordLen*9(\poly)
  lh s10, \len*\wordLen*10(\poly)
  lh s11, \len*\wordLen*11(\poly)
  lh a2,  \len*\wordLen*12(\poly)
  lh a3,  \len*\wordLen*13(\poly)
  lh a4,  \len*\wordLen*14(\poly)
  lh a5,  \len*\wordLen*15(\poly)
.endm

.macro store_coeffs poly, len, wordLen
  sh s0,  \len*\wordLen*0(\poly)
  sh s1,  \len*\wordLen*1(\poly)
  sh s2,  \len*\wordLen*2(\poly)
  sh s3,  \len*\wordLen*3(\poly)
  sh s4,  \len*\wordLen*4(\poly)
  sh s5,  \len*\wordLen*5(\poly)
  sh s6,  \len*\wordLen*6(\poly)
  sh s7,  \len*\wordLen*7(\poly)
  sh s8,  \len*\wordLen*8(\poly)
  sh s9,  \len*\wordLen*9(\poly)
  sh s10, \len*\wordLen*10(\poly)
  sh s11, \len*\wordLen*11(\poly)
  sh a2,  \len*\wordLen*12(\poly)
  sh a3,  \len*\wordLen*13(\poly)
  sh a4,  \len*\wordLen*14(\poly)
  sh a5,  \len*\wordLen*15(\poly)
.endm

.macro save_regs
  sd s0,  0*8(sp)
  sd s1,  1*8(sp)
  sd s2,  2*8(sp)
  sd s3,  3*8(sp)
  sd s4,  4*8(sp)
  sd s5,  5*8(sp)
  sd s6,  6*8(sp)
  sd s7,  7*8(sp)
  sd s8,  8*8(sp)
  sd s9,  9*8(sp)
  sd s10, 10*8(sp)
  sd s11, 11*8(sp)
  sd gp,  12*8(sp)
  sd tp,  13*8(sp)
  sd ra,  14*8(sp)
.endm

.macro restore_regs
  ld s0,  0*8(sp)
  ld s1,  1*8(sp)
  ld s2,  2*8(sp)
  ld s3,  3*8(sp)
  ld s4,  4*8(sp)
  ld s5,  5*8(sp)
  ld s6,  6*8(sp)
  ld s7,  7*8(sp)
  ld s8,  8*8(sp)
  ld s9,  9*8(sp)
  ld s10, 10*8(sp)
  ld s11, 11*8(sp)
  ld gp,  12*8(sp)
  ld tp,  13*8(sp)
  ld ra,  14*8(sp)
.endm

// a <- a*b*(-2^{-64}) mod+- q
// q32: q<<32; bqinv: b*qinv
.macro plant_mul_const_inplace q32, bqinv, a
  mul  \a, \a, \bqinv
  srai \a, \a, 32
  addi \a, \a, 8
  mulh \a, \a, \q32
.endm

// r <- a*b*(-2^{-64}) mod+- q
// q32: q<<32; bqinv: b*qinv
.macro plant_mul_const q32, bqinv, a, r
    mul  \r, \a, \bqinv
    srai \r, \r, 32
    addi \r, \r, 8
    mulh \r, \r, \q32
.endm

// each layer increases coefficients by 0.5q; In ct_butterfly, twiddle and tmp can be reused because each twiddle is only used once. The gs_butterfly cannot.
.macro ct_butterfly coeff0, coeff1, twiddle, q, tmp
  plant_mul_const \q, \twiddle, \coeff1, \tmp
  sub \coeff1, \coeff0, \tmp
  add \coeff0, \coeff0, \tmp
.endm

.macro gs_butterfly coeff0, coeff1, twiddle, q, tmp
  sub \tmp, \coeff0, \coeff1
  add \coeff0, \coeff0, \coeff1
  plant_mul_const \q, \twiddle, \tmp, \coeff1
.endm

// in-place plantard reduction to a
// output \in (-0.5q, 0.5q); q32: q<<32
.macro plant_red q32, qinv, a
  mul  \a, \a, \qinv
  srai \a, \a, 32
  addi \a, \a, 8
  mulh \a, \a, \q32
.endm

.equ q,    3329
.equ q32,  0xd0100000000                // q << 32
.equ qinv, 0x3c0f12886ba8f301           // q^-1 mod 2^64
.equ plantconst, 0x13afb7680bb055       // (((-2**64) % q) * qinv) % (2**64)
.equ plantconst2, 0x1a390f4d9791e139    // (((-2**64) % q) * ((-2**64) % q) * qinv) % (2**64)

// void poly_basemul_acc_end_rv64im(int16_t *r, const int16_t *a, const int16_t *b, uint64_t *zetas, int32_t *r_double)
// compute basemul, accumulate the 32-bit results into r_double, and reduce r_double to r
// a0: r, a1: a, a2: b, a3: zetas, a4: r_double
// a5: q<<32, a6: loop control
// t0-t3: a[2i,2i+1],b[2i,2i+1]
// t4: zeta, t5-t6: temp
.global poly_basemul_acc_end_rv64im_opt_c908
.align 2
poly_basemul_acc_end_rv64im_opt_c908:
    addi sp, sp, -8*2
    sd   s0, 0*8(sp)
    sd   s1, 1*8(sp)
    li s0, q32
    li s1, qinv
    li a6, 64
poly_basemul_acc_end_rv64im_loop:
                                  // Instructions:    63
                                  // Expected cycles: 33
                                  // Expected IPC:    1.91
                                  //
                                  // Cycle bound:     33.0
                                  // IPC bound:       1.91
                                  //
                                  // Wall time:     2.78s
                                  // User time:     2.78s
                                  //
                                  // ------- cycle (expected) ------->
                                  // 0                        25
                                  // |------------------------|-------
        lh x5, 2*1(x12)           // *................................
        ld x29, 8*0(x13)          // .*...............................
        addi x13, x13, 8*1        // .*...............................
        lh x26, 2*3(x12)          // ..*..............................
        mul x19, x5, x29          // ...*.............................
        lh x15, 2*0(x11)          // ...*.............................
        neg x27, x29              // ....*............................
        lh x30, 2*0(x12)          // ....*............................
        lh x16, 2*1(x11)          // .....*...........................
        mul x29, x26, x27         // .....*...........................
        lh x20, 2*2(x11)          // ......*..........................
        mul x28, x15, x5          // ......*..........................
        mul x21, x15, x30         // .......*.........................
        lh x18, 2*3(x11)          // .......*.........................
        srai x27, x19, 32         // ........*........................
        mul x7, x16, x30          // ........*........................
        mul x1, x20, x26          // .........*.......................
        lh x26, 2*2(x12)          // .........*.......................
        addi x6, x27, 8           // ..........*......................
        srai x30, x29, 32         // ..........*......................
        addi x23, x30, 8          // ...........*.....................
        mulh x25, x6, x8          // ...........*.....................
        mul x17, x18, x26         // ............*....................
        mulh x19, x23, x8         // ............*....................
        lw x31, 4*1(x14)          // .............*...................
        add x30, x28, x7          // .............*...................
        mul x20, x20, x26         // ..............*..................
        lw x22, 4*0(x14)          // ..............*..................
        mul x26, x16, x25         // ...............*.................
        lw x28, 4*3(x14)          // ...............*.................
        add x23, x1, x17          // ................*................
        mul x25, x18, x19         // ................*................
        lw x24, 4*2(x14)          // .................*...............
        add x19, x23, x28         // .................*...............
        add x27, x30, x31         // ..................*..............
        mul x23, x19, x9          // ..................*..............
        add x7, x26, x21          // ...................*.............
        mul x29, x27, x9          // ...................*.............
        add x16, x7, x22          // ....................*............
        add x7, x25, x20          // ....................*............
        add x24, x7, x24          // .....................*...........
        mul x4, x16, x9           // .....................*...........
        srai x1, x23, 32          // ......................*..........
        mul x22, x24, x9          // ......................*..........
        srai x23, x29, 32         // .......................*.........
        addi x1, x1, 8            // .......................*.........
        addi x30, x23, 8          // ........................*........
        mulh x21, x1, x8          // ........................*........
        mulh x23, x30, x8         // .........................*.......
        srai x15, x4, 32          // .........................*.......
        srai x25, x22, 32         // ..........................*......
        addi x5, x15, 8           // ..........................*......
        addi x19, x25, 8          // ...........................*.....
        mulh x27, x5, x8          // ...........................*.....
        mulh x6, x19, x8          // ............................*....
        addi x11, x11, 2*4        // ............................*....
        sh x23, 2*1(x10)          // .............................*...
        addi x12, x12, 2*4        // .............................*...
        addi x14, x14, 4*4        // ..............................*..
        sh x21, 2*3(x10)          // ..............................*..
        sh x27, 2*0(x10)          // ...............................*.
        sh x6, 2*2(x10)           // ................................*
        addi x10, x10, 2*4        // ................................*

                                    // ------- cycle (expected) ------->
                                    // 0                        25
                                    // |------------------------|-------
        // lh x7, 2*0(x12)          // ....*............................
        // lh x28, 2*1(x12)         // *................................
        // ld x29, 8*0(x13)         // .*...............................
        // lh x5, 2*0(x11)          // ...*.............................
        // lh x6, 2*1(x11)          // .....*...........................
        // mul  x30, x28, x29       // ...*.............................
        // srai x30, x30, 32        // ........*........................
        // addi x30, x30, 8         // ..........*......................
        // mulh x30, x30, x8        // ...........*.....................
        // lw  x17, 4*0(x14)        // ..............*..................
        // mul x30, x6, x30         // ...............*.................
        // mul x31, x5, x7          // .......*.........................
        // add x30, x30, x31        // ...................*.............
        // add x30, x30, x17        // ....................*............
        // mul  x30, x30, x9        // .....................*...........
        // srai x30, x30, 32        // .........................*.......
        // addi x30, x30, 8         // ..........................*......
        // mulh x30, x30, x8        // ...........................*.....
        // sh  x30, 2*0(x10)        // ...............................*.
        // lw  x17, 4*1(x14)        // .............*...................
        // mul x30, x5, x28         // ......*..........................
        // mul x31, x6, x7          // ........*........................
        // add x30, x30, x31        // .............*...................
        // add x30, x30, x17        // ..................*..............
        // mul  x30, x30, x9        // ...................*.............
        // srai x30, x30, 32        // .......................*.........
        // addi x30, x30, 8         // ........................*........
        // mulh x30, x30, x8        // .........................*.......
        // sh  x30, 2*1(x10)        // .............................*...
        // neg x29, x29             // ....*............................
        // lh x7, 2*2(x12)          // .........*.......................
        // lh x28, 2*3(x12)         // ..*..............................
        // lh x5, 2*2(x11)          // ......*..........................
        // lh x6, 2*3(x11)          // .......*.........................
        // mul  x30, x28, x29       // .....*...........................
        // srai x30, x30, 32        // ..........*......................
        // addi x30, x30, 8         // ...........*.....................
        // mulh x30, x30, x8        // ............*....................
        // lw  x17, 4*2(x14)        // .................*...............
        // mul x30, x6, x30         // ................*................
        // mul x31, x5, x7          // ..............*..................
        // add x30, x30, x31        // ....................*............
        // add x30, x30, x17        // .....................*...........
        // mul  x30, x30, x9        // ......................*..........
        // srai x30, x30, 32        // ..........................*......
        // addi x30, x30, 8         // ...........................*.....
        // mulh x30, x30, x8        // ............................*....
        // sh  x30, 2*2(x10)        // ................................*
        // lw  x17, 4*3(x14)        // ...............*.................
        // mul x30, x5, x28         // .........*.......................
        // mul x31, x6, x7          // ............*....................
        // add x30, x30, x31        // ................*................
        // add x30, x30, x17        // .................*...............
        // mul  x30, x30, x9        // ..................*..............
        // srai x30, x30, 32        // ......................*..........
        // addi x30, x30, 8         // .......................*.........
        // mulh x30, x30, x8        // ........................*........
        // sh  x30, 2*3(x10)        // ..............................*..
        // addi x10, x10, 2*4       // ................................*
        // addi x11, x11, 2*4       // ............................*....
        // addi x12, x12, 2*4       // .............................*...
        // addi x13, x13, 8*1       // .*...............................
        // addi x14, x14, 4*4       // ..............................*..

        addi a6, a6, -1
        bne a6, zero,, poly_basemul_acc_end_rv64im_loop
    ld   s0, 0*8(sp)
    ld   s1, 1*8(sp)
    addi sp, sp, 8*2
ret
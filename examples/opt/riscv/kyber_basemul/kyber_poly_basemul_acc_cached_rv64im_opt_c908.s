.macro load_coeffs poly, len, wordLen
  lh s0,  \len*\wordLen*0(\poly)
  lh s1,  \len*\wordLen*1(\poly)
  lh s2,  \len*\wordLen*2(\poly)
  lh s3,  \len*\wordLen*3(\poly)
  lh s4,  \len*\wordLen*4(\poly)
  lh s5,  \len*\wordLen*5(\poly)
  lh s6,  \len*\wordLen*6(\poly)
  lh s7,  \len*\wordLen*7(\poly)
  lh s8,  \len*\wordLen*8(\poly)
  lh s9,  \len*\wordLen*9(\poly)
  lh s10, \len*\wordLen*10(\poly)
  lh s11, \len*\wordLen*11(\poly)
  lh a2,  \len*\wordLen*12(\poly)
  lh a3,  \len*\wordLen*13(\poly)
  lh a4,  \len*\wordLen*14(\poly)
  lh a5,  \len*\wordLen*15(\poly)
.endm

.macro store_coeffs poly, len, wordLen
  sh s0,  \len*\wordLen*0(\poly)
  sh s1,  \len*\wordLen*1(\poly)
  sh s2,  \len*\wordLen*2(\poly)
  sh s3,  \len*\wordLen*3(\poly)
  sh s4,  \len*\wordLen*4(\poly)
  sh s5,  \len*\wordLen*5(\poly)
  sh s6,  \len*\wordLen*6(\poly)
  sh s7,  \len*\wordLen*7(\poly)
  sh s8,  \len*\wordLen*8(\poly)
  sh s9,  \len*\wordLen*9(\poly)
  sh s10, \len*\wordLen*10(\poly)
  sh s11, \len*\wordLen*11(\poly)
  sh a2,  \len*\wordLen*12(\poly)
  sh a3,  \len*\wordLen*13(\poly)
  sh a4,  \len*\wordLen*14(\poly)
  sh a5,  \len*\wordLen*15(\poly)
.endm

.macro save_regs
  sd s0,  0*8(sp)
  sd s1,  1*8(sp)
  sd s2,  2*8(sp)
  sd s3,  3*8(sp)
  sd s4,  4*8(sp)
  sd s5,  5*8(sp)
  sd s6,  6*8(sp)
  sd s7,  7*8(sp)
  sd s8,  8*8(sp)
  sd s9,  9*8(sp)
  sd s10, 10*8(sp)
  sd s11, 11*8(sp)
  sd gp,  12*8(sp)
  sd tp,  13*8(sp)
  sd ra,  14*8(sp)
.endm

.macro restore_regs
  ld s0,  0*8(sp)
  ld s1,  1*8(sp)
  ld s2,  2*8(sp)
  ld s3,  3*8(sp)
  ld s4,  4*8(sp)
  ld s5,  5*8(sp)
  ld s6,  6*8(sp)
  ld s7,  7*8(sp)
  ld s8,  8*8(sp)
  ld s9,  9*8(sp)
  ld s10, 10*8(sp)
  ld s11, 11*8(sp)
  ld gp,  12*8(sp)
  ld tp,  13*8(sp)
  ld ra,  14*8(sp)
.endm

// a <- a*b*(-2^{-64}) mod+- q
// q32: q<<32; bqinv: b*qinv
.macro plant_mul_const_inplace q32, bqinv, a
  mul  \a, \a, \bqinv
  srai \a, \a, 32
  addi \a, \a, 8
  mulh \a, \a, \q32
.endm

// r <- a*b*(-2^{-64}) mod+- q
// q32: q<<32; bqinv: b*qinv
.macro plant_mul_const q32, bqinv, a, r
    mul  \r, \a, \bqinv
    srai \r, \r, 32
    addi \r, \r, 8
    mulh \r, \r, \q32
.endm

// each layer increases coefficients by 0.5q; In ct_butterfly, twiddle and tmp can be reused because each twiddle is only used once. The gs_butterfly cannot.
.macro ct_butterfly coeff0, coeff1, twiddle, q, tmp
  plant_mul_const \q, \twiddle, \coeff1, \tmp
  sub \coeff1, \coeff0, \tmp
  add \coeff0, \coeff0, \tmp
.endm

.macro gs_butterfly coeff0, coeff1, twiddle, q, tmp
  sub \tmp, \coeff0, \coeff1
  add \coeff0, \coeff0, \coeff1
  plant_mul_const \q, \twiddle, \tmp, \coeff1
.endm

// in-place plantard reduction to a
// output \in (-0.5q, 0.5q); q32: q<<32
.macro plant_red q32, qinv, a
  mul  \a, \a, \qinv
  srai \a, \a, 32
  addi \a, \a, 8
  mulh \a, \a, \q32
.endm

.equ q,    3329
.equ q32,  0xd0100000000                // q << 32
.equ qinv, 0x3c0f12886ba8f301           // q^-1 mod 2^64
.equ plantconst, 0x13afb7680bb055       // (((-2**64) % q) * qinv) % (2**64)
.equ plantconst2, 0x1a390f4d9791e139    // (((-2**64) % q) * ((-2**64) % q) * qinv) % (2**64)

// void poly_basemul_acc_cached_rv64im(int32_t *r, const int16_t *a, const int16_t *b, int16_t *b_cache)
// compute basemul using cached b_cache and accumulate the 32-bit results into r
// a0: r, a1: a, a2: b, a3: b_cache
// a5: q<<32, a6: loop control
// t0-t3: a[2i,2i+1],b[2i,2i+1]
// t4: accumulated value, t5-t6: temp
.global poly_basemul_acc_cached_rv64im_opt_c908
.align 2
poly_basemul_acc_cached_rv64im_opt_c908:
    addi sp, sp, -8*15
    save_regs
    li a5, q32
    li a6, 64
                                // Instructions:    3
                                // Expected cycles: 3
                                // Expected IPC:    1.00
                                //
                                // Cycle bound:     3.0
                                // IPC bound:       1.00
                                //
                                // Wall time:     0.02s
                                // User time:     0.02s
                                //
                                // ----- cycle (expected) ------>
                                // 0                        25
                                // |------------------------|----
        lh x3, 2*3(x11)         // *.............................
        lh x24, 2*2(x12)        // .*............................
        lh x29, 2*2(x11)        // ..*...........................

                                 // ------ cycle (expected) ------>
                                 // 0                        25
                                 // |------------------------|-----
        // lh x3, 2*3(x11)       // *..............................
        // lh x24, 2*2(x12)      // .*.............................
        // lh x29, 2*2(x11)      // ..*............................

        addi a6, a6, -1
poly_basemul_acc_cached_rv64im_loop:
                                  // Instructions:    38
                                  // Expected cycles: 19
                                  // Expected IPC:    2.00
                                  //
                                  // Cycle bound:     22.0
                                  // IPC bound:       1.73
                                  //
                                  // Wall time:     14.04s
                                  // User time:     14.04s
                                  //
                                  // ----- cycle (expected) ------>
                                  // 0                        25
                                  // |------------------------|----
        lh x1, 2*1(x11)           // *.............................
        mul x9, x29, x24          // *.............................
        lh x4, 2*0(x13)           // .*............................
        mul x5, x3, x24           // .*............................
        lh x25, 2*1(x13)          // ..*...........................
        addi x13, x13, 2*2        // ..*...........................
        lh x14, 2*0(x11)          // ...*..........................
        addi x11, x11, 2*4        // ...*..........................
        lh x22, 2*1(x12)          // ....*.........................
        mul x21, x1, x4           // ....*.........................
        mul x26, x3, x25          // .....*........................
        lh x20, 2*0(x12)          // .....*........................
        lh x7, 2*3(x12)           // ......*.......................
        addi x12, x12, 2*4        // ......*.......................
        lw x18, 4*3(x10)          // .......*......................
        mul x28, x14, x22         // .......*......................
        lw x15, 4*2(x10)          // ........*.....................
        mul x17, x14, x20         // ........*.....................
        lw x23, 4*1(x10)          // .........*....................
        add x9, x26, x9           // .........*....................
        lh x3, 2*3(x11)           // ..........e...................
        add x9, x9, x15           // ..........*...................
        sw x9, 4*2(x10)           // ...........*..................
        mul x14, x29, x7          // ...........*..................
        lw x30, 4*0(x10)          // ............*.................
        mul x31, x1, x20          // ............*.................
        lh x24, 2*2(x12)          // .............e................
        add x27, x21, x17         // .............*................
        lh x29, 2*2(x11)          // ..............e...............
        add x19, x27, x30         // ..............*...............
        add x14, x14, x5          // ...............*..............
        sw x19, 4*0(x10)          // ...............*..............
        add x14, x14, x18         // ................*.............
        add x8, x28, x31          // ................*.............
        sw x14, 4*3(x10)          // .................*............
        add x6, x8, x23           // .................*............
        sw x6, 4*1(x10)           // ..................*...........
        addi x10, x10, 4*4        // ..................*...........

                                    // ------ cycle (expected) ------>
                                    // 0                        25
                                    // |------------------------|-----
        // lh x5, 2*0(x11)          // .........'..*...............'..
        // lh x6, 2*1(x11)          // .........*..................~..
        // lh x30, 2*0(x13)         // .........'*.................'~.
        // lh x7, 2*0(x12)          // .........'....*.............'..
        // lh x28, 2*1(x12)         // .........'...*..............'..
        // lw x29, 4*0(x10)         // ..~......'...........*......'..
        // mul x30, x6, x30         // .........'...*..............'..
        // mul x31, x5, x7          // .........'.......*..........'..
        // add x30, x30, x31        // ...~.....'............*.....'..
        // add x30, x30, x29        // ....~....'.............*....'..
        // sw  x30, 4*0(x10)        // .....~...'..............*...'..
        // lw  x29, 4*1(x10)        // .........'........*.........'..
        // mul x30, x5, x28         // .........'......*...........'..
        // mul x31, x6, x7          // ..~......'...........*......'..
        // add x30, x30, x31        // ......~..'...............*..'..
        // add x30, x30, x29        // .......~.'................*.'..
        // sw  x30, 4*1(x10)        // ........~'.................*'..
        // lh x5, 2*2(x11)          // ....e....'.............~....'..
        // lh x6, 2*3(x11)          // e........'.........~........'..
        // lh x30, 2*1(x13)         // .........'.*................'..
        // lh x7, 2*2(x12)          // ...e.....'............~.....'..
        // lh x28, 2*3(x12)         // .........'.....*............'..
        // lw x29, 4*2(x10)         // .........'.......*..........'..
        // mul x30, x6, x30         // .........'....*.............'..
        // mul x31, x5, x7          // .........*..................~..
        // add x30, x30, x31        // .........'........*.........'..
        // add x30, x30, x29        // ~........'.........*........'..
        // sw  x30, 4*2(x10)        // .~.......'..........*.......'..
        // lw  x29, 4*3(x10)        // .........'......*...........'..
        // mul x30, x5, x28         // .~.......'..........*.......'..
        // mul x31, x6, x7          // .........'*.................'~.
        // add x30, x30, x31        // .....~...'..............*...'..
        // add x30, x30, x29        // ......~..'...............*..'..
        // sw  x30, 4*3(x10)        // .......~.'................*.'..
        // addi x10, x10, 4*4       // ........~'.................*'..
        // addi x11, x11, 2*4       // .........'..*...............'..
        // addi x12, x12, 2*4       // .........'.....*............'..
        // addi x13, x13, 2*2       // .........'.*................'..

        addi a6, a6, -1
        bne a6, zero, poly_basemul_acc_cached_rv64im_loop
                                  // Instructions:    35
                                  // Expected cycles: 18
                                  // Expected IPC:    1.94
                                  //
                                  // Cycle bound:     18.0
                                  // IPC bound:       1.94
                                  //
                                  // Wall time:     0.46s
                                  // User time:     0.46s
                                  //
                                  // ----- cycle (expected) ------>
                                  // 0                        25
                                  // |------------------------|----
        lh x14, 2*1(x13)          // *.............................
        mul x8, x3, x24           // *.............................
        lh x28, 2*0(x11)          // .*............................
        mul x23, x29, x24         // ..*...........................
        lh x19, 2*1(x11)          // ..*...........................
        mul x15, x3, x14          // ...*..........................
        lh x14, 2*0(x13)          // ...*..........................
        lw x5, 4*2(x10)           // ....*.........................
        addi x13, x13, 2*2        // ....*.........................
        addi x11, x11, 2*4        // .....*........................
        lh x18, 2*3(x12)          // .....*........................
        mul x7, x19, x14          // ......*.......................
        lw x25, 4*1(x10)          // ......*.......................
        add x9, x15, x23          // .......*......................
        lh x3, 2*0(x12)           // .......*......................
        mul x14, x29, x18         // ........*.....................
        lh x31, 2*1(x12)          // ........*.....................
        add x9, x9, x5            // .........*....................
        lw x6, 4*3(x10)           // .........*....................
        addi x12, x12, 2*4        // ..........*...................
        mul x15, x28, x3          // ..........*...................
        mul x26, x19, x3          // ...........*..................
        mul x3, x28, x31          // ...........*..................
        add x18, x14, x8          // ............*.................
        sw x9, 4*2(x10)           // ............*.................
        add x5, x18, x6           // .............*................
        lw x14, 4*0(x10)          // .............*................
        add x18, x7, x15          // ..............*...............
        sw x5, 4*3(x10)           // ..............*...............
        add x14, x18, x14         // ...............*..............
        add x9, x3, x26           // ...............*..............
        add x18, x9, x25          // ................*.............
        sw x14, 4*0(x10)          // ................*.............
        sw x18, 4*1(x10)          // .................*............
        addi x10, x10, 4*4        // .................*............

                                   // ------ cycle (expected) ------>
                                   // 0                        25
                                   // |------------------------|-----
        // lh x1, 2*1(x11)         // ..*............................
        // mul x9, x29, x24        // ..*............................
        // lh x4, 2*0(x13)         // ...*...........................
        // mul x5, x3, x24         // *..............................
        // lh x25, 2*1(x13)        // *..............................
        // addi x13, x13, 2*2      // ....*..........................
        // lh x14, 2*0(x11)        // .*.............................
        // addi x11, x11, 2*4      // .....*.........................
        // lh x22, 2*1(x12)        // ........*......................
        // mul x21, x1, x4         // ......*........................
        // mul x26, x3, x25        // ...*...........................
        // lh x20, 2*0(x12)        // .......*.......................
        // lh x7, 2*3(x12)         // .....*.........................
        // addi x12, x12, 2*4      // ..........*....................
        // lw x18, 4*3(x10)        // .........*.....................
        // mul x28, x14, x22       // ...........*...................
        // lw x15, 4*2(x10)        // ....*..........................
        // mul x17, x14, x20       // ..........*....................
        // lw x23, 4*1(x10)        // ......*........................
        // add x9, x26, x9         // .......*.......................
        // add x9, x9, x15         // .........*.....................
        // sw x9, 4*2(x10)         // ............*..................
        // mul x14, x29, x7        // ........*......................
        // lw x30, 4*0(x10)        // .............*.................
        // mul x31, x1, x20        // ...........*...................
        // add x27, x21, x17       // ..............*................
        // add x19, x27, x30       // ...............*...............
        // add x14, x14, x5        // ............*..................
        // sw x19, 4*0(x10)        // ................*..............
        // add x14, x14, x18       // .............*.................
        // add x8, x28, x31        // ...............*...............
        // sw x14, 4*3(x10)        // ..............*................
        // add x6, x8, x23         // ................*..............
        // sw x6, 4*1(x10)         // .................*.............
        // addi x10, x10, 4*4      // .................*.............

    restore_regs
    addi sp, sp, 8*15
ret
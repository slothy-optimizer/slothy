.macro load_coeffs poly, len, wordLen
  lh s0,  \len*\wordLen*0(\poly)
  lh s1,  \len*\wordLen*1(\poly)
  lh s2,  \len*\wordLen*2(\poly)
  lh s3,  \len*\wordLen*3(\poly)
  lh s4,  \len*\wordLen*4(\poly)
  lh s5,  \len*\wordLen*5(\poly)
  lh s6,  \len*\wordLen*6(\poly)
  lh s7,  \len*\wordLen*7(\poly)
  lh s8,  \len*\wordLen*8(\poly)
  lh s9,  \len*\wordLen*9(\poly)
  lh s10, \len*\wordLen*10(\poly)
  lh s11, \len*\wordLen*11(\poly)
  lh a2,  \len*\wordLen*12(\poly)
  lh a3,  \len*\wordLen*13(\poly)
  lh a4,  \len*\wordLen*14(\poly)
  lh a5,  \len*\wordLen*15(\poly)
.endm

.macro store_coeffs poly, len, wordLen
  sh s0,  \len*\wordLen*0(\poly)
  sh s1,  \len*\wordLen*1(\poly)
  sh s2,  \len*\wordLen*2(\poly)
  sh s3,  \len*\wordLen*3(\poly)
  sh s4,  \len*\wordLen*4(\poly)
  sh s5,  \len*\wordLen*5(\poly)
  sh s6,  \len*\wordLen*6(\poly)
  sh s7,  \len*\wordLen*7(\poly)
  sh s8,  \len*\wordLen*8(\poly)
  sh s9,  \len*\wordLen*9(\poly)
  sh s10, \len*\wordLen*10(\poly)
  sh s11, \len*\wordLen*11(\poly)
  sh a2,  \len*\wordLen*12(\poly)
  sh a3,  \len*\wordLen*13(\poly)
  sh a4,  \len*\wordLen*14(\poly)
  sh a5,  \len*\wordLen*15(\poly)
.endm

.macro save_regs
  sd s0,  0*8(sp)
  sd s1,  1*8(sp)
  sd s2,  2*8(sp)
  sd s3,  3*8(sp)
  sd s4,  4*8(sp)
  sd s5,  5*8(sp)
  sd s6,  6*8(sp)
  sd s7,  7*8(sp)
  sd s8,  8*8(sp)
  sd s9,  9*8(sp)
  sd s10, 10*8(sp)
  sd s11, 11*8(sp)
  sd gp,  12*8(sp)
  sd tp,  13*8(sp)
  sd ra,  14*8(sp)
.endm

.macro restore_regs
  ld s0,  0*8(sp)
  ld s1,  1*8(sp)
  ld s2,  2*8(sp)
  ld s3,  3*8(sp)
  ld s4,  4*8(sp)
  ld s5,  5*8(sp)
  ld s6,  6*8(sp)
  ld s7,  7*8(sp)
  ld s8,  8*8(sp)
  ld s9,  9*8(sp)
  ld s10, 10*8(sp)
  ld s11, 11*8(sp)
  ld gp,  12*8(sp)
  ld tp,  13*8(sp)
  ld ra,  14*8(sp)
.endm

// a <- a*b*(-2^{-64}) mod+- q
// q32: q<<32; bqinv: b*qinv
.macro plant_mul_const_inplace q32, bqinv, a
  mul  \a, \a, \bqinv
  srai \a, \a, 32
  addi \a, \a, 8
  mulh \a, \a, \q32
.endm

// r <- a*b*(-2^{-64}) mod+- q
// q32: q<<32; bqinv: b*qinv
.macro plant_mul_const q32, bqinv, a, r
    mul  \r, \a, \bqinv
    srai \r, \r, 32
    addi \r, \r, 8
    mulh \r, \r, \q32
.endm

// each layer increases coefficients by 0.5q; In ct_butterfly, twiddle and tmp can be reused because each twiddle is only used once. The gs_butterfly cannot.
.macro ct_butterfly coeff0, coeff1, twiddle, q, tmp
  plant_mul_const \q, \twiddle, \coeff1, \tmp
  sub \coeff1, \coeff0, \tmp
  add \coeff0, \coeff0, \tmp
.endm

.macro gs_butterfly coeff0, coeff1, twiddle, q, tmp
  sub \tmp, \coeff0, \coeff1
  add \coeff0, \coeff0, \coeff1
  plant_mul_const \q, \twiddle, \tmp, \coeff1
.endm

// in-place plantard reduction to a
// output \in (-0.5q, 0.5q); q32: q<<32
.macro plant_red q32, qinv, a
  mul  \a, \a, \qinv
  srai \a, \a, 32
  addi \a, \a, 8
  mulh \a, \a, \q32
.endm

.equ q,    3329
.equ q32,  0xd0100000000                // q << 32
.equ qinv, 0x3c0f12886ba8f301           // q^-1 mod 2^64
.equ plantconst, 0x13afb7680bb055       // (((-2**64) % q) * qinv) % (2**64)
.equ plantconst2, 0x1a390f4d9791e139    // (((-2**64) % q) * ((-2**64) % q) * qinv) % (2**64)

// void poly_basemul_cache_init_rv64im(int32_t *r, const int16_t *a, const int16_t *b, int16_t *b_cache, uint64_t *zetas)
// compute basemul, cache bzeta into b_cache, and store the 32-bit results into r
// a0: r, a1: a, a2: b, a3: b_cache, a4: zetas
// a5: q<<32, a6: loop control
// t0-t3: a[2i,2i+1],b[2i,2i+1]
// t4: zeta, t5-t6: temp
.global poly_basemul_cache_init_rv64im_opt_c908
.align 2
poly_basemul_cache_init_rv64im_opt_c908:
    li a5, q32
    li a6, 64
                                // Instructions:    1
                                // Expected cycles: 1
                                // Expected IPC:    1.00
                                //
                                // Cycle bound:     1.0
                                // IPC bound:       1.00
                                //
                                // Wall time:     0.01s
                                // User time:     0.01s
                                //
                                // ----- cycle (expected) ------>
                                // 0                        25
                                // |------------------------|----
        lh x31, 2*1(x12)        // *.............................

                                 // ------ cycle (expected) ------>
                                 // 0                        25
                                 // |------------------------|-----
        // lh x31, 2*1(x12)      // *..............................

        addi a6, a6, -1
poly_basemul_cache_init_rv64im_loop:
                                  // Instructions:    41
                                  // Expected cycles: 21
                                  // Expected IPC:    1.95
                                  //
                                  // Cycle bound:     22.0
                                  // IPC bound:       1.86
                                  //
                                  // Wall time:     14.37s
                                  // User time:     14.37s
                                  //
                                  // ----- cycle (expected) ------>
                                  // 0                        25
                                  // |------------------------|----
        ld x22, 8*0(x14)          // *.............................
        addi x14, x14, 8*1        // .*............................
        lh x23, 2*3(x12)          // .*............................
        lh x9, 2*0(x12)           // ..*...........................
        mul x17, x31, x22         // ..*...........................
        neg x6, x22               // ...*..........................
        lh x5, 2*1(x11)           // ...*..........................
        mul x24, x23, x6          // ....*.........................
        lh x25, 2*2(x12)          // ....*.........................
        addi x12, x12, 2*4        // .....*........................
        lh x22, 2*0(x11)          // .....*........................
        mul x27, x5, x9           // ......*.......................
        srai x16, x17, 32         // ......*.......................
        addi x16, x16, 8          // .......*......................
        lh x28, 2*3(x11)          // .......*......................
        srai x20, x24, 32         // ........*.....................
        mulh x16, x16, x15        // ........*.....................
        mul x6, x22, x9           // .........*....................
        lh x21, 2*2(x11)          // .........*....................
        addi x19, x20, 8          // ..........*...................
        mul x29, x22, x31         // ..........*...................
        lh x31, 2*1(x12)          // ...........e..................
        mulh x19, x19, x15        // ...........*..................
        mul x9, x5, x16           // ............*.................
        mul x4, x21, x23          // ............*.................
        mul x23, x28, x25         // .............*................
        sh x16, 2*0(x13)          // .............*................
        addi x11, x11, 2*4        // ..............*...............
        add x30, x29, x27         // ..............*...............
        mul x8, x21, x25          // ...............*..............
        mul x7, x28, x19          // ...............*..............
        add x1, x9, x6            // ................*.............
        sh x19, 2*1(x13)          // ................*.............
        sw x30, 4*1(x10)          // .................*............
        addi x13, x13, 2*2        // .................*............
        sw x1, 4*0(x10)           // ..................*...........
        add x18, x4, x23          // ..................*...........
        sw x18, 4*3(x10)          // ...................*..........
        add x26, x7, x8           // ...................*..........
        sw x26, 4*2(x10)          // ....................*.........
        addi x10, x10, 4*4        // ....................*.........

                                    // ------ cycle (expected) ------>
                                    // 0                        25
                                    // |------------------------|-----
        // lh x7, 2*0(x12)          // ..........'.*..................
        // lh x28, 2*1(x12)         // e.........'..........~.........
        // ld x29, 8*0(x14)         // ..........*....................
        // lh x5, 2*0(x11)          // ..........'....*...............
        // lh x6, 2*1(x11)          // ..........'..*.................
        // mul  x30, x28, x29       // ..........'.*..................
        // srai x30, x30, 32        // ..........'.....*..............
        // addi x30, x30, 8         // ..........'......*.............
        // mulh x30, x30, x15       // ..........'.......*............
        // sh  x30, 2*0(x13)        // ..~.......'............*.......
        // mul x30, x6, x30         // .~........'...........*........
        // mul x31, x5, x7          // ..........'........*...........
        // add x30, x30, x31        // .....~....'...............*....
        // sw  x30, 4*0(x10)        // .......~..'.................*..
        // mul x30, x5, x28         // ..........'.........*..........
        // mul x31, x6, x7          // ..........'.....*..............
        // add x30, x30, x31        // ...~......'.............*......
        // sw  x30, 4*1(x10)        // ......~...'................*...
        // neg x29, x29             // ..........'..*.................
        // lh x7, 2*2(x12)          // ..........'...*................
        // lh x28, 2*3(x12)         // ..........'*...................
        // lh x5, 2*2(x11)          // ..........'........*...........
        // lh x6, 2*3(x11)          // ..........'......*.............
        // mul  x30, x28, x29       // ..........'...*................
        // srai x30, x30, 32        // ..........'.......*............
        // addi x30, x30, 8         // ..........'.........*..........
        // mulh x30, x30, x15       // ~.........'..........*.........
        // sh  x30, 2*1(x13)        // .....~....'...............*....
        // mul x30, x6, x30         // ....~.....'..............*.....
        // mul x31, x5, x7          // ....~.....'..............*.....
        // add x30, x30, x31        // ........~.'..................*.
        // sw  x30, 4*2(x10)        // .........~'...................*
        // mul x30, x5, x28         // .~........'...........*........
        // mul x31, x6, x7          // ..~.......'............*.......
        // add x30, x30, x31        // .......~..'.................*..
        // sw  x30, 4*3(x10)        // ........~.'..................*.
        // addi x10, x10, 4*4       // .........~'...................*
        // addi x11, x11, 2*4       // ...~......'.............*......
        // addi x12, x12, 2*4       // ..........'....*...............
        // addi x13, x13, 2*2       // ......~...'................*...
        // addi x14, x14, 8*1       // ..........'*...................

        addi a6, a6, -1
        bne a6, zero, poly_basemul_cache_init_rv64im_loop
                                  // Instructions:    40
                                  // Expected cycles: 21
                                  // Expected IPC:    1.90
                                  //
                                  // Cycle bound:     21.0
                                  // IPC bound:       1.90
                                  //
                                  // Wall time:     0.59s
                                  // User time:     0.59s
                                  //
                                  // ----- cycle (expected) ------>
                                  // 0                        25
                                  // |------------------------|----
        ld x22, 8*0(x14)          // *.............................
        addi x14, x14, 8*1        // *.............................
        lh x28, 2*3(x12)          // .*............................
        mul x7, x31, x22          // ..*...........................
        lh x5, 2*0(x11)           // ..*...........................
        lh x20, 2*2(x11)          // ...*..........................
        neg x24, x22              // ...*..........................
        mul x19, x28, x24         // ....*.........................
        lh x18, 2*2(x12)          // ....*.........................
        mul x17, x5, x31          // .....*........................
        lh x4, 2*1(x11)           // .....*........................
        lh x9, 2*3(x11)           // ......*.......................
        srai x31, x7, 32          // ......*.......................
        mul x26, x20, x18         // .......*......................
        addi x25, x31, 8          // .......*......................
        srai x31, x19, 32         // ........*.....................
        mulh x21, x25, x15        // ........*.....................
        addi x29, x31, 8          // .........*....................
        lh x31, 2*0(x12)          // .........*....................
        mulh x25, x29, x15        // ..........*...................
        mul x24, x9, x18          // ..........*...................
        mul x30, x20, x28         // ...........*..................
        mul x19, x5, x31          // ............*.................
        mul x1, x4, x31           // ............*.................
        mul x31, x4, x21          // .............*................
        sh x21, 2*0(x13)          // .............*................
        mul x9, x9, x25           // ..............*...............
        sh x25, 2*1(x13)          // ..............*...............
        addi x13, x13, 2*2        // ...............*..............
        add x29, x30, x24         // ...............*..............
        add x25, x17, x1          // ................*.............
        sw x29, 4*3(x10)          // ................*.............
        add x31, x31, x19         // .................*............
        sw x25, 4*1(x10)          // .................*............
        sw x31, 4*0(x10)          // ..................*...........
        add x31, x9, x26          // ..................*...........
        sw x31, 4*2(x10)          // ...................*..........
        addi x10, x10, 4*4        // ...................*..........
        addi x12, x12, 2*4        // ....................*.........
        addi x11, x11, 2*4        // ....................*.........

                                   // ------ cycle (expected) ------>
                                   // 0                        25
                                   // |------------------------|-----
        // ld x22, 8*0(x14)        // *..............................
        // addi x14, x14, 8*1      // *..............................
        // lh x23, 2*3(x12)        // .*.............................
        // lh x9, 2*0(x12)         // .........*.....................
        // mul x17, x31, x22       // ..*............................
        // neg x6, x22             // ...*...........................
        // lh x5, 2*1(x11)         // .....*.........................
        // mul x24, x23, x6        // ....*..........................
        // lh x25, 2*2(x12)        // ....*..........................
        // addi x12, x12, 2*4      // ....................*..........
        // lh x22, 2*0(x11)        // ..*............................
        // mul x27, x5, x9         // ............*..................
        // srai x16, x17, 32       // ......*........................
        // addi x16, x16, 8        // .......*.......................
        // lh x28, 2*3(x11)        // ......*........................
        // srai x20, x24, 32       // ........*......................
        // mulh x16, x16, x15      // ........*......................
        // mul x6, x22, x9         // ............*..................
        // lh x21, 2*2(x11)        // ...*...........................
        // addi x19, x20, 8        // .........*.....................
        // mul x29, x22, x31       // .....*.........................
        // mulh x19, x19, x15      // ..........*....................
        // mul x9, x5, x16         // .............*.................
        // mul x4, x21, x23        // ...........*...................
        // mul x23, x28, x25       // ..........*....................
        // sh x16, 2*0(x13)        // .............*.................
        // addi x11, x11, 2*4      // ....................*..........
        // add x30, x29, x27       // ................*..............
        // mul x8, x21, x25        // .......*.......................
        // mul x7, x28, x19        // ..............*................
        // add x1, x9, x6          // .................*.............
        // sh x19, 2*1(x13)        // ..............*................
        // sw x30, 4*1(x10)        // .................*.............
        // addi x13, x13, 2*2      // ...............*...............
        // sw x1, 4*0(x10)         // ..................*............
        // add x18, x4, x23        // ...............*...............
        // sw x18, 4*3(x10)        // ................*..............
        // add x26, x7, x8         // ..................*............
        // sw x26, 4*2(x10)        // ...................*...........
        // addi x10, x10, 4*4      // ...................*...........

ret
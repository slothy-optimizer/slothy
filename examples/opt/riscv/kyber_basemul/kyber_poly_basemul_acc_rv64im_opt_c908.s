.macro load_coeffs poly, len, wordLen
  lh s0,  \len*\wordLen*0(\poly)
  lh s1,  \len*\wordLen*1(\poly)
  lh s2,  \len*\wordLen*2(\poly)
  lh s3,  \len*\wordLen*3(\poly)
  lh s4,  \len*\wordLen*4(\poly)
  lh s5,  \len*\wordLen*5(\poly)
  lh s6,  \len*\wordLen*6(\poly)
  lh s7,  \len*\wordLen*7(\poly)
  lh s8,  \len*\wordLen*8(\poly)
  lh s9,  \len*\wordLen*9(\poly)
  lh s10, \len*\wordLen*10(\poly)
  lh s11, \len*\wordLen*11(\poly)
  lh a2,  \len*\wordLen*12(\poly)
  lh a3,  \len*\wordLen*13(\poly)
  lh a4,  \len*\wordLen*14(\poly)
  lh a5,  \len*\wordLen*15(\poly)
.endm

.macro store_coeffs poly, len, wordLen
  sh s0,  \len*\wordLen*0(\poly)
  sh s1,  \len*\wordLen*1(\poly)
  sh s2,  \len*\wordLen*2(\poly)
  sh s3,  \len*\wordLen*3(\poly)
  sh s4,  \len*\wordLen*4(\poly)
  sh s5,  \len*\wordLen*5(\poly)
  sh s6,  \len*\wordLen*6(\poly)
  sh s7,  \len*\wordLen*7(\poly)
  sh s8,  \len*\wordLen*8(\poly)
  sh s9,  \len*\wordLen*9(\poly)
  sh s10, \len*\wordLen*10(\poly)
  sh s11, \len*\wordLen*11(\poly)
  sh a2,  \len*\wordLen*12(\poly)
  sh a3,  \len*\wordLen*13(\poly)
  sh a4,  \len*\wordLen*14(\poly)
  sh a5,  \len*\wordLen*15(\poly)
.endm

.macro save_regs
  sd s0,  0*8(sp)
  sd s1,  1*8(sp)
  sd s2,  2*8(sp)
  sd s3,  3*8(sp)
  sd s4,  4*8(sp)
  sd s5,  5*8(sp)
  sd s6,  6*8(sp)
  sd s7,  7*8(sp)
  sd s8,  8*8(sp)
  sd s9,  9*8(sp)
  sd s10, 10*8(sp)
  sd s11, 11*8(sp)
  sd gp,  12*8(sp)
  sd tp,  13*8(sp)
  sd ra,  14*8(sp)
.endm

.macro restore_regs
  ld s0,  0*8(sp)
  ld s1,  1*8(sp)
  ld s2,  2*8(sp)
  ld s3,  3*8(sp)
  ld s4,  4*8(sp)
  ld s5,  5*8(sp)
  ld s6,  6*8(sp)
  ld s7,  7*8(sp)
  ld s8,  8*8(sp)
  ld s9,  9*8(sp)
  ld s10, 10*8(sp)
  ld s11, 11*8(sp)
  ld gp,  12*8(sp)
  ld tp,  13*8(sp)
  ld ra,  14*8(sp)
.endm

// a <- a*b*(-2^{-64}) mod+- q
// q32: q<<32; bqinv: b*qinv
.macro plant_mul_const_inplace q32, bqinv, a
  mul  \a, \a, \bqinv
  srai \a, \a, 32
  addi \a, \a, 8
  mulh \a, \a, \q32
.endm

// r <- a*b*(-2^{-64}) mod+- q
// q32: q<<32; bqinv: b*qinv
.macro plant_mul_const q32, bqinv, a, r
    mul  \r, \a, \bqinv
    srai \r, \r, 32
    addi \r, \r, 8
    mulh \r, \r, \q32
.endm

// each layer increases coefficients by 0.5q; In ct_butterfly, twiddle and tmp can be reused because each twiddle is only used once. The gs_butterfly cannot.
.macro ct_butterfly coeff0, coeff1, twiddle, q, tmp
  plant_mul_const \q, \twiddle, \coeff1, \tmp
  sub \coeff1, \coeff0, \tmp
  add \coeff0, \coeff0, \tmp
.endm

.macro gs_butterfly coeff0, coeff1, twiddle, q, tmp
  sub \tmp, \coeff0, \coeff1
  add \coeff0, \coeff0, \coeff1
  plant_mul_const \q, \twiddle, \tmp, \coeff1
.endm

// in-place plantard reduction to a
// output \in (-0.5q, 0.5q); q32: q<<32
.macro plant_red q32, qinv, a
  mul  \a, \a, \qinv
  srai \a, \a, 32
  addi \a, \a, 8
  mulh \a, \a, \q32
.endm

.equ q,    3329
.equ q32,  0xd0100000000                // q << 32
.equ qinv, 0x3c0f12886ba8f301           // q^-1 mod 2^64
.equ plantconst, 0x13afb7680bb055       // (((-2**64) % q) * qinv) % (2**64)
.equ plantconst2, 0x1a390f4d9791e139    // (((-2**64) % q) * ((-2**64) % q) * qinv) % (2**64)

// void poly_basemul_acc_rv64im(int32_t *r, const int16_t *a, const int16_t *b, uint64_t *zetas)
// compute basemul and accumulate the 32-bit results into r
// a0: r, a1: a, a2: b, a3: zetas
// a5: q<<32, a6: loop control
// t0-t3: a[2i,2i+1],b[2i,2i+1]
// t4: zeta, t5-t6: temp
.global poly_basemul_acc_rv64im_opt_c908
.align 2
poly_basemul_acc_rv64im_opt_c908:
    addi sp, sp, -8*15
    save_regs
    li a5, q32
    li a6, 64
                               // Instructions:    2
                               // Expected cycles: 2
                               // Expected IPC:    1.00
                               //
                               // Cycle bound:     2.0
                               // IPC bound:       1.00
                               //
                               // Wall time:     0.02s
                               // User time:     0.02s
                               //
                               // ----- cycle (expected) ------>
                               // 0                        25
                               // |------------------------|----
        lh x1, 2*1(x12)        // *.............................
        ld x4, 8*0(x13)        // .*............................

                                // ------ cycle (expected) ------>
                                // 0                        25
                                // |------------------------|-----
        // lh x1, 2*1(x12)      // *..............................
        // ld x4, 8*0(x13)      // .*.............................

        addi a6, a6, -1
poly_basemul_acc_rv64im_loop:
                                  // Instructions:    46
                                  // Expected cycles: 23
                                  // Expected IPC:    2.00
                                  //
                                  // Cycle bound:     25.0
                                  // IPC bound:       1.84
                                  //
                                  // Wall time:     16.85s
                                  // User time:     16.85s
                                  //
                                  // ----- cycle (expected) ------>
                                  // 0                        25
                                  // |------------------------|----
        lh x14, 2*0(x12)          // *.............................
        mul x22, x1, x4           // *.............................
        lh x25, 2*2(x12)          // .*............................
        addi x13, x13, 8*1        // .*............................
        lh x29, 2*3(x12)          // ..*...........................
        neg x24, x4               // ..*...........................
        lh x20, 2*0(x11)          // ...*..........................
        addi x12, x12, 2*4        // ...*..........................
        lh x8, 2*2(x11)           // ....*.........................
        srai x22, x22, 32         // ....*.........................
        lw x23, 4*1(x10)          // .....*........................
        mul x26, x29, x24         // .....*........................
        lw x17, 4*0(x10)          // ......*.......................
        mul x21, x20, x1          // ......*.......................
        lh x9, 2*3(x11)           // .......*......................
        addi x1, x22, 8           // .......*......................
        mulh x30, x1, x15         // ........*.....................
        mul x28, x20, x14         // ........*.....................
        lh x22, 2*1(x11)          // .........*....................
        srai x3, x26, 32          // .........*....................
        addi x6, x3, 8            // ..........*...................
        addi x11, x11, 2*4        // ..........*...................
        lh x1, 2*1(x12)           // ...........e..................
        mulh x7, x6, x15          // ...........*..................
        mul x19, x22, x30         // ............*.................
        lw x31, 4*2(x10)          // ............*.................
        mul x6, x22, x14          // .............*................
        mul x18, x8, x29          // .............*................
        mul x24, x8, x25          // ..............*...............
        ld x4, 8*0(x13)           // ..............e...............
        mul x29, x9, x25          // ...............*..............
        mul x3, x9, x7            // ...............*..............
        lw x27, 4*3(x10)          // ................*.............
        add x30, x19, x28         // ................*.............
        add x30, x30, x17         // .................*............
        add x21, x21, x6          // .................*............
        sw x30, 4*0(x10)          // ..................*...........
        add x19, x21, x23         // ..................*...........
        sw x19, 4*1(x10)          // ...................*..........
        add x22, x3, x24          // ...................*..........
        add x21, x22, x31         // ....................*.........
        add x29, x18, x29         // ....................*.........
        sw x21, 4*2(x10)          // .....................*........
        add x3, x29, x27          // .....................*........
        sw x3, 4*3(x10)           // ......................*.......
        addi x10, x10, 4*4        // ......................*.......

                                    // -------- cycle (expected) -------->
                                    // 0                        25
                                    // |------------------------|---------
        // lh x7, 2*0(x12)          // ............*......................
        // lh x28, 2*1(x12)         // e...........'..........~...........
        // ld x29, 8*0(x13)         // ...e........'.............~........
        // lh x5, 2*0(x11)          // ............'..*...................
        // lh x6, 2*1(x11)          // ............'........*.............
        // mul  x30, x28, x29       // ............*......................
        // srai x30, x30, 32        // ............'...*..................
        // addi x30, x30, 8         // ............'......*...............
        // mulh x30, x30, x15       // ............'.......*..............
        // lw  x17, 4*0(x10)        // ............'.....*................
        // mul x30, x6, x30         // .~..........'...........*..........
        // mul x31, x5, x7          // ............'.......*..............
        // add x30, x30, x31        // .....~......'...............*......
        // add x30, x30, x17        // ......~.....'................*.....
        // sw  x30, 4*0(x10)        // .......~....'.................*....
        // lw  x17, 4*1(x10)        // ............'....*.................
        // mul x30, x5, x28         // ............'.....*................
        // mul x31, x6, x7          // ..~.........'............*.........
        // add x30, x30, x31        // ......~.....'................*.....
        // add x30, x30, x17        // .......~....'.................*....
        // sw  x30, 4*1(x10)        // ........~...'..................*...
        // neg x29, x29             // ............'.*....................
        // lh x7, 2*2(x12)          // ............'*.....................
        // lh x28, 2*3(x12)         // ............'.*....................
        // lh x5, 2*2(x11)          // ............'...*..................
        // lh x6, 2*3(x11)          // ............'......*...............
        // mul  x30, x28, x29       // ............'....*.................
        // srai x30, x30, 32        // ............'........*.............
        // addi x30, x30, 8         // ............'.........*............
        // mulh x30, x30, x15       // ~...........'..........*...........
        // lw  x17, 4*2(x10)        // .~..........'...........*..........
        // mul x30, x6, x30         // ....~.......'..............*.......
        // mul x31, x5, x7          // ...~........'.............*........
        // add x30, x30, x31        // ........~...'..................*...
        // add x30, x30, x17        // .........~..'...................*..
        // sw  x30, 4*2(x10)        // ..........~.'....................*.
        // lw  x17, 4*3(x10)        // .....~......'...............*......
        // mul x30, x5, x28         // ..~.........'............*.........
        // mul x31, x6, x7          // ....~.......'..............*.......
        // add x30, x30, x31        // .........~..'...................*..
        // add x30, x30, x17        // ..........~.'....................*.
        // sw  x30, 4*3(x10)        // ...........~'.....................*
        // addi x10, x10, 4*4       // ...........~'.....................*
        // addi x11, x11, 2*4       // ............'.........*............
        // addi x12, x12, 2*4       // ............'..*...................
        // addi x13, x13, 8*1       // ............'*.....................

        addi a6, a6, -1
        bne a6, zero, poly_basemul_acc_rv64im_loop
                                  // Instructions:    44
                                  // Expected cycles: 22
                                  // Expected IPC:    2.00
                                  //
                                  // Cycle bound:     22.0
                                  // IPC bound:       2.00
                                  //
                                  // Wall time:     0.77s
                                  // User time:     0.77s
                                  //
                                  // ----- cycle (expected) ------>
                                  // 0                        25
                                  // |------------------------|----
        lh x22, 2*3(x12)          // *.............................
        mul x20, x1, x4           // *.............................
        lh x30, 2*0(x12)          // .*............................
        neg x4, x4                // .*............................
        lh x28, 2*2(x12)          // ..*...........................
        addi x13, x13, 8*1        // ..*...........................
        lh x25, 2*0(x11)          // ...*..........................
        addi x12, x12, 2*4        // ...*..........................
        lh x5, 2*2(x11)           // ....*.........................
        srai x17, x20, 32         // ....*.........................
        mul x21, x22, x4          // .....*........................
        lh x20, 2*1(x11)          // .....*........................
        lw x31, 4*0(x10)          // ......*.......................
        addi x4, x17, 8           // ......*.......................
        mul x27, x5, x28          // .......*......................
        mul x22, x5, x22          // .......*......................
        mul x14, x20, x30         // ........*.....................
        lh x19, 2*3(x11)          // ........*.....................
        mulh x23, x4, x15         // .........*....................
        srai x4, x21, 32          // .........*....................
        mul x8, x25, x1           // ..........*...................
        addi x1, x4, 8            // ..........*...................
        mul x21, x19, x28         // ...........*..................
        mulh x4, x1, x15          // ...........*..................
        mul x17, x25, x30         // ............*.................
        lw x30, 4*2(x10)          // ............*.................
        lw x28, 4*1(x10)          // .............*................
        mul x20, x20, x23         // .............*................
        lw x23, 4*3(x10)          // ..............*...............
        addi x11, x11, 2*4        // ..............*...............
        add x1, x8, x14           // ...............*..............
        mul x4, x19, x4           // ...............*..............
        add x22, x22, x21         // ................*.............
        add x1, x1, x28           // ................*.............
        sw x1, 4*1(x10)           // .................*............
        add x1, x22, x23          // .................*............
        sw x1, 4*3(x10)           // ..................*...........
        add x20, x20, x17         // ..................*...........
        add x1, x4, x27           // ...................*..........
        add x4, x20, x31          // ...................*..........
        add x1, x1, x30           // ....................*.........
        sw x4, 4*0(x10)           // ....................*.........
        sw x1, 4*2(x10)           // .....................*........
        addi x10, x10, 4*4        // .....................*........

                                   // ------ cycle (expected) ------>
                                   // 0                        25
                                   // |------------------------|-----
        // lh x14, 2*0(x12)        // .*.............................
        // mul x22, x1, x4         // *..............................
        // lh x25, 2*2(x12)        // ..*............................
        // addi x13, x13, 8*1      // ..*............................
        // lh x29, 2*3(x12)        // *..............................
        // neg x24, x4             // .*.............................
        // lh x20, 2*0(x11)        // ...*...........................
        // addi x12, x12, 2*4      // ...*...........................
        // lh x8, 2*2(x11)         // ....*..........................
        // srai x22, x22, 32       // ....*..........................
        // lw x23, 4*1(x10)        // .............*.................
        // mul x26, x29, x24       // .....*.........................
        // lw x17, 4*0(x10)        // ......*........................
        // mul x21, x20, x1        // ..........*....................
        // lh x9, 2*3(x11)         // ........*......................
        // addi x1, x22, 8         // ......*........................
        // mulh x30, x1, x15       // .........*.....................
        // mul x28, x20, x14       // ............*..................
        // lh x22, 2*1(x11)        // .....*.........................
        // srai x3, x26, 32        // .........*.....................
        // addi x6, x3, 8          // ..........*....................
        // addi x11, x11, 2*4      // ..............*................
        // mulh x7, x6, x15        // ...........*...................
        // mul x19, x22, x30       // .............*.................
        // lw x31, 4*2(x10)        // ............*..................
        // mul x6, x22, x14        // ........*......................
        // mul x18, x8, x29        // .......*.......................
        // mul x24, x8, x25        // .......*.......................
        // mul x29, x9, x25        // ...........*...................
        // mul x3, x9, x7          // ...............*...............
        // lw x27, 4*3(x10)        // ..............*................
        // add x30, x19, x28       // ..................*............
        // add x30, x30, x17       // ...................*...........
        // add x21, x21, x6        // ...............*...............
        // sw x30, 4*0(x10)        // ....................*..........
        // add x19, x21, x23       // ................*..............
        // sw x19, 4*1(x10)        // .................*.............
        // add x22, x3, x24        // ...................*...........
        // add x21, x22, x31       // ....................*..........
        // add x29, x18, x29       // ................*..............
        // sw x21, 4*2(x10)        // .....................*.........
        // add x3, x29, x27        // .................*.............
        // sw x3, 4*3(x10)         // ..................*............
        // addi x10, x10, 4*4      // .....................*.........

    restore_regs
    addi sp, sp, 8*15
ret